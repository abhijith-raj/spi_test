IPA function summary for Clock_Ip_DistributePll.part.0/63 inlinable
  global time:     349.340003
  self size:       66
  global size:     66
  min size:       63
  self stack:      0
  global stack:    0
    size:48.000000, time:200.598183
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_Command/26 function body not available
      freq:0.50 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant
    indirect call loop depth: 1 freq:2.75 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16

IPA function summary for Clock_Ip_GetPllStatus.part.0/62 inlinable
  global time:     276.905591
  self size:       22
  global size:     22
  min size:       19
  self stack:      0
  global stack:    0
    size:14.000000, time:124.730313
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 1 freq:8.83 size: 5 time: 17

IPA function summary for Clock_Ip_TimeoutExpired/25 inlinable
  global time:     19.000000
  self size:       11
  global size:     11
  min size:       7
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/61 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for Clock_Ip_StartTimeout/24 inlinable
  global time:     30.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
  calls:
    OsIf_MicrosToTicks/60 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
    OsIf_GetCounter/59 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant

IPA function summary for Clock_Ip_ReportClockErrors/23 inlinable
  global time:     20.000000
  self size:       9
  global size:     9
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_EnableSircInStandby/22 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableSircInStandbyMode/58 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_DisableSircInStandby/21 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableSircInStandbyMode/57 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_EnableFircInStandby/20 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableFircInStandbyMode/56 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_DisableFircInStandby/19 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableFircInStandbyMode/55 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_SetWaitStates/18 inlinable
  global time:     94.000000
  self size:       29
  global size:     29
  min size:       26
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_SetFlashWaitStates/52 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_SetRamWaitStates/51 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_EnableModuleClock/17 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableModuleClock/16 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_InstallNotificationsCallback/15 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_ClearClockMonitorStatus/14 inlinable
  global time:     24.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_GetClockMonitorStatus/13 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableClockMonitor/12 inlinable
  global time:     24.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_DistributePll/11 inlinable
  global time:     12.000000
  self size:       7
  global size:     7
  min size:       4
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll.part.0/63 function not considered for inlining
      freq:0.70 loop depth: 0 size: 1 time: 10 callee size:33 stack: 0

IPA function summary for Clock_Ip_GetPllStatus/10 inlinable
  global time:     301.101548
  self size:       28
  global size:     28
  min size:       25
  self stack:      0
  global stack:    0
    size:18.000000, time:143.426270
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetPllStatus.part.0/62 function not considered for inlining
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size:11 stack: 0
    indirect call loop depth: 1 freq:8.83 size: 5 time: 17

IPA function summary for Clock_Ip_InitClock/9 inlinable
  global time:     1243.163383
  self size:       274
  global size:     274
  min size:       256
  self stack:      0
  global stack:    0
    size:182.500000, time:523.178992
    size:18.500000, time:52.548173,  executed if:(not inlined)
  calls:
    Clock_Ip_Command/26 function body not available
      freq:0.50 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant
    Clock_Ip_SetWaitStates/18 function not considered for inlining
      freq:1.00 loop depth: 0 size: 1 time: 10 callee size:14 stack: 0
    Clock_Ip_UpdateDriverContext/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:13 stack: 0
    Clock_Ip_ResetClockConfiguration/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:33 stack: 0
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:5.34 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 5 time: 17
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 5 time: 17
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.80 size: 4 time: 16

IPA function summary for Clock_Ip_Init/8 inlinable
  global time:     21.379000
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:3.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll/11 function not considered for inlining
      freq:0.11 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0
    Clock_Ip_GetPllStatus/10 function not considered for inlining
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size:14 stack: 0
    Clock_Ip_InitClock/9 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:137 stack: 0

IPA function summary for Clock_Ip_ResetClockConfiguration/7 inlinable
  global time:     340.462648
  self size:       67
  global size:     67
  min size:       60
  self stack:      0
  global stack:    0
    size:43.500000, time:136.457696
    size:6.500000, time:9.545605,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 88] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 88] changed)
  loop iterations:(op0[ref offset: 88] changed)
  calls:
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16

IPA function summary for Clock_Ip_CallEmptyCallbacks/6 inlinable
  global time:     143.000000
  self size:       90
  global size:     90
  min size:       87
  self stack:      0
  global stack:    0
    size:20.000000, time:11.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17

IPA function summary for Clock_Ip_UpdateDriverContext/5 inlinable
  global time:     257.545456
  self size:       27
  global size:     27
  min size:       22
  self stack:      0
  global stack:    0
    size:14.500000, time:115.227273
    size:5.500000, time:23.227273,  executed if:(not inlined)
  calls:
    Clock_Ip_CallEmptyCallbacks/6 function not considered for inlining
      freq:1.00 loop depth: 0 size: 1 time: 10 callee size:45 stack: 0
    Clock_Ip_SetExternalSignalFrequency/49 function body not available
      freq:8.09 loop depth: 1 size: 3 time: 12
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_NotificatonsEmptyCallback/4 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 3335.897629 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Clock_Ip_DistributePll.part.0/63.
Enqueueing calls in Clock_Ip_GetPllStatus.part.0/62.
Enqueueing calls in Clock_Ip_TimeoutExpired/25.
Enqueueing calls in Clock_Ip_StartTimeout/24.
Enqueueing calls in Clock_Ip_ReportClockErrors/23.
Enqueueing calls in Clock_Ip_EnableSircInStandby/22.
Enqueueing calls in Clock_Ip_DisableSircInStandby/21.
Enqueueing calls in Clock_Ip_EnableFircInStandby/20.
Enqueueing calls in Clock_Ip_DisableFircInStandby/19.
Enqueueing calls in Clock_Ip_SetWaitStates/18.
Enqueueing calls in Clock_Ip_EnableModuleClock/17.
Enqueueing calls in Clock_Ip_DisableModuleClock/16.
Enqueueing calls in Clock_Ip_InstallNotificationsCallback/15.
Enqueueing calls in Clock_Ip_ClearClockMonitorStatus/14.
Enqueueing calls in Clock_Ip_GetClockMonitorStatus/13.
Enqueueing calls in Clock_Ip_DisableClockMonitor/12.
Enqueueing calls in Clock_Ip_DistributePll/11.
Enqueueing calls in Clock_Ip_GetPllStatus/10.
Enqueueing calls in Clock_Ip_InitClock/9.
Enqueueing calls in Clock_Ip_Init/8.
Enqueueing calls in Clock_Ip_ResetClockConfiguration/7.
Enqueueing calls in Clock_Ip_CallEmptyCallbacks/6.
Enqueueing calls in Clock_Ip_UpdateDriverContext/5.
Enqueueing calls in Clock_Ip_NotificatonsEmptyCallback/4.

Considering Clock_Ip_GetPllStatus.part.0/62 with 22 size
 to be inlined into Clock_Ip_GetPllStatus/10 in unknown:0
 Estimated badness is -0.033987, frequency 0.50.

Considering Clock_Ip_UpdateDriverContext/5 with 27 size
 to be inlined into Clock_Ip_InitClock/9 in ../RTD/src/Clock_Ip.c:737
 Estimated badness is -0.023284, frequency 1.00.

Considering Clock_Ip_SetWaitStates/18 with 29 size
 to be inlined into Clock_Ip_InitClock/9 in ../RTD/src/Clock_Ip.c:817
 Estimated badness is -0.006019, frequency 1.00.
node context cache: 0 hits, 0 misses, 5 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:

Inlining Clock_Ip_DistributePll.part.0/63 size 66.
 Called once from Clock_Ip_DistributePll/11 7 insns.
 Inlined into Clock_Ip_DistributePll/11 which now has 69 size

Inlining Clock_Ip_ResetClockConfiguration/7 size 67.
 Called once from Clock_Ip_InitClock/9 319 insns.
 Inlined into Clock_Ip_InitClock/9 which now has 377 size

Inlining Clock_Ip_CallEmptyCallbacks/6 size 90.
 Called once from Clock_Ip_UpdateDriverContext/5 27 insns.
 Inlined into Clock_Ip_UpdateDriverContext/5 which now has 27 size
Overall time estimate: 2998.469963 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :       18 calls, 23.940909 freq, 0 count
--param max-inline-insns-auto limit reached       :        2 calls, 1.330000 freq, 0 count
call is unlikely and code size would grow         :        1 calls, 0.108900 freq, 0 count
IPA function summary for Clock_Ip_TimeoutExpired/25 inlinable
  global time:     19.000000
  self size:       11
  global size:     11
  min size:       7
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/61 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for Clock_Ip_StartTimeout/24 inlinable
  global time:     30.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
  calls:
    OsIf_MicrosToTicks/60 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
    OsIf_GetCounter/59 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant

IPA function summary for Clock_Ip_ReportClockErrors/23 inlinable
  global time:     20.000000
  self size:       9
  global size:     9
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_EnableSircInStandby/22 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableSircInStandbyMode/58 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_DisableSircInStandby/21 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableSircInStandbyMode/57 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_EnableFircInStandby/20 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableFircInStandbyMode/56 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_DisableFircInStandby/19 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableFircInStandbyMode/55 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Clock_Ip_EnableModuleClock/17 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableModuleClock/16 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_InstallNotificationsCallback/15 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_ClearClockMonitorStatus/14 inlinable
  global time:     24.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_GetClockMonitorStatus/13 inlinable
  global time:     25.000000
  self size:       14
  global size:     14
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17

IPA function summary for Clock_Ip_DisableClockMonitor/12 inlinable
  global time:     24.000000
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16

IPA function summary for Clock_Ip_DistributePll/11 inlinable
  global time:     248.138002
  self size:       7
  global size:     69
  min size:       66
  self stack:      0
  global stack:    0
  estimated growth:3
    size:51.000000, time:143.418728
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll.part.0/63 inlined
      freq:0.70
      Stack frame offset 0, callee self size 0
      Clock_Ip_Command/26 function body not available
        freq:0.35 loop depth: 0 size: 3 time: 12
         op1 is compile time invariant
      indirect call loop depth: 1 freq:1.93 size: 4 time: 16
      indirect call loop depth: 1 freq:2.83 size: 4 time: 16
      indirect call loop depth: 1 freq:1.40 size: 4 time: 16

IPA function summary for Clock_Ip_GetPllStatus/10 inlinable
  global time:     433.054345
  self size:       28
  global size:     45
  min size:       42
  self stack:      0
  global stack:    0
  estimated growth:23
    size:32.000000, time:205.791428
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetPllStatus.part.0/62 inlined
      freq:0.50
      Stack frame offset 0, callee self size 0
      indirect call loop depth: 1 freq:4.42 size: 5 time: 17
    indirect call loop depth: 1 freq:8.83 size: 5 time: 17

IPA function summary for Clock_Ip_InitClock/9 inlinable
  global time:     1998.898613
  self size:       274
  global size:     463
  min size:       444
  self stack:      0
  global stack:    0
  estimated growth:254
    size:265.000000, time:790.863962
    size:18.500000, time:52.548173,  executed if:(not inlined)
  calls:
    Clock_Ip_Command/26 function body not available
      freq:0.50 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant
    Clock_Ip_SetWaitStates/18 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
      Clock_Ip_SetFlashWaitStates/52 function body not available
        freq:1.00 loop depth: 0 size: 1 time: 10
      Clock_Ip_SetRamWaitStates/51 function body not available
        freq:1.00 loop depth: 0 size: 1 time: 10
      indirect call loop depth: 0 freq:1.00 size: 5 time: 17
      indirect call loop depth: 0 freq:1.00 size: 5 time: 17
      indirect call loop depth: 0 freq:1.00 size: 5 time: 17
      indirect call loop depth: 0 freq:1.00 size: 5 time: 17
    Clock_Ip_UpdateDriverContext/5 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
      Clock_Ip_CallEmptyCallbacks/6 inlined
        freq:1.00
        Stack frame offset 0, callee self size 0
        indirect call loop depth: 0 freq:0.50 size: 5 time: 17
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 5 time: 17
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 4 time: 16
        indirect call loop depth: 0 freq:0.50 size: 5 time: 17
      Clock_Ip_SetExternalSignalFrequency/49 function body not available
        freq:8.09 loop depth: 1 size: 3 time: 12
      Clock_Ip_Command/26 function body not available
        freq:1.00 loop depth: 0 size: 3 time: 12
         op1 is compile time invariant
    Clock_Ip_ResetClockConfiguration/7 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
      indirect call loop depth: 1 freq:2.00 size: 4 time: 16
      indirect call loop depth: 1 freq:1.00 size: 4 time: 16
      indirect call loop depth: 1 freq:1.00 size: 4 time: 16
      indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    Clock_Ip_Command/26 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op1 is compile time invariant
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:5.34 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 5 time: 17
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 5 time: 17
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.80 size: 4 time: 16

IPA function summary for Clock_Ip_Init/8 inlinable
  global time:     21.379000
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:3.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll/11 call is unlikely and code size would grow
      freq:0.11 loop depth: 0 size: 1 time: 10 callee size:34 stack: 0
    Clock_Ip_GetPllStatus/10 --param max-inline-insns-auto limit reached
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size:22 stack: 0
    Clock_Ip_InitClock/9 --param max-inline-insns-auto limit reached
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:231 stack: 0

IPA function summary for Clock_Ip_NotificatonsEmptyCallback/4 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Clock_Ip_DistributePll.part.0/63 (Clock_Ip_DistributePll.part.0) @06f47620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_aeSourceTypeClockName/44 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8SelectorCallbackIndex/45 (read) Clock_Ip_axSelectorCallbacks/46 (read) Clock_Ip_pxConfig/0 (read) Clock_Ip_driverContext/1 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8GateCallbackIndex/47 (read) Clock_Ip_axGateCallbacks/48 (read) Clock_Ip_pxConfig/0 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Function Clock_Ip_DistributePll.part.0/63 is inline copy in Clock_Ip_DistributePll/11
  Availability: local
  Function flags: count:118111600 (estimated locally) body local split_part optimize_size
  Called by: Clock_Ip_DistributePll/11 (inlined) (118111600 (estimated locally),0.70 per call) 
  Calls: Clock_Ip_Command/26 (59055800 (estimated locally),0.35 per call) 
   Indirect call(324914280 (estimated locally),1.93 per call)  Num speculative call targets: 0
   Indirect call(477815112 (estimated locally),2.83 per call)  Num speculative call targets: 0
   Indirect call(236223196 (estimated locally),1.40 per call)  Num speculative call targets: 0
Clock_Ip_GetPllStatus.part.0/62 (Clock_Ip_GetPllStatus.part.0) @06d31540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_aeHwDfsName/54 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8FractionalDividerCallbackIndex/42 (read) Clock_Ip_axFracDivCallbacks/43 (read) Clock_Ip_driverContext/1 (read) 
  Referring: 
  Function Clock_Ip_GetPllStatus.part.0/62 is inline copy in Clock_Ip_GetPllStatus/10
  Availability: local
  Function flags: count:57431766 (estimated locally) body local split_part optimize_size
  Called by: Clock_Ip_GetPllStatus/10 (inlined) (57431766 (estimated locally),0.50 per call) 
  Calls: 
   Indirect call(507343022 (estimated locally),4.42 per call)  Num speculative call targets: 0
OsIf_GetElapsed/61 (OsIf_GetElapsed) @06dcd700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TimeoutExpired/25 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_MicrosToTicks/60 (OsIf_MicrosToTicks) @06dcd540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/24 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetCounter/59 (OsIf_GetCounter) @06dcd460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/24 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
EnableSircInStandbyMode/58 (EnableSircInStandbyMode) @06dcd1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableSircInStandby/22 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
DisableSircInStandbyMode/57 (DisableSircInStandbyMode) @06dcd000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_DisableSircInStandby/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
EnableFircInStandbyMode/56 (EnableFircInStandbyMode) @06db9620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableFircInStandby/20 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
DisableFircInStandbyMode/55 (DisableFircInStandbyMode) @06db9ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_DisableFircInStandby/19 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_aeHwDfsName/54 (Clock_Ip_aeHwDfsName) @06dbe900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus.part.0/62 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeHwPllName/53 (Clock_Ip_aeHwPllName) @06dbe870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus/10 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_SetFlashWaitStates/52 (Clock_Ip_SetFlashWaitStates) @06db9380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_SetWaitStates/18 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_SetRamWaitStates/51 (Clock_Ip_SetRamWaitStates) @06db92a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_SetWaitStates/18 (118111600 (estimated locally),1.00 per call) 
  Calls: 
FunctionWasCalled.0/50 (FunctionWasCalled) @06db6990
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_CallEmptyCallbacks/6 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_SetExternalSignalFrequency/49 (Clock_Ip_SetExternalSignalFrequency) @06d31a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_UpdateDriverContext/5 (955630225 (estimated locally),8.09 per call) 
  Calls: 
Clock_Ip_axGateCallbacks/48 (Clock_Ip_axGateCallbacks) @06dabca8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_EnableModuleClock/17 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8GateCallbackIndex/47 (Clock_Ip_au8GateCallbackIndex) @06dabc60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DisableModuleClock/16 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_EnableModuleClock/17 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axSelectorCallbacks/46 (Clock_Ip_axSelectorCallbacks) @06dabbd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_DistributePll.part.0/63 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8SelectorCallbackIndex/45 (Clock_Ip_au8SelectorCallbackIndex) @06dabb88
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_DistributePll.part.0/63 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeSourceTypeClockName/44 (Clock_Ip_aeSourceTypeClockName) @06dabb40
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll.part.0/63 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axFracDivCallbacks/43 (Clock_Ip_axFracDivCallbacks) @06daba68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_GetPllStatus.part.0/62 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8FractionalDividerCallbackIndex/42 (Clock_Ip_au8FractionalDividerCallbackIndex) @06daba20
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_GetPllStatus.part.0/62 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPllCallbacks/41 (Clock_Ip_axPllCallbacks) @06dab8b8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_GetPllStatus/10 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PllCallbackIndex/40 (Clock_Ip_au8PllCallbackIndex) @06dab870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_GetPllStatus/10 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerCallbacks/39 (Clock_Ip_axDividerCallbacks) @06dab798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerCallbackIndex/38 (Clock_Ip_au8DividerCallbackIndex) @06dab750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerTriggerCallbacks/37 (Clock_Ip_axDividerTriggerCallbacks) @06dab6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerTriggerCallbackIndex/36 (Clock_Ip_au8DividerTriggerCallbackIndex) @06dab678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPcfsCallbacks/35 (Clock_Ip_axPcfsCallbacks) @06dab5e8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PcfsCallbackIndex/34 (Clock_Ip_au8PcfsCallbackIndex) @06dab5a0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axExtOscCallbacks/33 (Clock_Ip_axExtOscCallbacks) @06dab4c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8XoscCallbackIndex/32 (Clock_Ip_au8XoscCallbackIndex) @06dab480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axIntOscCallbacks/31 (Clock_Ip_axIntOscCallbacks) @06dab3f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8IrcoscCallbackIndex/30 (Clock_Ip_au8IrcoscCallbackIndex) @06dab3a8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axCmuCallbacks/29 (Clock_Ip_axCmuCallbacks) @06dab2d0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_GetClockMonitorStatus/13 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DisableClockMonitor/12 (read) Clock_Ip_CallEmptyCallbacks/6 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_ClearClockMonitorStatus/14 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8CmuCallbackIndex/28 (Clock_Ip_au8CmuCallbackIndex) @06dab288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DisableClockMonitor/12 (read) Clock_Ip_GetClockMonitorStatus/13 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_ClearClockMonitorStatus/14 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/27 (Clock_Ip_au8ClockFeatures) @06dab240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DisableClockMonitor/12 (read) Clock_Ip_GetClockMonitorStatus/13 (read) Clock_Ip_ClearClockMonitorStatus/14 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_GetPllStatus/10 (read) Clock_Ip_ResetClockConfiguration/7 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_GetPllStatus.part.0/62 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_EnableModuleClock/17 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_Command/26 (Clock_Ip_Command) @06d312a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableSircInStandby/22 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DisableSircInStandby/21 (1073741824 (estimated locally),1.00 per call) Clock_Ip_EnableFircInStandby/20 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DisableFircInStandby/19 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DistributePll.part.0/63 (59055800 (estimated locally),0.35 per call) Clock_Ip_InitClock/9 (59055800 (estimated locally),0.50 per call) Clock_Ip_InitClock/9 (118111600 (estimated locally),1.00 per call) Clock_Ip_UpdateDriverContext/5 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_TimeoutExpired/25 (Clock_Ip_TimeoutExpired) @06d31c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/61 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_StartTimeout/24 (Clock_Ip_StartTimeout) @06d319a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_MicrosToTicks/60 (1073741824 (estimated locally),1.00 per call) OsIf_GetCounter/59 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ReportClockErrors/23 (Clock_Ip_ReportClockErrors) @06d31700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_EnableSircInStandby/22 (Clock_Ip_EnableSircInStandby) @06d31460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EnableSircInStandbyMode/58 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/26 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableSircInStandby/21 (Clock_Ip_DisableSircInStandby) @06d311c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DisableSircInStandbyMode/57 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/26 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_EnableFircInStandby/20 (Clock_Ip_EnableFircInStandby) @06d2fd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EnableFircInStandbyMode/56 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/26 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableFircInStandby/19 (Clock_Ip_DisableFircInStandby) @06d2f7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DisableFircInStandbyMode/55 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/26 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_SetWaitStates/18 (Clock_Ip_SetWaitStates) @06d2f2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_pfkNotificationsCallback/3 (read) Clock_Ip_pfkNotificationsCallback/3 (read) Clock_Ip_pfkNotificationsCallback/3 (read) Clock_Ip_pfkNotificationsCallback/3 (read) 
  Referring: 
  Function Clock_Ip_SetWaitStates/18 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (inlined) (118111600 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_SetFlashWaitStates/52 (118111600 (estimated locally),1.00 per call) Clock_Ip_SetRamWaitStates/51 (118111600 (estimated locally),1.00 per call) 
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_EnableModuleClock/17 (Clock_Ip_EnableModuleClock) @06d2fee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8GateCallbackIndex/47 (read) Clock_Ip_axGateCallbacks/48 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_DisableModuleClock/16 (Clock_Ip_DisableModuleClock) @06d2fc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8GateCallbackIndex/47 (read) Clock_Ip_axGateCallbacks/48 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_InstallNotificationsCallback/15 (Clock_Ip_InstallNotificationsCallback) @06d2f9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (write) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_ClearClockMonitorStatus/14 (Clock_Ip_ClearClockMonitorStatus) @06d2f700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_GetClockMonitorStatus/13 (Clock_Ip_GetClockMonitorStatus) @06d2f460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_DisableClockMonitor/12 (Clock_Ip_DisableClockMonitor) @06d2f1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
Clock_Ip_DistributePll/11 (Clock_Ip_DistributePll) @06cafee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:168730857 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (116930483 (estimated locally),0.11 per call) 
  Calls: Clock_Ip_DistributePll.part.0/63 (inlined) (118111600 (estimated locally),0.70 per call) 
Clock_Ip_GetPllStatus/10 (Clock_Ip_GetPllStatus) @06caf9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_aeHwPllName/53 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8PllCallbackIndex/40 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_driverContext/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:114863530 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (354334800 (estimated locally),0.33 per call) 
  Calls: Clock_Ip_GetPllStatus.part.0/62 (inlined) (57431766 (estimated locally),0.50 per call) 
   Indirect call(1014686026 (estimated locally),8.83 per call)  Num speculative call targets: 0
Clock_Ip_InitClock/9 (Clock_Ip_InitClock) @06caf460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (write) Clock_Ip_pxConfig/0 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8IrcoscCallbackIndex/30 (read) Clock_Ip_axIntOscCallbacks/31 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8XoscCallbackIndex/32 (read) Clock_Ip_axExtOscCallbacks/33 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8PcfsCallbackIndex/34 (read) Clock_Ip_axPcfsCallbacks/35 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8DividerTriggerCallbackIndex/36 (read) Clock_Ip_axDividerTriggerCallbacks/37 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8DividerCallbackIndex/38 (read) Clock_Ip_axDividerCallbacks/39 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8DividerTriggerCallbackIndex/36 (read) Clock_Ip_axDividerTriggerCallbacks/37 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8PllCallbackIndex/40 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8XoscCallbackIndex/32 (read) Clock_Ip_axExtOscCallbacks/33 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8PllCallbackIndex/40 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8FractionalDividerCallbackIndex/42 (read) Clock_Ip_axFracDivCallbacks/43 (read) Clock_Ip_driverContext/1 (write) Clock_Ip_driverContext/1 (write) Clock_Ip_driverContext/1 (write) Clock_Ip_driverContext/1 (write) Clock_Ip_aeSourceTypeClockName/44 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8SelectorCallbackIndex/45 (read) Clock_Ip_axSelectorCallbacks/46 (read) Clock_Ip_driverContext/1 (write) Clock_Ip_driverContext/1 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8GateCallbackIndex/47 (read) Clock_Ip_axGateCallbacks/48 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8CmuCallbackIndex/28 (read) Clock_Ip_axCmuCallbacks/29 (read) 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Command/26 (59055800 (estimated locally),0.50 per call) Clock_Ip_SetWaitStates/18 (inlined) (118111600 (estimated locally),1.00 per call) Clock_Ip_UpdateDriverContext/5 (inlined) (118111600 (estimated locally),1.00 per call) Clock_Ip_ResetClockConfiguration/7 (inlined) (118111600 (estimated locally),1.00 per call) Clock_Ip_Command/26 (118111600 (estimated locally),1.00 per call) 
   Indirect call(236223196 (estimated locally),2.00 per call)  Num speculative call targets: 0
   Indirect call(477815112 (estimated locally),4.05 per call)  Num speculative call targets: 0
   Indirect call(630715945 (estimated locally),5.34 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(236258635 (estimated locally),2.00 per call)  Num speculative call targets: 0
   Indirect call(472446391 (estimated locally),4.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(955630225 (estimated locally),8.09 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(236258635 (estimated locally),2.00 per call)  Num speculative call targets: 0
   Indirect call(236258635 (estimated locally),2.00 per call)  Num speculative call targets: 0
   Indirect call(330712475 (estimated locally),2.80 per call)  Num speculative call targets: 0
Clock_Ip_Init/8 (Clock_Ip_Init) @06cafe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_driverContext/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_DistributePll/11 (116930483 (estimated locally),0.11 per call) Clock_Ip_GetPllStatus/10 (354334800 (estimated locally),0.33 per call) Clock_Ip_InitClock/9 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ResetClockConfiguration/7 (Clock_Ip_ResetClockConfiguration) @06cafb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8SelectorCallbackIndex/45 (read) Clock_Ip_axSelectorCallbacks/46 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8FractionalDividerCallbackIndex/42 (read) Clock_Ip_axFracDivCallbacks/43 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8PllCallbackIndex/40 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_au8ClockFeatures/27 (read) Clock_Ip_au8XoscCallbackIndex/32 (read) Clock_Ip_axExtOscCallbacks/33 (read) 
  Referring: 
  Function Clock_Ip_ResetClockConfiguration/7 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (inlined) (118111600 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(236258635 (estimated locally),2.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(118111600 (estimated locally),1.00 per call)  Num speculative call targets: 0
   Indirect call(955630225 (estimated locally),8.09 per call)  Num speculative call targets: 0
Clock_Ip_CallEmptyCallbacks/6 (Clock_Ip_CallEmptyCallbacks) @06caf8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: FunctionWasCalled.0/50 (read) FunctionWasCalled.0/50 (write) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_axCmuCallbacks/29 (read) Clock_Ip_axDividerCallbacks/39 (read) Clock_Ip_axDividerTriggerCallbacks/37 (read) Clock_Ip_axExtOscCallbacks/33 (read) Clock_Ip_axFracDivCallbacks/43 (read) Clock_Ip_axFracDivCallbacks/43 (read) Clock_Ip_axGateCallbacks/48 (read) Clock_Ip_axGateCallbacks/48 (read) Clock_Ip_axIntOscCallbacks/31 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_axPllCallbacks/41 (read) Clock_Ip_axSelectorCallbacks/46 (read) Clock_Ip_axPcfsCallbacks/35 (read) 
  Referring: 
  Function Clock_Ip_CallEmptyCallbacks/6 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_UpdateDriverContext/5 (inlined) (118111600 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
   Indirect call(59055800 (estimated locally),0.50 per call)  Num speculative call targets: 0
Clock_Ip_UpdateDriverContext/5 (Clock_Ip_UpdateDriverContext) @06caf620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_pxConfig/0 (read) Clock_Ip_FreqIds/2 (write) 
  Referring: 
  Function Clock_Ip_UpdateDriverContext/5 is inline copy in Clock_Ip_InitClock/9
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (inlined) (118111600 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_CallEmptyCallbacks/6 (inlined) (118111600 (estimated locally),1.00 per call) Clock_Ip_SetExternalSignalFrequency/49 (955630225 (estimated locally),8.09 per call) Clock_Ip_Command/26 (118111600 (estimated locally),1.00 per call) 
Clock_Ip_NotificatonsEmptyCallback/4 (Clock_Ip_NotificatonsEmptyCallback) @06caf380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_pfkNotificationsCallback/3 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_pfkNotificationsCallback/3 (Clock_Ip_pfkNotificationsCallback) @06cb0240
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_NotificatonsEmptyCallback/4 (addr) 
  Referring: Clock_Ip_InstallNotificationsCallback/15 (write) Clock_Ip_SetWaitStates/18 (read) Clock_Ip_SetWaitStates/18 (read) Clock_Ip_SetWaitStates/18 (read) Clock_Ip_SetWaitStates/18 (read) Clock_Ip_ReportClockErrors/23 (read) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_FreqIds/2 (Clock_Ip_FreqIds) @06ca9ca8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Clock_Ip_UpdateDriverContext/5 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_driverContext/1 (Clock_Ip_driverContext) @06ca9c60
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_GetPllStatus/10 (read) Clock_Ip_InitClock/9 (write) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_InitClock/9 (write) Clock_Ip_InitClock/9 (write) Clock_Ip_InitClock/9 (write) Clock_Ip_InitClock/9 (write) Clock_Ip_GetPllStatus.part.0/62 (read) Clock_Ip_Init/8 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxConfig/0 (Clock_Ip_pxConfig) @06ca9bd0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Clock_Ip_DisableFircInStandby/19 (read) Clock_Ip_DisableSircInStandby/21 (read) Clock_Ip_EnableFircInStandby/20 (read) Clock_Ip_InitClock/9 (read) Clock_Ip_DistributePll/11 (read) Clock_Ip_InitClock/9 (write) Clock_Ip_UpdateDriverContext/5 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_DistributePll.part.0/63 (read) Clock_Ip_EnableSircInStandby/22 (read) 
  Availability: available
  Varpool flags:

;; Function Clock_Ip_NotificatonsEmptyCallback (Clock_Ip_NotificatonsEmptyCallback, funcdef_no=0, decl_uid=6463, cgraph_uid=1, symbol_order=4)

Clock_Ip_NotificatonsEmptyCallback (Clock_Ip_NotificationType Notification, Clock_Ip_NameType ClockName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_InitClock (Clock_Ip_InitClock, funcdef_no=5, decl_uid=6131, cgraph_uid=6, symbol_order=9)


Symbols to be put in SSA form
{ D.6691 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 82
Number of blocks to update: 81 ( 99%)


Merging blocks 5 and 55
Removing basic block 10
Merging blocks 29 and 81
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 67
Removing basic block 68
Removing basic block 72
Removing basic block 75
Removing basic block 76
Removing basic block 80
;; 22 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
;;
;; Loop 15
;;  header 57, latch 56
;;  depth 1, outer 0
;;  nodes: 57 56
;;
;; Loop 14
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54
;;
;; Loop 13
;;  header 52, latch 51
;;  depth 1, outer 0
;;  nodes: 52 51 49 50 48
;;
;; Loop 12
;;  header 46, latch 45
;;  depth 1, outer 0
;;  nodes: 46 45
;;
;; Loop 11
;;  header 44, latch 43
;;  depth 1, outer 0
;;  nodes: 44 43
;;
;; Loop 10
;;  header 42, latch 41
;;  depth 1, outer 0
;;  nodes: 42 41
;;
;; Loop 9
;;  header 40, latch 39
;;  depth 1, outer 0
;;  nodes: 40 39
;;
;; Loop 8
;;  header 38, latch 37
;;  depth 1, outer 0
;;  nodes: 38 37
;;
;; Loop 7
;;  header 36, latch 35
;;  depth 1, outer 0
;;  nodes: 36 35
;;
;; Loop 6
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33
;;
;; Loop 5
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31
;;
;; Loop 4
;;  header 30, latch 29
;;  depth 1, outer 0
;;  nodes: 30 29
;;
;; Loop 20
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27
;;
;; Loop 21
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22
;;
;; Loop 3
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17
;;
;; Loop 16
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 17
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 18
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 19
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 5 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 18 }
;; 17 succs { 18 }
;; 18 succs { 17 20 }
;; 19 succs { 20 }
;; 20 succs { 19 21 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 22 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 27 30 }
;; 29 succs { 30 }
;; 30 succs { 29 32 }
;; 31 succs { 32 }
;; 32 succs { 31 34 }
;; 33 succs { 34 }
;; 34 succs { 33 36 }
;; 35 succs { 36 }
;; 36 succs { 35 38 }
;; 37 succs { 38 }
;; 38 succs { 37 40 }
;; 39 succs { 40 }
;; 40 succs { 39 42 }
;; 41 succs { 42 }
;; 42 succs { 41 44 }
;; 43 succs { 44 }
;; 44 succs { 43 46 }
;; 45 succs { 46 }
;; 46 succs { 45 47 }
;; 47 succs { 52 }
;; 48 succs { 49 50 }
;; 49 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 52 }
;; 52 succs { 48 53 }
;; 53 succs { 55 59 }
;; 54 succs { 55 }
;; 55 succs { 54 57 }
;; 56 succs { 57 }
;; 57 succs { 56 58 }
;; 58 succs { 59 }
;; 59 succs { 1 }
cyclic probability of bb 4 is 0.800000; turning freq 0.700000 to 3.500000
cyclic probability of bb 7 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 10 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 13 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 16 is 0.666700; turning freq 1.000000 to 3.000300
cyclic probability of bb 18 is 0.666700; turning freq 1.000000 to 3.000300
cyclic probability of bb 20 is 0.666700; turning freq 1.000000 to 3.000300
cyclic probability of bb 23 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 28 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 30 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 32 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 34 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 36 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 38 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 40 is 0.800000; turning freq 1.000000 to 5.000000
cyclic probability of bb 42 is 0.666700; turning freq 1.000000 to 3.000300
cyclic probability of bb 44 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 46 is 0.500000; turning freq 1.000000 to 2.000000
cyclic probability of bb 52 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 55 is 0.890000; turning freq 0.500000 to 4.545455
cyclic probability of bb 57 is 0.800000; turning freq 0.500000 to 2.500000
Clock_Ip_InitClock (const struct Clock_Ip_ClockConfigType * Config)
{
  static boolean FunctionWasCalled = 0;
  uint8 Index;
  uint32 CallbackIndex;
  uint32 Index;
  uint32 Index;
  uint32 CallbackIndex;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.0_1;
  <unnamed type> _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  void (*<T6cc>) (const struct Clock_Ip_CmuConfigType *) _6;
  const struct Clock_Ip_CmuConfigType * _7;
  unsigned char _8;
  long unsigned int _9;
  <unnamed type> _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  void (*<T653>) (const struct Clock_Ip_IrcoscConfigType *) _14;
  const struct Clock_Ip_IrcoscConfigType * _15;
  unsigned char _16;
  long unsigned int _17;
  <unnamed type> _18;
  unsigned char _19;
  int _20;
  unsigned char _21;
  void (*<T662>) (const struct Clock_Ip_XoscConfigType *) _22;
  const struct Clock_Ip_XoscConfigType * _23;
  unsigned char _24;
  long unsigned int _25;
  <unnamed type> _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  void (*<T6dd>) (const struct Clock_Ip_PcfsConfigType *, uint32) _30;
  const struct Clock_Ip_PcfsConfigType * _31;
  unsigned char _32;
  long unsigned int _33;
  <unnamed type> _34;
  unsigned char _35;
  int _36;
  unsigned char _37;
  void (*<T67b>) (const struct Clock_Ip_DividerTriggerConfigType *) _38;
  const struct Clock_Ip_DividerTriggerConfigType * _39;
  unsigned char _40;
  long unsigned int _41;
  <unnamed type> _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  void (*<T670>) (const struct Clock_Ip_DividerConfigType *) _46;
  const struct Clock_Ip_DividerConfigType * _47;
  unsigned char _48;
  long unsigned int _49;
  <unnamed type> _50;
  unsigned char _51;
  int _52;
  unsigned char _53;
  void (*<T67b>) (const struct Clock_Ip_DividerTriggerConfigType *) _54;
  const struct Clock_Ip_DividerTriggerConfigType * _55;
  unsigned char _56;
  long unsigned int _57;
  <unnamed type> _58;
  unsigned char _59;
  int _60;
  unsigned char _61;
  void (*<T698>) (const struct Clock_Ip_PllConfigType *) _62;
  const struct Clock_Ip_PllConfigType * _63;
  unsigned char _64;
  long unsigned int _65;
  <unnamed type> _66;
  unsigned char _67;
  int _68;
  unsigned char _69;
  void (*<T6c7>) (const struct Clock_Ip_CmuConfigType *, uint32) _70;
  const struct Clock_Ip_CmuConfigType * _71;
  unsigned char _72;
  long unsigned int _73;
  <unnamed type> _74;
  unsigned char _75;
  int _76;
  unsigned char _77;
  void (*<T662>) (const struct Clock_Ip_XoscConfigType *) _78;
  const struct Clock_Ip_XoscConfigType * _79;
  unsigned char _80;
  long unsigned int _81;
  <unnamed type> _82;
  unsigned char _83;
  int _84;
  unsigned char _85;
  void (*<T698>) (const struct Clock_Ip_PllConfigType *) _86;
  const struct Clock_Ip_PllConfigType * _87;
  unsigned char _88;
  long unsigned int _89;
  <unnamed type> _90;
  unsigned char _91;
  int _92;
  unsigned char _93;
  void (*<T687>) (const struct Clock_Ip_FracDivConfigType *) _94;
  const struct Clock_Ip_FracDivConfigType * _95;
  unsigned char _96;
  long unsigned int _97;
  <unnamed type> _98;
  <unnamed type> _99;
  <unnamed type> _100;
  unsigned char _101;
  int _102;
  unsigned char _103;
  void (*<T6ab>) (const struct Clock_Ip_SelectorConfigType *) _104;
  const struct Clock_Ip_SelectorConfigType * _105;
  unsigned char _106;
  long unsigned int _107;
  _Bool _108;
  <unnamed type> _109;
  unsigned char _110;
  int _111;
  unsigned char _112;
  void (*<T6b7>) (const struct Clock_Ip_GateConfigType *) _113;
  const struct Clock_Ip_GateConfigType * _114;
  unsigned char _115;
  long unsigned int _116;
  <unnamed type> _117;
  unsigned char _118;
  int _119;
  unsigned char _120;
  void (*<T6cc>) (const struct Clock_Ip_CmuConfigType *) _121;
  const struct Clock_Ip_CmuConfigType * _122;
  unsigned char _123;
  long unsigned int _124;
  unsigned char _216;
  long unsigned int _219;
  <unnamed type> _220;
  unsigned char _221;
  int _222;
  unsigned char _223;
  void (*<T6ab>) (const struct Clock_Ip_SelectorConfigType *) _225;
  const struct Clock_Ip_SelectorConfigType * _226;
  unsigned char _227;
  long unsigned int _230;
  <unnamed type> _231;
  unsigned char _232;
  int _233;
  unsigned char _234;
  void (*<T687>) (const struct Clock_Ip_FracDivConfigType *) _236;
  const struct Clock_Ip_FracDivConfigType * _237;
  unsigned char _238;
  long unsigned int _241;
  <unnamed type> _242;
  unsigned char _243;
  int _244;
  unsigned char _245;
  void (*<T698>) (const struct Clock_Ip_PllConfigType *) _247;
  const struct Clock_Ip_PllConfigType * _248;
  unsigned char _249;
  long unsigned int _252;
  <unnamed type> _253;
  unsigned char _254;
  int _255;
  unsigned char _256;
  void (*<T662>) (const struct Clock_Ip_XoscConfigType *) _258;
  const struct Clock_Ip_XoscConfigType * _259;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.1_260;
  int _262;
  <unnamed type> _263;
  long unsigned int _264;
  unsigned char _266;
  int _268;
  <unnamed type> _269;
  unsigned char _271;
  _Bool FunctionWasCalled.4_272;
  void (*<T6c7>) (const struct Clock_Ip_CmuConfigType *, uint32) _273;
  void (*<T656>) (Clock_Ip_NameType) _274;
  void (*<T656>) (Clock_Ip_NameType) _275;
  Clock_Ip_CmuStatusType (*<T6d1>) (Clock_Ip_NameType) _276;
  void (*<T670>) (const struct Clock_Ip_DividerConfigType *) _277;
  void (*<T67b>) (const struct Clock_Ip_DividerTriggerConfigType *) _278;
  void (*<T662>) (const struct Clock_Ip_XoscConfigType *) _279;
  void (*<T687>) (const struct Clock_Ip_FracDivConfigType *) _280;
  Clock_Ip_DfsStatusType (*<T68d>) (Clock_Ip_NameType) _281;
  void (*<T6b7>) (const struct Clock_Ip_GateConfigType *) _282;
  void (*<T6bc>) (Clock_Ip_NameType, boolean) _283;
  void (*<T653>) (const struct Clock_Ip_IrcoscConfigType *) _284;
  void (*<T698>) (const struct Clock_Ip_PllConfigType *) _285;
  Clock_Ip_PllStatusReturnType (*<T69e>) (Clock_Ip_NameType) _286;
  void (*<T6ab>) (const struct Clock_Ip_SelectorConfigType *) _287;
  void (*<T6dd>) (const struct Clock_Ip_PcfsConfigType *, uint32) _288;
  void (*<T53e>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.5_289;
  void (*<T53e>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.6_290;
  void (*<T53e>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.7_291;
  void (*<T53e>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.8_292;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig = Config_159(D);
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Config_159(D), 1);
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.0_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.0_1 != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [local count: 330712475]:
  # DEBUG BEGIN_STMT
  _2 = Config_159(D)->Cmus[Index_125].Name;
  _3 = Clock_Ip_au8ClockFeatures[_2][1];
  _4 = (int) _3;
  _5 = Clock_Ip_au8CmuCallbackIndex[_4];
  CallbackIndex_162 = (uint32) _5;
  # DEBUG CallbackIndex => CallbackIndex_162
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_axCmuCallbacks[CallbackIndex_162].Reset;
  _7 = &Config_159(D)->Cmus[Index_125];
  _6 (_7);
  # DEBUG BEGIN_STMT
  Index_164 = Index_125 + 1;
  # DEBUG Index => Index_164

  <bb 4> [local count: 413390596]:
  # Index_125 = PHI <Index_164(3), 0(2)>
  # DEBUG Index => Index_125
  # DEBUG BEGIN_STMT
  _8 = Config_159(D)->CmusCount;
  _9 = (long unsigned int) _8;
  if (_9 > Index_125)
    goto <bb 3>; [80.00%]
  else
    goto <bb 5>; [20.00%]

  <bb 5> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG Config => Config_159(D)
  # DEBUG INLINE_ENTRY Clock_Ip_ResetClockConfiguration
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _216 = Config_159(D)->SelectorsCount;
  Index_217 = (uint32) _216;
  # DEBUG Index => Index_217
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _219 = Index_218 + 4294967295;
  _220 = Config_159(D)->Selectors[_219].Name;
  _221 = Clock_Ip_au8ClockFeatures[_220][1];
  _222 = (int) _221;
  _223 = Clock_Ip_au8SelectorCallbackIndex[_222];
  CallbackIndex_224 = (uint32) _223;
  # DEBUG CallbackIndex => CallbackIndex_224
  # DEBUG BEGIN_STMT
  _225 = Clock_Ip_axSelectorCallbacks[CallbackIndex_224].Reset;
  _226 = &Config_159(D)->Selectors[_219];
  _225 (_226);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _219

  <bb 7> [local count: 1073741824]:
  # Index_218 = PHI <Index_217(5), _219(6)>
  # DEBUG Index => Index_218
  # DEBUG BEGIN_STMT
  if (Index_218 != 0)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _227 = Config_159(D)->FracDivsCount;
  Index_228 = (uint32) _227;
  # DEBUG Index => Index_228
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _230 = Index_229 + 4294967295;
  _231 = Config_159(D)->FracDivs[_230].Name;
  _232 = Clock_Ip_au8ClockFeatures[_231][1];
  _233 = (int) _232;
  _234 = Clock_Ip_au8FractionalDividerCallbackIndex[_233];
  CallbackIndex_235 = (uint32) _234;
  # DEBUG CallbackIndex => CallbackIndex_235
  # DEBUG BEGIN_STMT
  _236 = Clock_Ip_axFracDivCallbacks[CallbackIndex_235].Reset;
  _237 = &Config_159(D)->FracDivs[_230];
  _236 (_237);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _230

  <bb 10> [local count: 236223200]:
  # Index_229 = PHI <Index_228(8), _230(9)>
  # DEBUG Index => Index_229
  # DEBUG BEGIN_STMT
  if (Index_229 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _238 = Config_159(D)->PllsCount;
  Index_239 = (uint32) _238;
  # DEBUG Index => Index_239
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _241 = Index_240 + 4294967295;
  _242 = Config_159(D)->Plls[_241].Name;
  _243 = Clock_Ip_au8ClockFeatures[_242][1];
  _244 = (int) _243;
  _245 = Clock_Ip_au8PllCallbackIndex[_244];
  CallbackIndex_246 = (uint32) _245;
  # DEBUG CallbackIndex => CallbackIndex_246
  # DEBUG BEGIN_STMT
  _247 = Clock_Ip_axPllCallbacks[CallbackIndex_246].Reset;
  _248 = &Config_159(D)->Plls[_241];
  _247 (_248);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _241

  <bb 13> [local count: 236223200]:
  # Index_240 = PHI <Index_239(11), _241(12)>
  # DEBUG Index => Index_240
  # DEBUG BEGIN_STMT
  if (Index_240 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _249 = Config_159(D)->XoscsCount;
  Index_250 = (uint32) _249;
  # DEBUG Index => Index_250
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 236258635]:
  # DEBUG BEGIN_STMT
  _252 = Index_251 + 4294967295;
  _253 = Config_159(D)->Xoscs[_252].Name;
  _254 = Clock_Ip_au8ClockFeatures[_253][1];
  _255 = (int) _254;
  _256 = Clock_Ip_au8XoscCallbackIndex[_255];
  CallbackIndex_257 = (uint32) _256;
  # DEBUG CallbackIndex => CallbackIndex_257
  # DEBUG BEGIN_STMT
  _258 = Clock_Ip_axExtOscCallbacks[CallbackIndex_257].Reset;
  _259 = &Config_159(D)->Xoscs[_252];
  _258 (_259);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _252

  <bb 16> [local count: 354370235]:
  # Index_251 = PHI <Index_250(14), _252(15)>
  # DEBUG Index => Index_251
  # DEBUG BEGIN_STMT
  if (Index_251 != 0)
    goto <bb 15>; [66.67%]
  else
    goto <bb 18>; [33.33%]

  <bb 17> [local count: 236258635]:
  # DEBUG BEGIN_STMT
  _10 = Config_159(D)->Ircoscs[Index_126].Name;
  _11 = Clock_Ip_au8ClockFeatures[_10][1];
  _12 = (int) _11;
  _13 = Clock_Ip_au8IrcoscCallbackIndex[_12];
  CallbackIndex_213 = (uint32) _13;
  # DEBUG CallbackIndex => CallbackIndex_213
  # DEBUG BEGIN_STMT
  _14 = Clock_Ip_axIntOscCallbacks[CallbackIndex_213].Set;
  _15 = &Config_159(D)->Ircoscs[Index_126];
  _14 (_15);
  # DEBUG BEGIN_STMT
  Index_215 = Index_126 + 1;
  # DEBUG Index => Index_215

  <bb 18> [local count: 354370235]:
  # Index_126 = PHI <0(16), Index_215(17)>
  # DEBUG Config => NULL
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  # DEBUG Index => NULL
  # DEBUG Index => Index_126
  # DEBUG BEGIN_STMT
  _16 = Config_159(D)->IrcoscsCount;
  _17 = (long unsigned int) _16;
  if (_17 > Index_126)
    goto <bb 17>; [66.67%]
  else
    goto <bb 20>; [33.33%]

  <bb 19> [local count: 236258635]:
  # DEBUG BEGIN_STMT
  _18 = Config_159(D)->Xoscs[Index_127].Name;
  _19 = Clock_Ip_au8ClockFeatures[_18][1];
  _20 = (int) _19;
  _21 = Clock_Ip_au8XoscCallbackIndex[_20];
  CallbackIndex_210 = (uint32) _21;
  # DEBUG CallbackIndex => CallbackIndex_210
  # DEBUG BEGIN_STMT
  _22 = Clock_Ip_axExtOscCallbacks[CallbackIndex_210].Set;
  _23 = &Config_159(D)->Xoscs[Index_127];
  _22 (_23);
  # DEBUG BEGIN_STMT
  Index_212 = Index_127 + 1;
  # DEBUG Index => Index_212

  <bb 20> [local count: 354370235]:
  # Index_127 = PHI <Index_212(19), 0(18)>
  # DEBUG Index => Index_127
  # DEBUG BEGIN_STMT
  _24 = Config_159(D)->XoscsCount;
  _25 = (long unsigned int) _24;
  if (_25 > Index_127)
    goto <bb 19>; [66.67%]
  else
    goto <bb 21>; [33.33%]

  <bb 21> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG Config => Config_159(D)
  # DEBUG INLINE_ENTRY Clock_Ip_UpdateDriverContext
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.1_260 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.1_260, 2);
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 23>; [100.00%]

  <bb 22> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _262 = (int) Index_261;
  _263 = Config_159(D)->ExtClks[_262].Name;
  _264 = Config_159(D)->ExtClks[_262].Value;
  Clock_Ip_SetExternalSignalFrequency (_263, _264);
  # DEBUG BEGIN_STMT
  Index_265 = Index_261 + 1;
  # DEBUG Index => Index_265

  <bb 23> [local count: 1073741824]:
  # Index_261 = PHI <0(21), Index_265(22)>
  # DEBUG Index => Index_261
  # DEBUG BEGIN_STMT
  _266 = Config_159(D)->ExtClksCount;
  if (Index_261 < _266)
    goto <bb 22>; [89.00%]
  else
    goto <bb 24>; [11.00%]

  <bb 24> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Clock_Ip_CallEmptyCallbacks
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FunctionWasCalled.4_272 = FunctionWasCalled;
  if (FunctionWasCalled.4_272 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 25> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  FunctionWasCalled = 1;
  # DEBUG BEGIN_STMT
  _273 = Clock_Ip_axCmuCallbacks[0].Set;
  _273 (0B, 0);
  # DEBUG BEGIN_STMT
  _274 = Clock_Ip_axCmuCallbacks[0].Disable;
  _274 (90);
  # DEBUG BEGIN_STMT
  _275 = Clock_Ip_axCmuCallbacks[0].Clear;
  _275 (90);
  # DEBUG BEGIN_STMT
  _276 = Clock_Ip_axCmuCallbacks[0].GetStatus;
  _276 (90);
  # DEBUG BEGIN_STMT
  _277 = Clock_Ip_axDividerCallbacks[0].Set;
  _277 (0B);
  # DEBUG BEGIN_STMT
  _278 = Clock_Ip_axDividerTriggerCallbacks[0].Configure;
  _278 (0B);
  # DEBUG BEGIN_STMT
  _279 = Clock_Ip_axExtOscCallbacks[0].Reset;
  _279 (0B);
  # DEBUG BEGIN_STMT
  _280 = Clock_Ip_axFracDivCallbacks[0].Set;
  _280 (0B);
  # DEBUG BEGIN_STMT
  _281 = Clock_Ip_axFracDivCallbacks[0].Complete;
  _281 (90);
  # DEBUG BEGIN_STMT
  _282 = Clock_Ip_axGateCallbacks[0].Set;
  _282 (0B);
  # DEBUG BEGIN_STMT
  _283 = Clock_Ip_axGateCallbacks[0].Update;
  _283 (90, 0);
  # DEBUG BEGIN_STMT
  _284 = Clock_Ip_axIntOscCallbacks[0].Set;
  _284 (0B);
  # DEBUG BEGIN_STMT
  _285 = Clock_Ip_axPllCallbacks[0].Set;
  _285 (0B);
  # DEBUG BEGIN_STMT
  _286 = Clock_Ip_axPllCallbacks[0].Complete;
  _286 (90);
  # DEBUG BEGIN_STMT
  _287 = Clock_Ip_axSelectorCallbacks[0].Set;
  _287 (0B);
  # DEBUG BEGIN_STMT
  _288 = Clock_Ip_axPcfsCallbacks[0].Set;
  _288 (0B, 0);

  <bb 26> [local count: 118111600]:
  goto <bb 28>; [100.00%]

  <bb 27> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _268 = (int) Index_267;
  _269 = Config_159(D)->ConfiguredFrequencies[_268].Name;
  Clock_Ip_FreqIds[_269] = Index_267;
  # DEBUG BEGIN_STMT
  Index_270 = Index_267 + 1;
  # DEBUG Index => Index_270

  <bb 28> [local count: 1073741824]:
  # Index_267 = PHI <1(26), Index_270(27)>
  # DEBUG Index => NULL
  # DEBUG Index => Index_267
  # DEBUG BEGIN_STMT
  _271 = Config_159(D)->ConfigureFrequenciesCount;
  if (Index_267 < _271)
    goto <bb 27>; [89.00%]
  else
    goto <bb 30>; [11.00%]

  <bb 29> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _26 = Config_159(D)->Pcfs[Index_128].Name;
  _27 = Clock_Ip_au8ClockFeatures[_26][1];
  _28 = (int) _27;
  _29 = Clock_Ip_au8PcfsCallbackIndex[_28];
  CallbackIndex_207 = (uint32) _29;
  # DEBUG CallbackIndex => CallbackIndex_207
  # DEBUG BEGIN_STMT
  _30 = Clock_Ip_axPcfsCallbacks[CallbackIndex_207].Set;
  _31 = &Config_159(D)->Pcfs[Index_128];
  _30 (_31, Index_128);
  # DEBUG BEGIN_STMT
  Index_209 = Index_128 + 1;
  # DEBUG Index => Index_209

  <bb 30> [local count: 236223200]:
  # Index_128 = PHI <0(28), Index_209(29)>
  # DEBUG Config => NULL
  # DEBUG Index => NULL
  # DEBUG Index => NULL
  # DEBUG Index => Index_128
  # DEBUG BEGIN_STMT
  _32 = Config_159(D)->PcfsCount;
  _33 = (long unsigned int) _32;
  if (_33 > Index_128)
    goto <bb 29>; [50.00%]
  else
    goto <bb 32>; [50.00%]

  <bb 31> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _34 = Config_159(D)->DividerTriggers[Index_129].Name;
  _35 = Clock_Ip_au8ClockFeatures[_34][1];
  _36 = (int) _35;
  _37 = Clock_Ip_au8DividerTriggerCallbackIndex[_36];
  CallbackIndex_204 = (uint32) _37;
  # DEBUG CallbackIndex => CallbackIndex_204
  # DEBUG BEGIN_STMT
  _38 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_204].Configure;
  _39 = &Config_159(D)->DividerTriggers[Index_129];
  _38 (_39);
  # DEBUG BEGIN_STMT
  Index_206 = Index_129 + 1;
  # DEBUG Index => Index_206

  <bb 32> [local count: 236223200]:
  # Index_129 = PHI <Index_206(31), 0(30)>
  # DEBUG Index => Index_129
  # DEBUG BEGIN_STMT
  _40 = Config_159(D)->DividerTriggersCount;
  _41 = (long unsigned int) _40;
  if (_41 > Index_129)
    goto <bb 31>; [50.00%]
  else
    goto <bb 34>; [50.00%]

  <bb 33> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _42 = Config_159(D)->Dividers[Index_130].Name;
  _43 = Clock_Ip_au8ClockFeatures[_42][1];
  _44 = (int) _43;
  _45 = Clock_Ip_au8DividerCallbackIndex[_44];
  CallbackIndex_201 = (uint32) _45;
  # DEBUG CallbackIndex => CallbackIndex_201
  # DEBUG BEGIN_STMT
  _46 = Clock_Ip_axDividerCallbacks[CallbackIndex_201].Set;
  _47 = &Config_159(D)->Dividers[Index_130];
  _46 (_47);
  # DEBUG BEGIN_STMT
  Index_203 = Index_130 + 1;
  # DEBUG Index => Index_203

  <bb 34> [local count: 1073741824]:
  # Index_130 = PHI <Index_203(33), 0(32)>
  # DEBUG Index => Index_130
  # DEBUG BEGIN_STMT
  _48 = Config_159(D)->DividersCount;
  _49 = (long unsigned int) _48;
  if (_49 > Index_130)
    goto <bb 33>; [89.00%]
  else
    goto <bb 36>; [11.00%]

  <bb 35> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _50 = Config_159(D)->DividerTriggers[Index_131].Name;
  _51 = Clock_Ip_au8ClockFeatures[_50][1];
  _52 = (int) _51;
  _53 = Clock_Ip_au8DividerTriggerCallbackIndex[_52];
  CallbackIndex_198 = (uint32) _53;
  # DEBUG CallbackIndex => CallbackIndex_198
  # DEBUG BEGIN_STMT
  _54 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_198].TriggerUpdate;
  _55 = &Config_159(D)->DividerTriggers[Index_131];
  _54 (_55);
  # DEBUG BEGIN_STMT
  Index_200 = Index_131 + 1;
  # DEBUG Index => Index_200

  <bb 36> [local count: 236223200]:
  # Index_131 = PHI <Index_200(35), 0(34)>
  # DEBUG Index => Index_131
  # DEBUG BEGIN_STMT
  _56 = Config_159(D)->DividerTriggersCount;
  _57 = (long unsigned int) _56;
  if (_57 > Index_131)
    goto <bb 35>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 37> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _58 = Config_159(D)->Plls[Index_132].Name;
  _59 = Clock_Ip_au8ClockFeatures[_58][1];
  _60 = (int) _59;
  _61 = Clock_Ip_au8PllCallbackIndex[_60];
  CallbackIndex_195 = (uint32) _61;
  # DEBUG CallbackIndex => CallbackIndex_195
  # DEBUG BEGIN_STMT
  _62 = Clock_Ip_axPllCallbacks[CallbackIndex_195].Set;
  _63 = &Config_159(D)->Plls[Index_132];
  _62 (_63);
  # DEBUG BEGIN_STMT
  Index_197 = Index_132 + 1;
  # DEBUG Index => Index_197

  <bb 38> [local count: 236223200]:
  # Index_132 = PHI <Index_197(37), 0(36)>
  # DEBUG Index => Index_132
  # DEBUG BEGIN_STMT
  _64 = Config_159(D)->PllsCount;
  _65 = (long unsigned int) _64;
  if (_65 > Index_132)
    goto <bb 37>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [local count: 472446391]:
  # DEBUG BEGIN_STMT
  _66 = Config_159(D)->Cmus[Index_133].Name;
  _67 = Clock_Ip_au8ClockFeatures[_66][1];
  _68 = (int) _67;
  _69 = Clock_Ip_au8CmuCallbackIndex[_68];
  CallbackIndex_192 = (uint32) _69;
  # DEBUG CallbackIndex => CallbackIndex_192
  # DEBUG BEGIN_STMT
  _70 = Clock_Ip_axCmuCallbacks[CallbackIndex_192].Set;
  _71 = &Config_159(D)->Cmus[Index_133];
  _70 (_71, Index_133);
  # DEBUG BEGIN_STMT
  Index_194 = Index_133 + 1;
  # DEBUG Index => Index_194

  <bb 40> [local count: 590557992]:
  # Index_133 = PHI <Index_194(39), 0(38)>
  # DEBUG Index => Index_133
  # DEBUG BEGIN_STMT
  _72 = Config_159(D)->CmusCount;
  _73 = (long unsigned int) _72;
  if (_73 > Index_133)
    goto <bb 39>; [80.00%]
  else
    goto <bb 42>; [20.00%]

  <bb 41> [local count: 236258635]:
  # DEBUG BEGIN_STMT
  _74 = Config_159(D)->Xoscs[Index_134].Name;
  _75 = Clock_Ip_au8ClockFeatures[_74][1];
  _76 = (int) _75;
  _77 = Clock_Ip_au8XoscCallbackIndex[_76];
  CallbackIndex_189 = (uint32) _77;
  # DEBUG CallbackIndex => CallbackIndex_189
  # DEBUG BEGIN_STMT
  _78 = Clock_Ip_axExtOscCallbacks[CallbackIndex_189].Complete;
  _79 = &Config_159(D)->Xoscs[Index_134];
  _78 (_79);
  # DEBUG BEGIN_STMT
  Index_191 = Index_134 + 1;
  # DEBUG Index => Index_191

  <bb 42> [local count: 354370235]:
  # Index_134 = PHI <Index_191(41), 0(40)>
  # DEBUG Index => Index_134
  # DEBUG BEGIN_STMT
  _80 = Config_159(D)->XoscsCount;
  _81 = (long unsigned int) _80;
  if (_81 > Index_134)
    goto <bb 41>; [66.67%]
  else
    goto <bb 44>; [33.33%]

  <bb 43> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _82 = Config_159(D)->Plls[Index_135].Name;
  _83 = Clock_Ip_au8ClockFeatures[_82][1];
  _84 = (int) _83;
  _85 = Clock_Ip_au8PllCallbackIndex[_84];
  CallbackIndex_186 = (uint32) _85;
  # DEBUG CallbackIndex => CallbackIndex_186
  # DEBUG BEGIN_STMT
  _86 = Clock_Ip_axPllCallbacks[CallbackIndex_186].Enable;
  _87 = &Config_159(D)->Plls[Index_135];
  _86 (_87);
  # DEBUG BEGIN_STMT
  Index_188 = Index_135 + 1;
  # DEBUG Index => Index_188

  <bb 44> [local count: 236223200]:
  # Index_135 = PHI <Index_188(43), 0(42)>
  # DEBUG Index => Index_135
  # DEBUG BEGIN_STMT
  _88 = Config_159(D)->PllsCount;
  _89 = (long unsigned int) _88;
  if (_89 > Index_135)
    goto <bb 43>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _90 = Config_159(D)->FracDivs[Index_136].Name;
  _91 = Clock_Ip_au8ClockFeatures[_90][1];
  _92 = (int) _91;
  _93 = Clock_Ip_au8FractionalDividerCallbackIndex[_92];
  CallbackIndex_183 = (uint32) _93;
  # DEBUG CallbackIndex => CallbackIndex_183
  # DEBUG BEGIN_STMT
  _94 = Clock_Ip_axFracDivCallbacks[CallbackIndex_183].Set;
  _95 = &Config_159(D)->FracDivs[Index_136];
  _94 (_95);
  # DEBUG BEGIN_STMT
  Index_185 = Index_136 + 1;
  # DEBUG Index => Index_185

  <bb 46> [local count: 236223200]:
  # Index_136 = PHI <Index_185(45), 0(44)>
  # DEBUG Index => Index_136
  # DEBUG BEGIN_STMT
  _96 = Config_159(D)->FracDivsCount;
  _97 = (long unsigned int) _96;
  if (_97 > Index_136)
    goto <bb 45>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 47> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.ClockTreeIsConsumingPll = 0;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.WaitStatesAreSupported = 0;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.HwPllsNo = 1;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.HwDfsNo = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Clock_Ip_SetWaitStates
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.5_289 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.5_289 (4, 90);
  # DEBUG BEGIN_STMT
  Clock_Ip_SetRamWaitStates ();
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.6_290 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.6_290 (5, 90);
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.7_291 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.7_291 (6, 90);
  # DEBUG BEGIN_STMT
  Clock_Ip_SetFlashWaitStates ();
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.8_292 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.8_292 (7, 90);
  goto <bb 52>; [100.00%]

  <bb 48> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _98 = Config_159(D)->Selectors[Index_137].Value;
  _99 = Clock_Ip_aeSourceTypeClockName[_98];
  if (_99 != 3)
    goto <bb 49>; [66.00%]
  else
    goto <bb 50>; [34.00%]

  <bb 49> [local count: 630715945]:
  # DEBUG BEGIN_STMT
  _100 = Config_159(D)->Selectors[Index_137].Name;
  _101 = Clock_Ip_au8ClockFeatures[_100][1];
  _102 = (int) _101;
  _103 = Clock_Ip_au8SelectorCallbackIndex[_102];
  CallbackIndex_180 = (uint32) _103;
  # DEBUG CallbackIndex => CallbackIndex_180
  # DEBUG BEGIN_STMT
  _104 = Clock_Ip_axSelectorCallbacks[CallbackIndex_180].Set;
  _105 = &Config_159(D)->Selectors[Index_137];
  _104 (_105);
  goto <bb 51>; [100.00%]

  <bb 50> [local count: 324914280]:
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.ClockTreeIsConsumingPll = 1;

  <bb 51> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Index_182 = Index_137 + 1;
  # DEBUG Index => Index_182

  <bb 52> [local count: 1073741824]:
  # Index_137 = PHI <0(47), Index_182(51)>
  # DEBUG Index => NULL
  # DEBUG Index => Index_137
  # DEBUG BEGIN_STMT
  _106 = Config_159(D)->SelectorsCount;
  _107 = (long unsigned int) _106;
  if (_107 > Index_137)
    goto <bb 48>; [89.00%]
  else
    goto <bb 53>; [11.00%]

  <bb 53> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _108 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_108 != 0)
    goto <bb 59>; [50.00%]
  else
    goto <bb 55>; [50.00%]

  <bb 54> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _109 = Config_159(D)->Gates[Index_138].Name;
  _110 = Clock_Ip_au8ClockFeatures[_109][1];
  _111 = (int) _110;
  _112 = Clock_Ip_au8GateCallbackIndex[_111];
  CallbackIndex_176 = (uint32) _112;
  # DEBUG CallbackIndex => CallbackIndex_176
  # DEBUG BEGIN_STMT
  _113 = Clock_Ip_axGateCallbacks[CallbackIndex_176].Set;
  _114 = &Config_159(D)->Gates[Index_138];
  _113 (_114);
  # DEBUG BEGIN_STMT
  Index_178 = Index_138 + 1;
  # DEBUG Index => Index_178

  <bb 55> [local count: 536870913]:
  # Index_138 = PHI <Index_178(54), 0(53)>
  # DEBUG Index => Index_138
  # DEBUG BEGIN_STMT
  _115 = Config_159(D)->GatesCount;
  _116 = (long unsigned int) _115;
  if (_116 > Index_138)
    goto <bb 54>; [89.00%]
  else
    goto <bb 57>; [11.00%]

  <bb 56> [local count: 236223196]:
  # DEBUG BEGIN_STMT
  _117 = Config_159(D)->Cmus[Index_139].Name;
  _118 = Clock_Ip_au8ClockFeatures[_117][1];
  _119 = (int) _118;
  _120 = Clock_Ip_au8CmuCallbackIndex[_119];
  CallbackIndex_173 = (uint32) _120;
  # DEBUG CallbackIndex => CallbackIndex_173
  # DEBUG BEGIN_STMT
  _121 = Clock_Ip_axCmuCallbacks[CallbackIndex_173].Enable;
  _122 = &Config_159(D)->Cmus[Index_139];
  _121 (_122);
  # DEBUG BEGIN_STMT
  Index_175 = Index_139 + 1;
  # DEBUG Index => Index_175

  <bb 57> [local count: 295278996]:
  # Index_139 = PHI <Index_175(56), 0(55)>
  # DEBUG Index => Index_139
  # DEBUG BEGIN_STMT
  _123 = Config_159(D)->CmusCount;
  _124 = (long unsigned int) _123;
  if (_124 > Index_139)
    goto <bb 56>; [80.00%]
  else
    goto <bb 58>; [20.00%]

  <bb 58> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Config_159(D), 4);

  <bb 59> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_GetPllStatus (Clock_Ip_GetPllStatus, funcdef_no=6, decl_uid=6133, cgraph_uid=7, symbol_order=10)


Symbols to be put in SSA form
{ D.6692 D.7059 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 9 and 12
Merging blocks 16 and 11
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 3
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 8 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 14 }
;; 9 succs { 12 }
;; 10 succs { 13 11 }
;; 11 succs { 12 }
;; 12 succs { 10 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
cyclic probability of bb 7 is 0.893025; turning freq 1.000000 to 9.347979
cyclic probability of bb 12 is 0.893025; turning freq 0.500000 to 4.673989
Clock_Ip_GetPllStatus ()
{
  uint32 CallbackIndex;
  uint32 Index;
  Clock_Ip_DfsStatusType DfsStatus;
  Clock_Ip_PllStatusType RetValue;
  Clock_Ip_PllStatusType D.7059;
  uint32 CallbackIndex;
  uint32 Index;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusType RetValue;
  <unnamed type> _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  Clock_Ip_PllStatusReturnType (*<T69e>) (Clock_Ip_NameType) _5;
  unsigned char _7;
  long unsigned int _8;
  <unnamed type> _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  Clock_Ip_DfsStatusType (*<T68d>) (Clock_Ip_NameType) _31;
  unsigned char _34;
  long unsigned int _35;

  <bb 2> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 1014686026]:
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_aeHwPllName[Index_14];
  _2 = Clock_Ip_au8ClockFeatures[_1][1];
  _3 = (int) _2;
  _4 = Clock_Ip_au8PllCallbackIndex[_3];
  CallbackIndex_20 = (uint32) _4;
  # DEBUG CallbackIndex => CallbackIndex_20
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_axPllCallbacks[CallbackIndex_20].Complete;
  PllStatus_22 = _5 (_1);
  # DEBUG PllStatus => PllStatus_22
  # DEBUG BEGIN_STMT
  if (PllStatus_22 == 1)
    goto <bb 8>; [5.50%]
  else
    goto <bb 4>; [94.50%]

  <bb 4> [local count: 958878296]:
  # DEBUG BEGIN_STMT
  if (PllStatus_22 == 2)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 326018624]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 0

  <bb 6> [local count: 958878296]:
  # RetValue_10 = PHI <RetValue_11(4), 0(5)>
  # DEBUG RetValue => RetValue_10
  # DEBUG BEGIN_STMT
  Index_23 = Index_14 + 1;
  # DEBUG Index => Index_23

  <bb 7> [local count: 1073741824]:
  # RetValue_11 = PHI <2(2), RetValue_10(6)>
  # Index_14 = PHI <0(2), Index_23(6)>
  # DEBUG Index => Index_14
  # DEBUG RetValue => RetValue_11
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_driverContext.HwPllsNo;
  _8 = (long unsigned int) _7;
  if (_8 > Index_14)
    goto <bb 3>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 114863531]:
  # RetValue_12 = PHI <1(3), RetValue_11(7)>
  # DEBUG RetValue => RetValue_12
  # DEBUG BEGIN_STMT
  if (RetValue_12 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [local count: 57431766]:
  # Index_15 = PHI <0(8)>
  # DEBUG INLINE_ENTRY Clock_Ip_GetPllStatus
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 507343018]:
  # DEBUG BEGIN_STMT
  _26 = Clock_Ip_aeHwDfsName[Index_25];
  _27 = Clock_Ip_au8ClockFeatures[_26][1];
  _28 = (int) _27;
  _29 = Clock_Ip_au8FractionalDividerCallbackIndex[_28];
  CallbackIndex_30 = (uint32) _29;
  # DEBUG CallbackIndex => CallbackIndex_30
  # DEBUG BEGIN_STMT
  _31 = Clock_Ip_axFracDivCallbacks[CallbackIndex_30].Complete;
  DfsStatus_32 = _31 (_26);
  # DEBUG DfsStatus => DfsStatus_32
  # DEBUG BEGIN_STMT
  if (DfsStatus_32 == 1)
    goto <bb 13>; [5.50%]
  else
    goto <bb 11>; [94.50%]

  <bb 11> [local count: 479439152]:
  # DEBUG BEGIN_STMT
  Index_33 = Index_25 + 1;
  # DEBUG Index => Index_33

  <bb 12> [local count: 536870919]:
  # Index_25 = PHI <0(9), Index_33(11)>
  # DEBUG Index => Index_25
  # DEBUG BEGIN_STMT
  _34 = Clock_Ip_driverContext.HwDfsNo;
  _35 = (long unsigned int) _34;
  if (Index_25 < _35)
    goto <bb 10>; [94.50%]
  else
    goto <bb 13>; [5.50%]

  <bb 13> [local count: 57431766]:
  # RetValue_36 = PHI <1(10), 0(12)>
  # DEBUG RetValue => RetValue_36
  # DEBUG BEGIN_STMT
  _40 = RetValue_36;
  # DEBUG RetValue => NULL
  # DEBUG PllStatus => NULL
  # DEBUG DfsStatus => NULL
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  RetValue_6 = _40;

  <bb 14> [local count: 114863532]:
  # RetValue_13 = PHI <RetValue_12(8), RetValue_6(13)>
  # DEBUG RetValue => RetValue_13
  # DEBUG BEGIN_STMT
  return RetValue_13;

}



;; Function Clock_Ip_DistributePll (Clock_Ip_DistributePll, funcdef_no=7, decl_uid=6135, cgraph_uid=8, symbol_order=11)


Symbols to be put in SSA form
{ D.6693 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 20
Number of blocks to update: 19 ( 95%)


Merging blocks 3 and 6
Removing basic block 5
Removing basic block 12
Removing basic block 15
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 4
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;;
;; Loop 5
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 6
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;; 2 succs { 3 15 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 10 14 }
;; 9 succs { 10 }
;; 10 succs { 9 12 }
;; 11 succs { 12 }
;; 12 succs { 11 13 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
cyclic probability of bb 7 is 0.890000; turning freq 0.700000 to 6.363636
cyclic probability of bb 10 is 0.890000; turning freq 0.350000 to 3.181818
cyclic probability of bb 12 is 0.800000; turning freq 0.350000 to 1.750000
Clock_Ip_DistributePll ()
{
  uint32 CallbackIndex;
  uint32 Index;
  uint32 Index;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.9_1;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.13_7;
  <unnamed type> _9;
  <unnamed type> _10;
  <unnamed type> _11;
  unsigned char _12;
  int _13;
  unsigned char _14;
  void (*<T6ab>) (const struct Clock_Ip_SelectorConfigType *) _16;
  const struct Clock_Ip_SelectorConfigType * _17;
  unsigned char _19;
  long unsigned int _20;
  _Bool _21;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.16_22;
  <unnamed type> _24;
  unsigned char _25;
  int _26;
  unsigned char _27;
  void (*<T6b7>) (const struct Clock_Ip_GateConfigType *) _29;
  const struct Clock_Ip_GateConfigType * _30;
  unsigned char _32;
  long unsigned int _33;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.19_34;
  <unnamed type> _36;
  unsigned char _37;
  int _38;
  unsigned char _39;
  void (*<T6cc>) (const struct Clock_Ip_CmuConfigType *) _41;
  const struct Clock_Ip_CmuConfigType * _42;
  unsigned char _44;
  long unsigned int _45;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.19_46;

  <bb 2> [local count: 168730857]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.9_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.9_1 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 3> [local count: 118111600]:
  # Index_4 = PHI <0(2)>
  # DEBUG INLINE_ENTRY Clock_Ip_DistributePll
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 955630226]:
  # DEBUG BEGIN_STMT
  _9 = Clock_Ip_pxConfig.13_7->Selectors[Index_8].Value;
  _10 = Clock_Ip_aeSourceTypeClockName[_9];
  if (_10 == 3)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 324914280]:
  # DEBUG BEGIN_STMT
  _11 = Clock_Ip_pxConfig.13_7->Selectors[Index_8].Name;
  _12 = Clock_Ip_au8ClockFeatures[_11][1];
  _13 = (int) _12;
  _14 = Clock_Ip_au8SelectorCallbackIndex[_13];
  CallbackIndex_15 = (uint32) _14;
  # DEBUG CallbackIndex => CallbackIndex_15
  # DEBUG BEGIN_STMT
  _16 = Clock_Ip_axSelectorCallbacks[CallbackIndex_15].Set;
  _17 = &Clock_Ip_pxConfig.13_7->Selectors[Index_8];
  _16 (_17);

  <bb 6> [local count: 955630227]:
  # DEBUG BEGIN_STMT
  Index_18 = Index_8 + 1;
  # DEBUG Index => Index_18

  <bb 7> [local count: 1073741824]:
  # Index_8 = PHI <0(3), Index_18(6)>
  # DEBUG Index => Index_8
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.13_7 = Clock_Ip_pxConfig;
  _19 = Clock_Ip_pxConfig.13_7->SelectorsCount;
  _20 = (long unsigned int) _19;
  if (Index_8 < _20)
    goto <bb 4>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _21 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_21 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [local count: 477815113]:
  # DEBUG BEGIN_STMT
  _24 = Clock_Ip_pxConfig.16_22->Gates[Index_23].Name;
  _25 = Clock_Ip_au8ClockFeatures[_24][1];
  _26 = (int) _25;
  _27 = Clock_Ip_au8GateCallbackIndex[_26];
  CallbackIndex_28 = (uint32) _27;
  # DEBUG CallbackIndex => CallbackIndex_28
  # DEBUG BEGIN_STMT
  _29 = Clock_Ip_axGateCallbacks[CallbackIndex_28].Set;
  _30 = &Clock_Ip_pxConfig.16_22->Gates[Index_23];
  _29 (_30);
  # DEBUG BEGIN_STMT
  Index_31 = Index_23 + 1;
  # DEBUG Index => Index_31

  <bb 10> [local count: 536870913]:
  # Index_23 = PHI <0(8), Index_31(9)>
  # DEBUG Index => Index_23
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.16_22 = Clock_Ip_pxConfig;
  _32 = Clock_Ip_pxConfig.16_22->GatesCount;
  _33 = (long unsigned int) _32;
  if (Index_23 < _33)
    goto <bb 9>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 11> [local count: 236223196]:
  # DEBUG BEGIN_STMT
  _36 = Clock_Ip_pxConfig.19_34->Cmus[Index_35].Name;
  _37 = Clock_Ip_au8ClockFeatures[_36][1];
  _38 = (int) _37;
  _39 = Clock_Ip_au8CmuCallbackIndex[_38];
  CallbackIndex_40 = (uint32) _39;
  # DEBUG CallbackIndex => CallbackIndex_40
  # DEBUG BEGIN_STMT
  _41 = Clock_Ip_axCmuCallbacks[CallbackIndex_40].Enable;
  _42 = &Clock_Ip_pxConfig.19_34->Cmus[Index_35];
  _41 (_42);
  # DEBUG BEGIN_STMT
  Index_43 = Index_35 + 1;
  # DEBUG Index => Index_43

  <bb 12> [local count: 295278996]:
  # Index_35 = PHI <0(10), Index_43(11)>
  # DEBUG Index => Index_35
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.19_34 = Clock_Ip_pxConfig;
  _44 = Clock_Ip_pxConfig.19_34->CmusCount;
  _45 = (long unsigned int) _44;
  if (Index_35 < _45)
    goto <bb 11>; [80.00%]
  else
    goto <bb 13>; [20.00%]

  <bb 13> [local count: 59055800]:
  # Clock_Ip_pxConfig.19_46 = PHI <Clock_Ip_pxConfig.19_34(12)>
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Clock_Ip_pxConfig.19_46, 4);

  <bb 14> [local count: 118111600]:

  <bb 15> [local count: 168730857]:
  # DEBUG Index => NULL
  # DEBUG CallbackIndex => NULL
  return;

}



;; Function Clock_Ip_Init (Clock_Ip_Init, funcdef_no=4, decl_uid=6129, cgraph_uid=5, symbol_order=8)

Clock_Ip_Init (const struct Clock_Ip_ClockConfigType * Config)
{
  Clock_Ip_PllStatusType PllStatus;
  Clock_Ip_StatusType ClockStatus;
  _Bool _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_InitClock (Config_5(D));
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  PllStatus_8 = Clock_Ip_GetPllStatus ();
  # DEBUG PllStatus => PllStatus_8
  # DEBUG BEGIN_STMT
  if (PllStatus_8 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  Clock_Ip_DistributePll ();
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 0

  <bb 5> [local count: 1073741824]:
  # ClockStatus_2 = PHI <0(4), 0(2), 1(3)>
  # DEBUG ClockStatus => ClockStatus_2
  # DEBUG BEGIN_STMT
  return ClockStatus_2;

}



;; Function Clock_Ip_DisableClockMonitor (Clock_Ip_DisableClockMonitor, funcdef_no=8, decl_uid=6143, cgraph_uid=9, symbol_order=12)

Clock_Ip_DisableClockMonitor (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T656>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Disable;
  _4 (ClockName_6(D));
  return;

}



;; Function Clock_Ip_GetClockMonitorStatus (Clock_Ip_GetClockMonitorStatus, funcdef_no=9, decl_uid=6141, cgraph_uid=10, symbol_order=13)

Clock_Ip_GetClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  Clock_Ip_CmuStatusType (*<T6d1>) (Clock_Ip_NameType) _4;
  Clock_Ip_CmuStatusType _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].GetStatus;
  _9 = _4 (ClockName_6(D));
  return _9;

}



;; Function Clock_Ip_ClearClockMonitorStatus (Clock_Ip_ClearClockMonitorStatus, funcdef_no=10, decl_uid=6139, cgraph_uid=11, symbol_order=14)

Clock_Ip_ClearClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T656>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Clear;
  _4 (ClockName_6(D));
  return;

}



;; Function Clock_Ip_InstallNotificationsCallback (Clock_Ip_InstallNotificationsCallback, funcdef_no=11, decl_uid=6137, cgraph_uid=12, symbol_order=15)

Clock_Ip_InstallNotificationsCallback (void (*Clock_Ip_NotificationsCallbackType) (Clock_Ip_NotificationType, Clock_Ip_NameType) Callback)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback = Callback_2(D);
  return;

}



;; Function Clock_Ip_DisableModuleClock (Clock_Ip_DisableModuleClock, funcdef_no=12, decl_uid=6145, cgraph_uid=13, symbol_order=16)

Clock_Ip_DisableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T6bc>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 1);
  return;

}



;; Function Clock_Ip_EnableModuleClock (Clock_Ip_EnableModuleClock, funcdef_no=13, decl_uid=6147, cgraph_uid=14, symbol_order=17)

Clock_Ip_EnableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<T6bc>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 0);
  return;

}



;; Function Clock_Ip_DisableFircInStandby (Clock_Ip_DisableFircInStandby, funcdef_no=15, decl_uid=6149, cgraph_uid=16, symbol_order=19)

Clock_Ip_DisableFircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.21_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.21_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.21_1, 2);
  # DEBUG BEGIN_STMT
  DisableFircInStandbyMode ();
  return;

}



;; Function Clock_Ip_EnableFircInStandby (Clock_Ip_EnableFircInStandby, funcdef_no=16, decl_uid=6151, cgraph_uid=17, symbol_order=20)

Clock_Ip_EnableFircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.22_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.22_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.22_1, 2);
  # DEBUG BEGIN_STMT
  EnableFircInStandbyMode ();
  return;

}



;; Function Clock_Ip_DisableSircInStandby (Clock_Ip_DisableSircInStandby, funcdef_no=17, decl_uid=6153, cgraph_uid=18, symbol_order=21)

Clock_Ip_DisableSircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.23_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.23_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.23_1, 2);
  # DEBUG BEGIN_STMT
  DisableSircInStandbyMode ();
  return;

}



;; Function Clock_Ip_EnableSircInStandby (Clock_Ip_EnableSircInStandby, funcdef_no=18, decl_uid=6155, cgraph_uid=19, symbol_order=22)

Clock_Ip_EnableSircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.24_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.24_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.24_1, 2);
  # DEBUG BEGIN_STMT
  EnableSircInStandbyMode ();
  return;

}



;; Function Clock_Ip_ReportClockErrors (Clock_Ip_ReportClockErrors, funcdef_no=19, decl_uid=6412, cgraph_uid=20, symbol_order=23)

Clock_Ip_ReportClockErrors (Clock_Ip_NotificationType Error, Clock_Ip_NameType ClockName)
{
  void (*<T53e>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.25_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.25_1 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.25_1 (Error_3(D), ClockName_4(D));
  return;

}



;; Function Clock_Ip_StartTimeout (Clock_Ip_StartTimeout, funcdef_no=20, decl_uid=6431, cgraph_uid=21, symbol_order=24)

Clock_Ip_StartTimeout (uint32 * StartTimeOut, uint32 * ElapsedTimeOut, uint32 * TimeoutTicksOut, uint32 TimeoutUs)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = OsIf_GetCounter (0);
  *StartTimeOut_5(D) = _1;
  # DEBUG BEGIN_STMT
  *ElapsedTimeOut_7(D) = 0;
  # DEBUG BEGIN_STMT
  _2 = OsIf_MicrosToTicks (TimeoutUs_9(D), 0);
  *TimeoutTicksOut_11(D) = _2;
  return;

}



;; Function Clock_Ip_TimeoutExpired (Clock_Ip_TimeoutExpired, funcdef_no=21, decl_uid=6435, cgraph_uid=22, symbol_order=25)

Clock_Ip_TimeoutExpired (uint32 * StartTimeInOut, uint32 * ElapsedTimeInOut, uint32 TimeoutTicks)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;
  boolean _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 = OsIf_GetElapsed (StartTimeInOut_4(D), 0);
  _1 = *ElapsedTimeInOut_7(D);
  _2 = _1 + _6;
  *ElapsedTimeInOut_7(D) = _2;
  # DEBUG BEGIN_STMT
  _10 = _2 >= TimeoutTicks_9(D);
  return _10;

}


