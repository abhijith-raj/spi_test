
Analyzing function: HwAccDmaCh_SetControl_EnStart.part.0/159
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnStart.part.0/159

IPA function summary for HwAccDmaCh_SetControl_EnStart.part.0/159 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed || op0[ref offset: 224] changed)
  calls:


Analyzing function: HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158

IPA function summary for HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 224] changed)
  calls:


Analyzing function: HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 inlinable
  global time:     21.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:5.000000, time:5.000000,  nonconst if:(op0 changed || op1 changed)
  calls:
    hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: HwAccDmaCh_SetRequest_MuxSource.part.0/150
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_MuxSource.part.0/150
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetRequest_MuxSource.part.0/150 inlinable
  global time:     21.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:5.000000, time:5.000000,  nonconst if:(op0 changed || op1 changed)
  calls:
    hwv3AccInlineDmaCh_SetRequest_SourceMux/19 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: HwAccDmaCh_SetRequest_EnMuxSource.part.0/149
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_EnMuxSource.part.0/149
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 inlinable
  global time:     21.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:5.000000, time:5.000000,  nonconst if:(op0 changed || op1 changed)
  calls:
    hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: hwAccDmaInst_CmdResume.part.0/147
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdResume.part.0/147

IPA function summary for hwAccDmaInst_CmdResume.part.0/147 inlinable
  global time:     5.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: hwAccDmaInst_CmdHalt.part.0/146
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdHalt.part.0/146

IPA function summary for hwAccDmaInst_CmdHalt.part.0/146 inlinable
  global time:     5.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: hwAccDmaInst_CmdCancelTransferWithError.part.0/145
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdCancelTransferWithError.part.0/145

IPA function summary for hwAccDmaInst_CmdCancelTransferWithError.part.0/145 inlinable
  global time:     5.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: hwAccDmaInst_CmdCancelTransfer.part.0/144
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdCancelTransfer.part.0/144

IPA function summary for hwAccDmaInst_CmdCancelTransfer.part.0/144 inlinable
  global time:     5.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: HwAccDmaCh_SetControl_EnScatterGatherProcessing/137
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnScatterGatherProcessing/137

IPA function summary for HwAccDmaCh_SetControl_EnScatterGatherProcessing/137 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_ScatterGatherAddress/136
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_ScatterGatherAddress/136

IPA function summary for HwAccDmaCh_SetControl_ScatterGatherAddress/136 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd/135
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd/135
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd/135 inlinable
  global time:     16.860000
  self size:       37
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 40] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 40] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:26.000000, time:8.840000,  executed if:(op0[ref offset: 32] == 3)
    size:1.000000, time:0.340000,  executed if:(op0[ref offset: 32] == 3),  nonconst if:(op0[ref offset: 48] changed) && (op0[ref offset: 32] == 3)
    size:1.000000, time:0.340000,  executed if:(op0[ref offset: 32] == 3),  nonconst if:(op0[ref offset: 40] changed) && (op0[ref offset: 32] == 3)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 3) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 3),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 3)
  calls:


Analyzing function: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 15 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 15 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }

Analyzing function body size: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134

IPA function summary for HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 inlinable
  global time:     41.409367
  self size:       98
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.680000,  executed if:(op0 == 3),  nonconst if:(op3 changed) && (op0 == 3)
    size:0.500000, time:0.085000,  executed if:(op3 == 0) && (op0 == 3) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op3 == 0) && (op0 == 3) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op3 == 0) && (op0 == 3),  nonconst if:(op1[ref offset: 32] changed) && (op3 == 0) && (op0 == 3)
    size:1.000000, time:0.170000,  executed if:(op3 == 0) && (op0 == 3)
    size:0.500000, time:0.085000,  executed if:(op3 != 0) && (op0 == 3) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op3 != 0) && (op0 == 3) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op3 != 0) && (op0 == 3),  nonconst if:(op1[ref offset: 32] changed) && (op3 != 0) && (op0 == 3)
    size:0.500000, time:0.085000,  executed if:(op3 != 0) && (op0 == 3) && (not inlined),  nonconst if:(op1[ref offset: 96] changed) && (op3 != 0) && (op0 == 3) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op3 != 0) && (op0 == 3),  nonconst if:(op1[ref offset: 96] changed) && (op3 != 0) && (op0 == 3)
    size:2.000000, time:0.340000,  executed if:(op3 != 0) && (op0 == 3)
    size:10.500000, time:1.976182,  executed if:(op0 == 3) && (not inlined)
    size:35.500000, time:6.746637,  executed if:(op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetMajorLoop_Count/46 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 function not considered for inlining
      freq:0.09 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 function not considered for inlining
      freq:0.09 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    Dma_Ip_ConvertLogicChToHwCh/141 function body not available
      freq:0.09 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMinorLoop_Size/43 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    Dma_Ip_ConvertLogicChToHwCh/141 function body not available
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetTransferAttributes/66 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetControlAndStatus/65 function not considered for inlining
      freq:0.18 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 function not considered for inlining
      freq:0.34 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_GetParam/133
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetParam/133
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetParam/133 inlinable
  global time:     23.000000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19


Analyzing function: HwAccDmaCh_GetIntHalfMajor/132
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetIntHalfMajor/132
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetIntHalfMajor/132 inlinable
  global time:     6.380000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.500000, time:1.530000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetIntMajor/131
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetIntMajor/131
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetIntMajor/131 inlinable
  global time:     6.380000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.500000, time:1.530000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetMasterId/130
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetMasterId/130
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetMasterId/130 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:3.500000, time:1.190000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetStoreDstAddress/129
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetStoreDstAddress/129
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetStoreDstAddress/129 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:3.500000, time:1.190000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetCurrentIterCount/128
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetCurrentIterCount/128
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetCurrentIterCount/128 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_GetCurrentIterCount/58 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_GetBeginIterCount/127
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetBeginIterCount/127
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetBeginIterCount/127 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_GetBeginIterCount/57 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_GetDestinationAddress/126
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetDestinationAddress/126
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetDestinationAddress/126 inlinable
  global time:     5.700000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.500000, time:0.850000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetSourceAddress/125
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetSourceAddress/125
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetSourceAddress/125 inlinable
  global time:     5.700000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.500000, time:0.850000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_SetTransferParam/124
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetTransferParam/124
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetTransferParam/124 inlinable
  global time:     22.000000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 6 time: 18


Analyzing function: HwAccDmaCh_SetControl_BandwidthControl/123
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_BandwidthControl/123

IPA function summary for HwAccDmaCh_SetControl_BandwidthControl/123 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetControl_BandwidthControl/54 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnEndOfPacketSignal/122
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnEndOfPacketSignal/122

IPA function summary for HwAccDmaCh_SetControl_EnEndOfPacketSignal/122 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_DisAutoHwRequest/121
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_DisAutoHwRequest/121

IPA function summary for HwAccDmaCh_SetControl_DisAutoHwRequest/121 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnHalfMajor/120
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnHalfMajor/120

IPA function summary for HwAccDmaCh_SetControl_EnHalfMajor/120 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnMajor/119
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnMajor/119

IPA function summary for HwAccDmaCh_SetControl_EnMajor/119 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetControl_EnMajor/50 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnStart/118
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnStart/118

IPA function summary for HwAccDmaCh_SetControl_EnStart/118 inlinable
  global time:     8.080000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    HwAccDmaCh_SetControl_EnStart.part.0/159 function not considered for inlining
      freq:0.34 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_StoreDestinationAddress/117
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_StoreDestinationAddress/117

IPA function summary for HwAccDmaCh_SetControl_StoreDestinationAddress/117 inlinable
  global time:     8.080000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158 function not considered for inlining
      freq:0.34 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMajorLoop_Count/116
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMajorLoop_Count/116

IPA function summary for HwAccDmaCh_SetMajorLoop_Count/116 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMajorLoop_Count/46 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMajorLoop_LogicLinkCh/115
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMajorLoop_LogicLinkCh/115

IPA function summary for HwAccDmaCh_SetMajorLoop_LogicLinkCh/115 inlinable
  global time:     18.428800
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    Dma_Ip_ConvertLogicChToHwCh/141 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: HwAccDmaCh_SetMajorLoop_EnLink/114
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMajorLoop_EnLink/114

IPA function summary for HwAccDmaCh_SetMajorLoop_EnLink/114 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMinorLoop_Size/113
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_Size/113

IPA function summary for HwAccDmaCh_SetMinorLoop_Size/113 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_Size/43 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMinorLoop_LogicLinkCh/112
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_LogicLinkCh/112

IPA function summary for HwAccDmaCh_SetMinorLoop_LogicLinkCh/112 inlinable
  global time:     18.428800
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)
    Dma_Ip_ConvertLogicChToHwCh/141 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: HwAccDmaCh_SetMinorLoop_EnLink/111
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_EnLink/111

IPA function summary for HwAccDmaCh_SetMinorLoop_EnLink/111 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMinorLoop_Offset/110
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_Offset/110

IPA function summary for HwAccDmaCh_SetMinorLoop_Offset/110 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMinorLoop_enDstOffset/109
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_enDstOffset/109

IPA function summary for HwAccDmaCh_SetMinorLoop_enDstOffset/109 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetMinorLoop_enSrcOffset/108
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetMinorLoop_enSrcOffset/108

IPA function summary for HwAccDmaCh_SetMinorLoop_enSrcOffset/108 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetDestination_Modulo/107
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetDestination_Modulo/107

IPA function summary for HwAccDmaCh_SetDestination_Modulo/107 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetDestination_Modulo/37 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetDestination_TransferSize/106
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetDestination_TransferSize/106

IPA function summary for HwAccDmaCh_SetDestination_TransferSize/106 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetDestination_TransferSize/36 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetDestination_LastAddrAdj/105
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetDestination_LastAddrAdj/105

IPA function summary for HwAccDmaCh_SetDestination_LastAddrAdj/105 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetDestination_SignedOffset/104
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetDestination_SignedOffset/104

IPA function summary for HwAccDmaCh_SetDestination_SignedOffset/104 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetDestination_Address/103
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetDestination_Address/103

IPA function summary for HwAccDmaCh_SetDestination_Address/103 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetSource_Modulo/102
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetSource_Modulo/102

IPA function summary for HwAccDmaCh_SetSource_Modulo/102 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetSource_Modulo/32 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetSource_TransferSize/101
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetSource_TransferSize/101

IPA function summary for HwAccDmaCh_SetSource_TransferSize/101 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetSource_TransferSize/31 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetSource_LastAddrAdj/100
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetSource_LastAddrAdj/100

IPA function summary for HwAccDmaCh_SetSource_LastAddrAdj/100 inlinable
  global time:     5.360000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined),  nonconst if:(op1[ref offset: 224] changed) && (op0 == 3) && (not inlined)
    size:1.500000, time:0.510000,  executed if:(op0 == 3),  nonconst if:(op1[ref offset: 224] changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3) && (not inlined)
    size:1.000000, time:0.340000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetSource_SignedOffset/99
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetSource_SignedOffset/99

IPA function summary for HwAccDmaCh_SetSource_SignedOffset/99 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetSource_Address/98
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetSource_Address/98

IPA function summary for HwAccDmaCh_SetSource_Address/98 inlinable
  global time:     4.340000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_SetGlobalParam/97
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetGlobalParam/97
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetGlobalParam/97 inlinable
  global time:     23.000000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19


Analyzing function: HwAccDmaCh_SetPriority_DisPreempt/96
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetPriority_DisPreempt/96
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetPriority_DisPreempt/96 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetPriority_DisPreempt/27 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetPriority_EnPreemption/95
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetPriority_EnPreemption/95
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetPriority_EnPreemption/95 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetPriority_EnPreemption/26 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetPriority_Level/94
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetPriority_Level/94
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetPriority_Level/94 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetPriority_Level/25 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetPriority_Group/93
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetPriority_Group/93

IPA function summary for HwAccDmaCh_SetPriority_Group/93 inlinable
  global time:     6.428800
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    hwv3AccInlineDmaCh_SetPriority_Group/24 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetInterrupt_EnError/92
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetInterrupt_EnError/92
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetInterrupt_EnError/92 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetInterrupt_EnError/23 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetRequest_EnRequest/91
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_EnRequest/91
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetRequest_EnRequest/91 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetRequest_EnMuxTrigger/90
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_EnMuxTrigger/90

IPA function summary for HwAccDmaCh_SetRequest_EnMuxTrigger/90 inlinable
  global time:     6.631200
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 function not considered for inlining
      freq:0.20 loop depth: 0 size: 4 time: 13 callee size: 6 stack: 0 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetRequest_MuxSource/89
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_MuxSource/89

IPA function summary for HwAccDmaCh_SetRequest_MuxSource/89 inlinable
  global time:     6.631200
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    HwAccDmaCh_SetRequest_MuxSource.part.0/150 function not considered for inlining
      freq:0.20 loop depth: 0 size: 4 time: 13 callee size: 6 stack: 0 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetRequest_EnMuxSource/88
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetRequest_EnMuxSource/88

IPA function summary for HwAccDmaCh_SetRequest_EnMuxSource/88 inlinable
  global time:     6.631200
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 function not considered for inlining
      freq:0.20 loop depth: 0 size: 4 time: 13 callee size: 6 stack: 0 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnBufferedWrites/87
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnBufferedWrites/87
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetControl_EnBufferedWrites/87 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_SetControl_EnMasterIdReplication/86
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetControl_EnMasterIdReplication/86
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetControl_EnMasterIdReplication/86 inlinable
  global time:     7.036000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.202400,  executed if:(op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.202400,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:
    hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0 == 3)


Analyzing function: HwAccDmaCh_GetStatus_Error/85
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetStatus_Error/85
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetStatus_Error/85 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:3.500000, time:1.190000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:0.500000, time:0.170000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_GetStatus/84
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetStatus/84
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_GetStatus/84 inlinable
  global time:     7.060000
  self size:       14
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:6.000000, time:2.040000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaCh_SetCommand/83
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaCh_SetCommand/83
		Accounting address calculation.

IPA function summary for HwAccDmaCh_SetCommand/83 inlinable
  global time:     22.000000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 6 time: 18


Analyzing function: HwAccDmaCh_CmdClearError/82
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_CmdClearError/82
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_CmdClearError/82 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.000000, time:1.360000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_CmdClearDone/81
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_CmdClearDone/81
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_CmdClearDone/81 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.000000, time:1.360000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_CmdSetSwRequest/80
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_CmdSetSwRequest/80
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_CmdSetSwRequest/80 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.000000, time:1.360000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_CmdClearHwRequest/79
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_CmdClearHwRequest/79
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_CmdClearHwRequest/79 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.000000, time:1.360000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:


Analyzing function: HwAccDmaCh_CmdSetHwRequest/78
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaCh_CmdSetHwRequest/78
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for HwAccDmaCh_CmdSetHwRequest/78 inlinable
  global time:     6.040000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:4.000000, time:1.360000,  executed if:(op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op2 changed) && (op0 == 3)
    size:1.000000, time:0.340000,  executed if:(op0 == 3),  nonconst if:(op1 changed) && (op0 == 3)
  calls:


Analyzing function: HwAccDmaInst_GetStatus/77
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaInst_GetStatus/77

IPA function summary for HwAccDmaInst_GetStatus/77 inlinable
  global time:     8.400000
  self size:       16
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:8.500000, time:2.890000,  executed if:(op0[ref offset: 32] == 3)
    size:1.500000, time:0.510000,  executed if:(op0[ref offset: 32] == 3) && (not inlined)
  calls:


Analyzing function: HwAccDmaInst_SetCommand/76
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaInst_SetCommand/76
		Accounting address calculation.

IPA function summary for HwAccDmaInst_SetCommand/76 inlinable
  global time:     20.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16


Analyzing function: hwAccDmaInst_CmdResume/75
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdResume/75

IPA function summary for hwAccDmaInst_CmdResume/75 inlinable
  global time:     8.400000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    hwAccDmaInst_CmdResume.part.0/147 function not considered for inlining
      freq:0.34 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] == 3)


Analyzing function: hwAccDmaInst_CmdHalt/74
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdHalt/74

IPA function summary for hwAccDmaInst_CmdHalt/74 inlinable
  global time:     8.400000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    hwAccDmaInst_CmdHalt.part.0/146 function not considered for inlining
      freq:0.34 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] == 3)


Analyzing function: hwAccDmaInst_CmdCancelTransferWithError/73
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdCancelTransferWithError/73

IPA function summary for hwAccDmaInst_CmdCancelTransferWithError/73 inlinable
  global time:     8.400000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    hwAccDmaInst_CmdCancelTransferWithError.part.0/145 function not considered for inlining
      freq:0.34 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] == 3)


Analyzing function: hwAccDmaInst_CmdCancelTransfer/72
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: hwAccDmaInst_CmdCancelTransfer/72

IPA function summary for hwAccDmaInst_CmdCancelTransfer/72 inlinable
  global time:     8.400000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    hwAccDmaInst_CmdCancelTransfer.part.0/144 function not considered for inlining
      freq:0.34 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] == 3)


Analyzing function: HwAccDmaInst_SetConfig/71
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: HwAccDmaInst_SetConfig/71

IPA function summary for HwAccDmaInst_SetConfig/71 inlinable
  global time:     7.428800
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    hwv3AccInlineDmaInst_SetConfig/1 function not considered for inlining
      freq:0.20 loop depth: 0 size: 3 time: 12 predicate: (op0[ref offset: 32] == 3)
       op0 is compile time invariant


Analyzing function: HwAccDmaCh_GetParamDummyFunction/70
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: HwAccDmaCh_GetParamDummyFunction/70

IPA function summary for HwAccDmaCh_GetParamDummyFunction/70 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67

IPA function summary for hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67 inlinable
  global time:     20.000000
  self size:       21
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:14.500000, time:14.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetTransferAttributes/66
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetTransferAttributes/66

IPA function summary for hwv3AccInlineDmaCh_SetTransferAttributes/66 inlinable
  global time:     23.000000
  self size:       24
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:17.500000, time:17.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControlAndStatus/65
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControlAndStatus/65

IPA function summary for hwv3AccInlineDmaCh_SetControlAndStatus/65 inlinable
  global time:     33.000000
  self size:       34
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:27.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63

IPA function summary for hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_GetCurrentIterCount/58
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_GetCurrentIterCount/58

IPA function summary for hwv3AccInlineDmaCh_GetCurrentIterCount/58 inlinable
  global time:     6.410000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 176] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 176] changed)
    size:0.500000, time:0.295000,  executed if:(op0[ref offset: 176],((signed short) #) >= 0) && (not inlined)
    size:0.500000, time:0.295000,  executed if:(op0[ref offset: 176],((signed short) #) >= 0)
    size:1.000000, time:0.410000,  executed if:(op0[ref offset: 176],((signed short) #) < 0),  nonconst if:(op0[ref offset: 176] changed) && (op0[ref offset: 176],((signed short) #) < 0)
    size:0.500000, time:0.205000,  executed if:(op0[ref offset: 176],((signed short) #) < 0) && (not inlined)
    size:0.500000, time:0.205000,  executed if:(op0[ref offset: 176],((signed short) #) < 0)
  calls:


Analyzing function: hwv3AccInlineDmaCh_GetBeginIterCount/57
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_GetBeginIterCount/57

IPA function summary for hwv3AccInlineDmaCh_GetBeginIterCount/57 inlinable
  global time:     6.410000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:0.500000, time:0.295000,  executed if:(op0[ref offset: 240],((signed short) #) >= 0) && (not inlined)
    size:0.500000, time:0.295000,  executed if:(op0[ref offset: 240],((signed short) #) >= 0)
    size:1.000000, time:0.410000,  executed if:(op0[ref offset: 240],((signed short) #) < 0),  nonconst if:(op0[ref offset: 240] changed) && (op0[ref offset: 240],((signed short) #) < 0)
    size:0.500000, time:0.205000,  executed if:(op0[ref offset: 240],((signed short) #) < 0) && (not inlined)
    size:0.500000, time:0.205000,  executed if:(op0[ref offset: 240],((signed short) #) < 0)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_BandwidthControl/54
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_BandwidthControl/54

IPA function summary for hwv3AccInlineDmaCh_SetControl_BandwidthControl/54 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53

IPA function summary for hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52

IPA function summary for hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51

IPA function summary for hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_EnMajor/50
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_EnMajor/50

IPA function summary for hwv3AccInlineDmaCh_SetControl_EnMajor/50 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMajorLoop_Count/46
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMajorLoop_Count/46

IPA function summary for hwv3AccInlineDmaCh_SetMajorLoop_Count/46 inlinable
  global time:     14.000000
  self size:       22
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:1.000000
    size:5.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 176] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 176] changed)
    size:3.000000, time:3.000000,  nonconst if:(op0[ref offset: 240] changed || op0[ref offset: 176] changed)
    size:2.000000, time:1.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  nonconst if:(op0[ref offset: 240] changed || op1 changed)
    size:2.000000, time:1.000000,  nonconst if:(op0[ref offset: 176] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45

IPA function summary for hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44

IPA function summary for hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 224] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_Size/43
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_Size/43

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_Size/43 inlinable
  global time:     9.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 64],(# & 3221225472) == 0),  nonconst if:(op1 changed) && (op0[ref offset: 64],(# & 3221225472) == 0)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 64],(# & 3221225472) == 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 64],(# & 3221225472) == 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 64],(# & 3221225472) != 0),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 64],(# & 3221225472) != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 64],(# & 3221225472) != 0),  nonconst if:(op1 changed) && (op0[ref offset: 64],(# & 3221225472) != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 64],(# & 3221225472) != 0),  nonconst if:(op0[ref offset: 64] changed || op1 changed) && (op0[ref offset: 64],(# & 3221225472) != 0)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 64],(# & 3221225472) != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 64],(# & 3221225472) != 0)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 inlinable
  global time:     12.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 240] changed || op1 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 176] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 176] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed || op0[ref offset: 176] changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 inlinable
  global time:     11.000000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 240] changed || op1 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 176] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 176] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed || op0[ref offset: 176] changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38

IPA function summary for hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetDestination_Modulo/37
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetDestination_Modulo/37

IPA function summary for hwv3AccInlineDmaCh_SetDestination_Modulo/37 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 48] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetDestination_TransferSize/36
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetDestination_TransferSize/36

IPA function summary for hwv3AccInlineDmaCh_SetDestination_TransferSize/36 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 48] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetSource_Modulo/32
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetSource_Modulo/32

IPA function summary for hwv3AccInlineDmaCh_SetSource_Modulo/32 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 48] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetSource_TransferSize/31
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetSource_TransferSize/31

IPA function summary for hwv3AccInlineDmaCh_SetSource_TransferSize/31 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 48] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetPriority_DisPreempt/27
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetPriority_DisPreempt/27

IPA function summary for hwv3AccInlineDmaCh_SetPriority_DisPreempt/27 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 128] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetPriority_EnPreemption/26
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetPriority_EnPreemption/26

IPA function summary for hwv3AccInlineDmaCh_SetPriority_EnPreemption/26 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 128] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetPriority_Level/25
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetPriority_Level/25

IPA function summary for hwv3AccInlineDmaCh_SetPriority_Level/25 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 128] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetPriority_Group/24
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetPriority_Group/24

IPA function summary for hwv3AccInlineDmaCh_SetPriority_Group/24 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetInterrupt_EnError/23
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetInterrupt_EnError/23

IPA function summary for hwv3AccInlineDmaCh_SetInterrupt_EnError/23 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22

IPA function summary for hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21

IPA function summary for hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20

IPA function summary for hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetRequest_SourceMux/19
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetRequest_SourceMux/19

IPA function summary for hwv3AccInlineDmaCh_SetRequest_SourceMux/19 inlinable
  global time:     7.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18

IPA function summary for hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17

IPA function summary for hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 96] changed || op1 changed)
  calls:


Analyzing function: hwv3AccInlineDmaInst_SetConfig/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }

Analyzing function body size: hwv3AccInlineDmaInst_SetConfig/1

IPA function summary for hwv3AccInlineDmaInst_SetConfig/1 inlinable
  global time:     29.000000
  self size:       30
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 72] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 72] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 64] changed || op1[ref offset: 72] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 64] changed || op1[ref offset: 72] changed || op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 88] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 88] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 64] changed || op1[ref offset: 72] changed || op1[ref offset: 80] changed || op1[ref offset: 88] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 96] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 64] changed || op1[ref offset: 72] changed || op1[ref offset: 80] changed || op1[ref offset: 88] changed || op1[ref offset: 96] changed)
  calls:

Symbol table:

hwv3AccInlineDmaCh_GetBeginIterCount.isra.0/167 (hwv3AccInlineDmaCh_GetBeginIterCount.isra) @063d2620
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaCh_GetBeginIterCount/57
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaCh_GetBeginIterCount/127 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_GetCurrentIterCount.isra.0/166 (hwv3AccInlineDmaCh_GetCurrentIterCount.isra) @063d2380
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaCh_GetCurrentIterCount/58
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaCh_GetCurrentIterCount/128 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControlAndStatus.isra.0/165 (hwv3AccInlineDmaCh_SetControlAndStatus.isra) @063d20e0
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaCh_SetControlAndStatus/65
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetTransferAttributes.isra.0/164 (hwv3AccInlineDmaCh_SetTransferAttributes.isra) @0351fc40
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaCh_SetTransferAttributes/66
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetSignedMinorLoopOffset.isra.0/163 (hwv3AccInlineDmaCh_SetSignedMinorLoopOffset.isra) @0351f1c0
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) 
  Calls: 
hwv3AccInlineDmaInst_SetConfig.constprop.0/162 (hwv3AccInlineDmaInst_SetConfig.constprop) @0351fee0
  Type: function definition analyzed
  Visibility:
  References: 
  Referring: 
  Clone of hwv3AccInlineDmaInst_SetConfig/1
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: HwAccDmaInst_SetConfig/71 (217325344 (estimated locally),0.20 per call) 
  Calls: 
HwAccDmaCh_SetControl_EnStart.part.0/159 (HwAccDmaCh_SetControl_EnStart.part.0) @061f5460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: HwAccDmaCh_SetControl_EnStart/118 (365072224 (estimated locally),0.34 per call) 
  Calls: 
HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158 (HwAccDmaCh_SetControl_StoreDestinationAddress.part.0) @061f52a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: HwAccDmaCh_SetControl_StoreDestinationAddress/117 (365072224 (estimated locally),0.34 per call) 
  Calls: 
HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 (HwAccDmaCh_SetRequest_EnMuxTrigger.part.0) @063c4540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Dma_Ip_paxHwv3MuxBase/68 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: HwAccDmaCh_SetRequest_EnMuxTrigger/90 (217325344 (estimated locally),0.20 per call) 
  Calls: hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20 (1073741824 (estimated locally),1.00 per call) 
HwAccDmaCh_SetRequest_MuxSource.part.0/150 (HwAccDmaCh_SetRequest_MuxSource.part.0) @063c4000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Dma_Ip_paxHwv3MuxBase/68 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: HwAccDmaCh_SetRequest_MuxSource/89 (217325344 (estimated locally),0.20 per call) 
  Calls: hwv3AccInlineDmaCh_SetRequest_SourceMux/19 (1073741824 (estimated locally),1.00 per call) 
HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 (HwAccDmaCh_SetRequest_EnMuxSource.part.0) @0612fa80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Dma_Ip_paxHwv3MuxBase/68 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: HwAccDmaCh_SetRequest_EnMuxSource/88 (217325344 (estimated locally),0.20 per call) 
  Calls: hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21 (1073741824 (estimated locally),1.00 per call) 
hwAccDmaInst_CmdResume.part.0/147 (hwAccDmaInst_CmdResume.part.0) @061b3540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: hwAccDmaInst_CmdResume/75 (365072224 (estimated locally),0.34 per call) 
  Calls: 
hwAccDmaInst_CmdHalt.part.0/146 (hwAccDmaInst_CmdHalt.part.0) @061b3380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: hwAccDmaInst_CmdHalt/74 (365072224 (estimated locally),0.34 per call) 
  Calls: 
hwAccDmaInst_CmdCancelTransferWithError.part.0/145 (hwAccDmaInst_CmdCancelTransferWithError.part.0) @061b31c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: hwAccDmaInst_CmdCancelTransferWithError/73 (365072224 (estimated locally),0.34 per call) 
  Calls: 
hwAccDmaInst_CmdCancelTransfer.part.0/144 (hwAccDmaInst_CmdCancelTransfer.part.0) @061b3000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local split_part optimize_size
  Called by: hwAccDmaInst_CmdCancelTransfer/72 (365072224 (estimated locally),0.34 per call) 
  Calls: 
fpHwAcc_DmaCh_GetParam.0/143 (fpHwAcc_DmaCh_GetParam) @06207990
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: HwAccDmaCh_GetSourceAddress/125 (addr) HwAccDmaCh_GetDestinationAddress/126 (addr) HwAccDmaCh_GetBeginIterCount/127 (addr) HwAccDmaCh_GetCurrentIterCount/128 (addr) HwAccDmaCh_GetStoreDstAddress/129 (addr) HwAccDmaCh_GetMasterId/130 (addr) HwAccDmaCh_GetIntMajor/131 (addr) HwAccDmaCh_GetIntHalfMajor/132 (addr) HwAccDmaCh_GetParamDummyFunction/70 (addr) 
  Referring: HwAccDmaCh_GetParam/133 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
fpHwAcc_DmaCh_SetTransferParam.1/142 (fpHwAcc_DmaCh_SetTransferParam) @061fbe58
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: HwAccDmaCh_SetSource_Address/98 (addr) HwAccDmaCh_SetSource_SignedOffset/99 (addr) HwAccDmaCh_SetSource_LastAddrAdj/100 (addr) HwAccDmaCh_SetSource_TransferSize/101 (addr) HwAccDmaCh_SetSource_Modulo/102 (addr) HwAccDmaCh_SetDestination_Address/103 (addr) HwAccDmaCh_SetDestination_SignedOffset/104 (addr) HwAccDmaCh_SetDestination_LastAddrAdj/105 (addr) HwAccDmaCh_SetDestination_TransferSize/106 (addr) HwAccDmaCh_SetDestination_Modulo/107 (addr) HwAccDmaCh_SetMinorLoop_enSrcOffset/108 (addr) HwAccDmaCh_SetMinorLoop_enDstOffset/109 (addr) HwAccDmaCh_SetMinorLoop_Offset/110 (addr) HwAccDmaCh_SetMinorLoop_EnLink/111 (addr) HwAccDmaCh_SetMinorLoop_LogicLinkCh/112 (addr) HwAccDmaCh_SetMinorLoop_Size/113 (addr) HwAccDmaCh_SetMajorLoop_EnLink/114 (addr) HwAccDmaCh_SetMajorLoop_LogicLinkCh/115 (addr) HwAccDmaCh_SetMajorLoop_Count/116 (addr) HwAccDmaCh_SetControl_StoreDestinationAddress/117 (addr) HwAccDmaCh_SetControl_EnStart/118 (addr) HwAccDmaCh_SetControl_EnMajor/119 (addr) HwAccDmaCh_SetControl_EnHalfMajor/120 (addr) HwAccDmaCh_SetControl_DisAutoHwRequest/121 (addr) HwAccDmaCh_SetControl_EnEndOfPacketSignal/122 (addr) HwAccDmaCh_SetControl_BandwidthControl/123 (addr) 
  Referring: HwAccDmaCh_SetTransferParam/124 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Dma_Ip_ConvertLogicChToHwCh/141 (Dma_Ip_ConvertLogicChToHwCh) @061e78c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (97602059 (estimated locally),0.09 per call) HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMajorLoop_LogicLinkCh/115 (1073741824 (estimated locally),1.00 per call) HwAccDmaCh_SetMinorLoop_LogicLinkCh/112 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
fpHwAcc_DmaCh_SetGlobalParam.2/140 (fpHwAcc_DmaCh_SetGlobalParam) @061d0dc8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: HwAccDmaCh_SetControl_EnMasterIdReplication/86 (addr) HwAccDmaCh_SetControl_EnBufferedWrites/87 (addr) HwAccDmaCh_SetRequest_EnMuxSource/88 (addr) HwAccDmaCh_SetRequest_MuxSource/89 (addr) HwAccDmaCh_SetRequest_EnMuxTrigger/90 (addr) HwAccDmaCh_SetRequest_EnRequest/91 (addr) HwAccDmaCh_SetInterrupt_EnError/92 (addr) HwAccDmaCh_SetPriority_Group/93 (addr) HwAccDmaCh_SetPriority_Level/94 (addr) HwAccDmaCh_SetPriority_EnPreemption/95 (addr) HwAccDmaCh_SetPriority_DisPreempt/96 (addr) 
  Referring: HwAccDmaCh_SetGlobalParam/97 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
fpHwAcc_DmaCh_Command.3/139 (fpHwAcc_DmaCh_Command) @061c0630
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: HwAccDmaCh_CmdSetHwRequest/78 (addr) HwAccDmaCh_CmdClearHwRequest/79 (addr) HwAccDmaCh_CmdSetSwRequest/80 (addr) HwAccDmaCh_CmdClearDone/81 (addr) HwAccDmaCh_CmdClearError/82 (addr) 
  Referring: HwAccDmaCh_SetCommand/83 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
fpHwAcc_DmaInst_Command.4/138 (fpHwAcc_DmaInst_Command) @061b6168
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: hwAccDmaInst_CmdCancelTransfer/72 (addr) hwAccDmaInst_CmdCancelTransferWithError/73 (addr) hwAccDmaInst_CmdHalt/74 (addr) hwAccDmaInst_CmdResume/75 (addr) 
  Referring: HwAccDmaInst_SetCommand/76 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
HwAccDmaCh_SetControl_EnScatterGatherProcessing/137 (HwAccDmaCh_SetControl_EnScatterGatherProcessing) @061a0d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_ScatterGatherAddress/136 (HwAccDmaCh_SetControl_ScatterGatherAddress) @061a0a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: HwAccDmaCh_SetDestination_LastAddrAdj/105 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd/135 (HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd) @061a07e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (HwAccDmaCh_LoadConfigIntoSoftwareTcd) @061a0540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMajorLoop_Count/46 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 (97602059 (estimated locally),0.09 per call) hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 (97602059 (estimated locally),0.09 per call) Dma_Ip_ConvertLogicChToHwCh/141 (97602059 (estimated locally),0.09 per call) hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetMinorLoop_Size/43 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 (195204118 (estimated locally),0.18 per call) Dma_Ip_ConvertLogicChToHwCh/141 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetSignedMinorLoopOffset.isra.0/163 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetTransferAttributes.isra.0/164 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetControlAndStatus.isra.0/165 (195204118 (estimated locally),0.18 per call) hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 (365072224 (estimated locally),0.34 per call) 
HwAccDmaCh_GetParam/133 (HwAccDmaCh_GetParam) @061a02a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: fpHwAcc_DmaCh_GetParam.0/143 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
HwAccDmaCh_GetIntHalfMajor/132 (HwAccDmaCh_GetIntHalfMajor) @06197ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetIntMajor/131 (HwAccDmaCh_GetIntMajor) @061979a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetMasterId/130 (HwAccDmaCh_GetMasterId) @06197460
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetStoreDstAddress/129 (HwAccDmaCh_GetStoreDstAddress) @06197e00
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetCurrentIterCount/128 (HwAccDmaCh_GetCurrentIterCount) @06197b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_GetCurrentIterCount.isra.0/166 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_GetBeginIterCount/127 (HwAccDmaCh_GetBeginIterCount) @061978c0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_GetBeginIterCount.isra.0/167 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_GetDestinationAddress/126 (HwAccDmaCh_GetDestinationAddress) @06197620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetSourceAddress/125 (HwAccDmaCh_GetSourceAddress) @06197380
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetTransferParam/124 (HwAccDmaCh_SetTransferParam) @061970e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: fpHwAcc_DmaCh_SetTransferParam.1/142 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
HwAccDmaCh_SetControl_BandwidthControl/123 (HwAccDmaCh_SetControl_BandwidthControl) @06190b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_BandwidthControl/54 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnEndOfPacketSignal/122 (HwAccDmaCh_SetControl_EnEndOfPacketSignal) @06190620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_DisAutoHwRequest/121 (HwAccDmaCh_SetControl_DisAutoHwRequest) @061900e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnHalfMajor/120 (HwAccDmaCh_SetControl_EnHalfMajor) @06190d20
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnMajor/119 (HwAccDmaCh_SetControl_EnMajor) @06190a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_EnMajor/50 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnStart/118 (HwAccDmaCh_SetControl_EnStart) @061907e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetControl_EnStart.part.0/159 (365072224 (estimated locally),0.34 per call) 
HwAccDmaCh_SetControl_StoreDestinationAddress/117 (HwAccDmaCh_SetControl_StoreDestinationAddress) @06190540
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetControl_StoreDestinationAddress.part.0/158 (365072224 (estimated locally),0.34 per call) 
HwAccDmaCh_SetMajorLoop_Count/116 (HwAccDmaCh_SetMajorLoop_Count) @061902a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMajorLoop_Count/46 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMajorLoop_LogicLinkCh/115 (HwAccDmaCh_SetMajorLoop_LogicLinkCh) @06190000
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 (217325344 (estimated locally),0.20 per call) Dma_Ip_ConvertLogicChToHwCh/141 (1073741824 (estimated locally),1.00 per call) 
HwAccDmaCh_SetMajorLoop_EnLink/114 (HwAccDmaCh_SetMajorLoop_EnLink) @06188b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMinorLoop_Size/113 (HwAccDmaCh_SetMinorLoop_Size) @06188620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_Size/43 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMinorLoop_LogicLinkCh/112 (HwAccDmaCh_SetMinorLoop_LogicLinkCh) @061880e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 (217325344 (estimated locally),0.20 per call) Dma_Ip_ConvertLogicChToHwCh/141 (1073741824 (estimated locally),1.00 per call) 
HwAccDmaCh_SetMinorLoop_EnLink/111 (HwAccDmaCh_SetMinorLoop_EnLink) @06188d20
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMinorLoop_Offset/110 (HwAccDmaCh_SetMinorLoop_Offset) @06188a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMinorLoop_enDstOffset/109 (HwAccDmaCh_SetMinorLoop_enDstOffset) @061887e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetMinorLoop_enSrcOffset/108 (HwAccDmaCh_SetMinorLoop_enSrcOffset) @06188540
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetDestination_Modulo/107 (HwAccDmaCh_SetDestination_Modulo) @061882a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetDestination_Modulo/37 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetDestination_TransferSize/106 (HwAccDmaCh_SetDestination_TransferSize) @06188000
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetDestination_TransferSize/36 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetDestination_LastAddrAdj/105 (HwAccDmaCh_SetDestination_LastAddrAdj) @06182b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetControl_ScatterGatherAddress/136 (1073741824 (estimated locally),1.00 per call) 
HwAccDmaCh_SetDestination_SignedOffset/104 (HwAccDmaCh_SetDestination_SignedOffset) @06182620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetDestination_Address/103 (HwAccDmaCh_SetDestination_Address) @061820e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetSource_Modulo/102 (HwAccDmaCh_SetSource_Modulo) @06182d20
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetSource_Modulo/32 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetSource_TransferSize/101 (HwAccDmaCh_SetSource_TransferSize) @06182a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetSource_TransferSize/31 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetSource_LastAddrAdj/100 (HwAccDmaCh_SetSource_LastAddrAdj) @061827e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetSource_SignedOffset/99 (HwAccDmaCh_SetSource_SignedOffset) @06182540
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetSource_Address/98 (HwAccDmaCh_SetSource_Address) @061822a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetTransferParam.1/142 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetGlobalParam/97 (HwAccDmaCh_SetGlobalParam) @06182000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: fpHwAcc_DmaCh_SetGlobalParam.2/140 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
HwAccDmaCh_SetPriority_DisPreempt/96 (HwAccDmaCh_SetPriority_DisPreempt) @061789a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetPriority_DisPreempt/27 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetPriority_EnPreemption/95 (HwAccDmaCh_SetPriority_EnPreemption) @06178460
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetPriority_EnPreemption/26 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetPriority_Level/94 (HwAccDmaCh_SetPriority_Level) @06178e00
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetPriority_Level/25 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetPriority_Group/93 (HwAccDmaCh_SetPriority_Group) @06178b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetPriority_Group/24 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetInterrupt_EnError/92 (HwAccDmaCh_SetInterrupt_EnError) @061788c0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetInterrupt_EnError/23 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetRequest_EnRequest/91 (HwAccDmaCh_SetRequest_EnRequest) @06178620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetRequest_EnMuxTrigger/90 (HwAccDmaCh_SetRequest_EnMuxTrigger) @06178380
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetRequest_MuxSource/89 (HwAccDmaCh_SetRequest_MuxSource) @06178000
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetRequest_MuxSource.part.0/150 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetRequest_EnMuxSource/88 (HwAccDmaCh_SetRequest_EnMuxSource) @061728c0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnBufferedWrites/87 (HwAccDmaCh_SetControl_EnBufferedWrites) @061720e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_SetControl_EnMasterIdReplication/86 (HwAccDmaCh_SetControl_EnMasterIdReplication) @06172d20
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_SetGlobalParam.2/140 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_GetStatus_Error/85 (HwAccDmaCh_GetStatus_Error) @06172a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_GetStatus/84 (HwAccDmaCh_GetStatus) @061727e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_SetCommand/83 (HwAccDmaCh_SetCommand) @06172540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: fpHwAcc_DmaCh_Command.3/139 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
HwAccDmaCh_CmdClearError/82 (HwAccDmaCh_CmdClearError) @061722a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_Command.3/139 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_CmdClearDone/81 (HwAccDmaCh_CmdClearDone) @06172000
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_Command.3/139 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_CmdSetSwRequest/80 (HwAccDmaCh_CmdSetSwRequest) @06166b60
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_Command.3/139 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_CmdClearHwRequest/79 (HwAccDmaCh_CmdClearHwRequest) @06166620
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_Command.3/139 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaCh_CmdSetHwRequest/78 (HwAccDmaCh_CmdSetHwRequest) @061660e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: g_ptHwChTcdPtrArray/0 (read) 
  Referring: fpHwAcc_DmaCh_Command.3/139 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaInst_GetStatus/77 (HwAccDmaInst_GetStatus) @06166d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
HwAccDmaInst_SetCommand/76 (HwAccDmaInst_SetCommand) @06166a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: fpHwAcc_DmaInst_Command.4/138 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  Num speculative call targets: 0
hwAccDmaInst_CmdResume/75 (hwAccDmaInst_CmdResume) @061667e0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaInst_Command.4/138 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwAccDmaInst_CmdResume.part.0/147 (365072224 (estimated locally),0.34 per call) 
hwAccDmaInst_CmdHalt/74 (hwAccDmaInst_CmdHalt) @06166540
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaInst_Command.4/138 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwAccDmaInst_CmdHalt.part.0/146 (365072224 (estimated locally),0.34 per call) 
hwAccDmaInst_CmdCancelTransferWithError/73 (hwAccDmaInst_CmdCancelTransferWithError) @061662a0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaInst_Command.4/138 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwAccDmaInst_CmdCancelTransferWithError.part.0/145 (365072224 (estimated locally),0.34 per call) 
hwAccDmaInst_CmdCancelTransfer/72 (hwAccDmaInst_CmdCancelTransfer) @06166000
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaInst_Command.4/138 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwAccDmaInst_CmdCancelTransfer.part.0/144 (365072224 (estimated locally),0.34 per call) 
HwAccDmaInst_SetConfig/71 (HwAccDmaInst_SetConfig) @06161b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: hwv3AccInlineDmaInst_SetConfig.constprop.0/162 (217325344 (estimated locally),0.20 per call) 
HwAccDmaCh_GetParamDummyFunction/70 (HwAccDmaCh_GetParamDummyFunction) @06161d20
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: 
  Referring: fpHwAcc_DmaCh_GetParam.0/143 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Dma_Ip_paxHwv3MuxBase/68 (Dma_Ip_paxHwv3MuxBase) @05f4eea0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 (read) HwAccDmaCh_SetRequest_MuxSource.part.0/150 (read) HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
hwv3AccInlineDmaCh_SetSignedMinorLoopOffset/67 (hwv3AccInlineDmaCh_SetSignedMinorLoopOffset) @06148ee0
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
hwv3AccInlineDmaCh_SetTransferAttributes/66 (hwv3AccInlineDmaCh_SetTransferAttributes) @06148c40
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
hwv3AccInlineDmaCh_SetControlAndStatus/65 (hwv3AccInlineDmaCh_SetControlAndStatus) @061489a0
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing/63 (hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing) @06148380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnScatterGatherProcessing/137 (217325344 (estimated locally),0.20 per call) HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (365072224 (estimated locally),0.34 per call) 
  Calls: 
hwv3AccInlineDmaCh_GetCurrentIterCount/58 (hwv3AccInlineDmaCh_GetCurrentIterCount) @06144620
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
hwv3AccInlineDmaCh_GetBeginIterCount/57 (hwv3AccInlineDmaCh_GetBeginIterCount) @06144380
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
hwv3AccInlineDmaCh_SetControl_BandwidthControl/54 (hwv3AccInlineDmaCh_SetControl_BandwidthControl) @0613db60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_BandwidthControl/123 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal/53 (hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal) @0613d7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnEndOfPacketSignal/122 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest/52 (hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest) @0613d460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_DisAutoHwRequest/121 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_EnHalfMajor/51 (hwv3AccInlineDmaCh_SetControl_EnHalfMajor) @0613d0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnHalfMajor/120 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_EnMajor/50 (hwv3AccInlineDmaCh_SetControl_EnMajor) @05f4dd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnMajor/119 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMajorLoop_Count/46 (hwv3AccInlineDmaCh_SetMajorLoop_Count) @05f4d000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMajorLoop_Count/116 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMajorLoop_LinkCh/45 (hwv3AccInlineDmaCh_SetMajorLoop_LinkCh) @05f479a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (97602059 (estimated locally),0.09 per call) HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (97602059 (estimated locally),0.09 per call) HwAccDmaCh_SetMajorLoop_LogicLinkCh/115 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMajorLoop_EnLink/44 (hwv3AccInlineDmaCh_SetMajorLoop_EnLink) @05f47620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMajorLoop_EnLink/114 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_Size/43 (hwv3AccInlineDmaCh_SetMinorLoop_Size) @05f472a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMinorLoop_Size/113 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_LinkCh/42 (hwv3AccInlineDmaCh_SetMinorLoop_LinkCh) @05f43e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMinorLoop_LogicLinkCh/112 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_EnLink/41 (hwv3AccInlineDmaCh_SetMinorLoop_EnLink) @05f439a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_LoadConfigIntoSoftwareTcd/134 (195204118 (estimated locally),0.18 per call) HwAccDmaCh_SetMinorLoop_EnLink/111 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset/40 (hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset) @05f43540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetMinorLoop_Offset/110 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset/39 (hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset) @05f431c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetMinorLoop_enDstOffset/109 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset/38 (hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset) @05f40e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetMinorLoop_enSrcOffset/108 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetDestination_Modulo/37 (hwv3AccInlineDmaCh_SetDestination_Modulo) @05f40a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetDestination_Modulo/107 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetDestination_TransferSize/36 (hwv3AccInlineDmaCh_SetDestination_TransferSize) @05f40700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetDestination_TransferSize/106 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetSource_Modulo/32 (hwv3AccInlineDmaCh_SetSource_Modulo) @05f3c8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetSource_Modulo/102 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetSource_TransferSize/31 (hwv3AccInlineDmaCh_SetSource_TransferSize) @05f3c540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetSource_TransferSize/101 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetPriority_DisPreempt/27 (hwv3AccInlineDmaCh_SetPriority_DisPreempt) @05f37700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetPriority_DisPreempt/96 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetPriority_EnPreemption/26 (hwv3AccInlineDmaCh_SetPriority_EnPreemption) @05f37380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetPriority_EnPreemption/95 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetPriority_Level/25 (hwv3AccInlineDmaCh_SetPriority_Level) @05f37000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetPriority_Level/94 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetPriority_Group/24 (hwv3AccInlineDmaCh_SetPriority_Group) @05f33c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetPriority_Group/93 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetInterrupt_EnError/23 (hwv3AccInlineDmaCh_SetInterrupt_EnError) @05f338c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetInterrupt_EnError/92 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetRequest_EnHwRequest/22 (hwv3AccInlineDmaCh_SetRequest_EnHwRequest) @05f33540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetRequest_EnRequest/91 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux/21 (hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux) @05f331c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetRequest_EnMuxSource.part.0/149 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetRequest_EnTriggerMux/20 (hwv3AccInlineDmaCh_SetRequest_EnTriggerMux) @06136e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetRequest_EnMuxTrigger.part.0/151 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetRequest_SourceMux/19 (hwv3AccInlineDmaCh_SetRequest_SourceMux) @06136a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetRequest_MuxSource.part.0/150 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_EnBufferedWrites/18 (hwv3AccInlineDmaCh_SetControl_EnBufferedWrites) @06136700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnBufferedWrites/87 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication/17 (hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication) @06136380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: HwAccDmaCh_SetControl_EnMasterIdReplication/86 (217325344 (estimated locally),0.20 per call) 
  Calls: 
hwv3AccInlineDmaInst_SetConfig/1 (hwv3AccInlineDmaInst_SetConfig) @05f1f000
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
g_ptHwChTcdPtrArray/0 (g_ptHwChTcdPtrArray) @05f10678
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: HwAccDmaCh_GetStatus/84 (read) HwAccDmaCh_GetStatus_Error/85 (read) HwAccDmaCh_CmdSetHwRequest/78 (read) HwAccDmaCh_CmdClearHwRequest/79 (read) HwAccDmaCh_CmdSetSwRequest/80 (read) HwAccDmaCh_GetMasterId/130 (read) HwAccDmaCh_GetIntMajor/131 (read) HwAccDmaCh_GetIntHalfMajor/132 (read) HwAccDmaCh_CmdClearDone/81 (read) HwAccDmaCh_CmdClearError/82 (read) HwAccDmaCh_SetControl_EnMasterIdReplication/86 (read) HwAccDmaCh_SetControl_EnBufferedWrites/87 (read) HwAccDmaCh_SetRequest_EnRequest/91 (read) HwAccDmaCh_SetInterrupt_EnError/92 (read) HwAccDmaCh_SetPriority_Level/94 (read) HwAccDmaCh_SetPriority_EnPreemption/95 (read) HwAccDmaCh_SetPriority_DisPreempt/96 (read) HwAccDmaCh_GetSourceAddress/125 (read) HwAccDmaCh_GetDestinationAddress/126 (read) HwAccDmaCh_GetBeginIterCount/127 (read) HwAccDmaCh_GetCurrentIterCount/128 (read) HwAccDmaCh_GetStoreDstAddress/129 (read) HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd/135 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
HwAccDmaCh_SetControl_EnStart.part.0 (struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  uint16 reg;
  const uint32 LocHwVers;
  _Bool _2;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#35 s=> LocHwVers
  # DEBUG LocHwVers => D#35

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  _2 = LocValue_1(D) != 0;
  # DEBUG ptTcd => pxLocTcd_3(D)
  # DEBUG Value => _2
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetControl_EnStart
  # DEBUG BEGIN_STMT
  reg_4 = pxLocTcd_3(D)->reg_CSR;
  # DEBUG reg => reg_4
  # DEBUG BEGIN_STMT
  _5 = reg_4 & 65534;
  _6 = (short unsigned int) _2;
  _7 = _5 | _6;
  pxLocTcd_3(D)->reg_CSR = _7;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_SetControl_StoreDestinationAddress.part.0 (struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  uint16 reg;
  const uint32 LocHwVers;
  short unsigned int _4;
  short unsigned int _5;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#33 s=> LocHwVers
  # DEBUG LocHwVers => D#33

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_2(D)
  # DEBUG Value => LocValue_1(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetControl_StoreDestinationAddress
  # DEBUG BEGIN_STMT
  # DEBUG D#8 => pxLocTcd_2(D)->reg_SLAST_SDA
  # DEBUG reg => D#8
  # DEBUG BEGIN_STMT
  pxLocTcd_2(D)->reg_SLAST_SDA = LocValue_1(D);
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_2(D)
  # DEBUG Value => 1
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetAuxiliary_EnDestinationStoreAddress
  # DEBUG BEGIN_STMT
  reg_3 = pxLocTcd_2(D)->reg_CSR;
  # DEBUG reg => reg_3
  # DEBUG BEGIN_STMT
  _4 = reg_3 & 65407;
  _5 = _4 | 128;
  pxLocTcd_2(D)->reg_CSR = _5;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_SetRequest_EnMuxTrigger.part.0 (const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  uint32 LocDmaCh;
  uint32 LocDmaMuxInst;
  uint32 LocDmaMuxCh;
  const uint32 LocHwVers;
  long unsigned int _2;
  long unsigned int _6;
  struct DMAMUX_Type * _8;
  volatile uint8_t * _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#31 s=> LocHwVers
  # DEBUG LocHwVers => D#31

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  _2 = LocHwInst_1(D) * 32;
  LocDmaCh_4 = _2 + LocHwCh_3(D);
  # DEBUG LocDmaCh => LocDmaCh_4
  # DEBUG BEGIN_STMT
  LocDmaMuxInst_5 = LocDmaCh_4 / 6;
  # DEBUG LocDmaMuxInst => LocDmaMuxInst_5
  # DEBUG BEGIN_STMT
  _6 = LocDmaCh_4 % 6;
  LocDmaMuxCh_7 = _6 ^ 3;
  # DEBUG LocDmaMuxCh => LocDmaMuxCh_7
  # DEBUG BEGIN_STMT
  _8 = Dma_Ip_paxHwv3MuxBase[LocDmaMuxInst_5];
  _9 = &_8->CHCFG[LocDmaMuxCh_7];
  hwv3AccInlineDmaCh_SetRequest_EnTriggerMux (_9, LocValue_10(D));
  # DEBUG BEGIN_STMT

  <bb 3> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_MuxSource.part.0 (const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  uint32 LocDmaCh;
  uint32 LocDmaMuxInst;
  uint32 LocDmaMuxCh;
  const uint32 LocHwVers;
  long unsigned int _2;
  long unsigned int _6;
  struct DMAMUX_Type * _8;
  volatile uint8_t * _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#29 s=> LocHwVers
  # DEBUG LocHwVers => D#29

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  _2 = LocHwInst_1(D) * 32;
  LocDmaCh_4 = _2 + LocHwCh_3(D);
  # DEBUG LocDmaCh => LocDmaCh_4
  # DEBUG BEGIN_STMT
  LocDmaMuxInst_5 = LocDmaCh_4 / 6;
  # DEBUG LocDmaMuxInst => LocDmaMuxInst_5
  # DEBUG BEGIN_STMT
  _6 = LocDmaCh_4 % 6;
  LocDmaMuxCh_7 = _6 ^ 3;
  # DEBUG LocDmaMuxCh => LocDmaMuxCh_7
  # DEBUG BEGIN_STMT
  _8 = Dma_Ip_paxHwv3MuxBase[LocDmaMuxInst_5];
  _9 = &_8->CHCFG[LocDmaMuxCh_7];
  hwv3AccInlineDmaCh_SetRequest_SourceMux (_9, LocValue_10(D));
  # DEBUG BEGIN_STMT

  <bb 3> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_EnMuxSource.part.0 (const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  uint32 LocDmaCh;
  uint32 LocDmaMuxInst;
  uint32 LocDmaMuxCh;
  const uint32 LocHwVers;
  long unsigned int _2;
  long unsigned int _6;
  struct DMAMUX_Type * _8;
  volatile uint8_t * _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#27 s=> LocHwVers
  # DEBUG LocHwVers => D#27

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  _2 = LocHwInst_1(D) * 32;
  LocDmaCh_4 = _2 + LocHwCh_3(D);
  # DEBUG LocDmaCh => LocDmaCh_4
  # DEBUG BEGIN_STMT
  LocDmaMuxInst_5 = LocDmaCh_4 / 6;
  # DEBUG LocDmaMuxInst => LocDmaMuxInst_5
  # DEBUG BEGIN_STMT
  _6 = LocDmaCh_4 % 6;
  LocDmaMuxCh_7 = _6 ^ 3;
  # DEBUG LocDmaMuxCh => LocDmaMuxCh_7
  # DEBUG BEGIN_STMT
  _8 = Dma_Ip_paxHwv3MuxBase[LocDmaMuxInst_5];
  _9 = &_8->CHCFG[LocDmaMuxCh_7];
  hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux (_9, LocValue_10(D));
  # DEBUG BEGIN_STMT

  <bb 3> [local count: 1073741824]:
  return;

}


hwAccDmaInst_CmdResume.part.0 ()
{
  uint32 LocHwVers;
  uint32 LocHwInst;
  uint32 reg;
  const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#20 s=> pxLocLogicInst
  # DEBUG pxLocLogicInst => D#20

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG ptInst => 1075888128B
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_CmdResume
  # DEBUG BEGIN_STMT
  reg_1 ={v} MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  # DEBUG reg => reg_1
  # DEBUG BEGIN_STMT
  reg_2 = reg_1 & 4294967263;
  # DEBUG reg => reg_2
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR ={v} reg_2;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdHalt.part.0 ()
{
  uint32 LocHwVers;
  uint32 LocHwInst;
  uint32 reg;
  const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#17 s=> pxLocLogicInst
  # DEBUG pxLocLogicInst => D#17

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG ptInst => 1075888128B
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_CmdHalt
  # DEBUG BEGIN_STMT
  reg_1 ={v} MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  # DEBUG reg => reg_1
  # DEBUG BEGIN_STMT
  reg_2 = reg_1 | 32;
  # DEBUG reg => reg_2
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR ={v} reg_2;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdCancelTransferWithError.part.0 ()
{
  uint32 LocHwVers;
  uint32 LocHwInst;
  uint32 reg;
  const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#14 s=> pxLocLogicInst
  # DEBUG pxLocLogicInst => D#14

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG ptInst => 1075888128B
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_CmdCancelTransferWithError
  # DEBUG BEGIN_STMT
  reg_1 ={v} MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  # DEBUG reg => reg_1
  # DEBUG BEGIN_STMT
  reg_2 = reg_1 | 256;
  # DEBUG reg => reg_2
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR ={v} reg_2;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdCancelTransfer.part.0 ()
{
  uint32 LocHwVers;
  uint32 LocHwInst;
  uint32 reg;
  const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#11 s=> pxLocLogicInst
  # DEBUG pxLocLogicInst => D#11

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG ptInst => 1075888128B
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_CmdCancelTransfer
  # DEBUG BEGIN_STMT
  reg_1 ={v} MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  # DEBUG reg => reg_1
  # DEBUG BEGIN_STMT
  reg_2 = reg_1 | 512;
  # DEBUG reg => reg_2
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR ={v} reg_2;

  <bb 3> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_SetControl_EnScatterGatherProcessing (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, boolean LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_ScatterGatherAddress (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetControl_ScatterGatherAddress
  # DEBUG BEGIN_STMT
  # DEBUG D#7 => pxLocTcd_4(D)->reg_DLAST_SGA
  # DEBUG reg => D#7
  # DEBUG BEGIN_STMT
  pxLocTcd_4(D)->reg_DLAST_SGA = LocValue_5(D);

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_LoadSoftwareTcdIntoHardwareTcd (const struct Dma_Ip_LogicChannelIdType * const pxLocLogicCh, const struct Dma_Ip_ScatterGatherConfigType * const pxLocScatterGather)
{
  uint32 reg;
  uint32 LocHwCh;
  uint32 LocHwInst;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  struct Dma_Ip_Hwv3ChTcdRegType * _4;
  struct Dma_Ip_SwTcdRegType * _5;
  long unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  long unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicCh_19(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  _2 = pxLocLogicCh_19(D)->HwInstId;
  LocHwInst_20 = (uint32) _2;
  # DEBUG LocHwInst => LocHwInst_20
  # DEBUG BEGIN_STMT
  _3 = pxLocLogicCh_19(D)->HwChId;
  LocHwCh_21 = (uint32) _3;
  # DEBUG LocHwCh => LocHwCh_21
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  _4 = g_ptHwChTcdPtrArray[LocHwInst_20][LocHwCh_21];
  # DEBUG D#52 => &_4->tChReg
  # DEBUG ptCh => D#52
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdClearDone
  # DEBUG BEGIN_STMT
  reg_34 = MEM[(struct Dma_Ip_ChRegType *)_4].reg_CH_CSR;
  # DEBUG reg => reg_34
  # DEBUG BEGIN_STMT
  reg_35 = reg_34 | 1073741824;
  # DEBUG reg => reg_35
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_ChRegType *)_4].reg_CH_CSR = reg_35;
  # DEBUG ptCh => NULL
  # DEBUG reg => NULL
  # DEBUG BEGIN_STMT
  _5 = pxLocScatterGather_22(D)->Stcd;
  _6 = _5->reg_SADDR;
  _4->tTcdReg.reg_SADDR = _6;
  # DEBUG BEGIN_STMT
  _7 = _5->reg_SOFF;
  _4->tTcdReg.reg_SOFF = _7;
  # DEBUG BEGIN_STMT
  _8 = _5->reg_ATTR;
  _4->tTcdReg.reg_ATTR = _8;
  # DEBUG BEGIN_STMT
  _9 = _5->reg_NBYTES.reg_MLOFFYES;
  _4->tTcdReg.reg_NBYTES.reg_MLOFFYES = _9;
  # DEBUG BEGIN_STMT
  _10 = _5->reg_SLAST_SDA;
  _4->tTcdReg.reg_SLAST_SDA = _10;
  # DEBUG BEGIN_STMT
  _11 = _5->reg_DADDR;
  _4->tTcdReg.reg_DADDR = _11;
  # DEBUG BEGIN_STMT
  _12 = _5->reg_DOFF;
  _4->tTcdReg.reg_DOFF = _12;
  # DEBUG BEGIN_STMT
  _13 = _5->reg_CITER.reg_ELINKYES;
  _4->tTcdReg.reg_CITER.reg_ELINKYES = _13;
  # DEBUG BEGIN_STMT
  _14 = _5->reg_DLAST_SGA;
  _4->tTcdReg.reg_DLAST_SGA = _14;
  # DEBUG BEGIN_STMT
  _15 = _5->reg_BITER.reg_ELINKYES;
  _4->tTcdReg.reg_BITER.reg_ELINKYES = _15;
  # DEBUG BEGIN_STMT
  _16 = _5->reg_CSR;
  _4->tTcdReg.reg_CSR = _16;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


HwAccDmaCh_LoadConfigIntoSoftwareTcd (uint32 HwVersId, const struct Dma_Ip_ScatterGatherConfigType * const pxLocScatterGather, const uint32 ElementId, const boolean NotLastElement)
{
  uint32 hwLinkCh;
  struct Dma_Ip_SwTcdRegType * _1;
  struct Dma_Ip_ScatterGatherConfigType * _2;
  struct Dma_Ip_SwTcdRegType * _3;
  long unsigned int _4;
  struct Dma_Ip_SwTcdRegType * _5;
  struct Dma_Ip_SwTcdRegType * _6;
  struct Dma_Ip_TransferConfigType * _7;
  struct Dma_Ip_SwTcdRegType * _8;
  struct Dma_Ip_SwTcdRegType * _9;
  struct Dma_Ip_TransferConfigType * _10;
  long unsigned int _11;
  short int _12;
  long unsigned int _13;
  long unsigned int _14;
  short int _15;
  long unsigned int _16;
  struct Dma_Ip_SwTcdRegType * _17;
  struct Dma_Ip_SwTcdRegType * _18;
  struct Dma_Ip_TransferConfigType * _19;
  _Bool _20;
  struct Dma_Ip_TransferConfigType * _21;
  unsigned char _22;
  long unsigned int _23;
  struct Dma_Ip_SwTcdRegType * _24;
  struct Dma_Ip_SwTcdRegType * _25;
  struct Dma_Ip_TransferConfigType * _26;
  long unsigned int _27;
  struct Dma_Ip_SwTcdRegType * _28;
  struct Dma_Ip_TransferConfigType * _29;
  _Bool _30;
  struct Dma_Ip_TransferConfigType * _31;
  _Bool _32;
  unsigned char _33;
  long unsigned int _34;
  struct Dma_Ip_SwTcdRegType * _35;
  struct Dma_Ip_SwTcdRegType * _36;
  struct Dma_Ip_SwTcdRegType * _37;
  struct Dma_Ip_TransferConfigType * _38;
  long unsigned int _39;
  struct Dma_Ip_SwTcdRegType * _40;
  struct Dma_Ip_TransferConfigType * _41;
  long int _42;
  long unsigned int _43;
  const uint32 iftmp.10_44;
  const uint32 iftmp.11_45;
  short unsigned int _69;
  short unsigned int _70;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (HwVersId_49(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  if (NotLastElement_51(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 182536112]:
  # DEBUG BEGIN_STMT
  _1 = pxLocScatterGather_52(D)->Stcd;
  _2 = pxLocScatterGather_52(D)->NextConfig;
  _3 = _2->Stcd;
  _4 = (long unsigned int) _3;
  # DEBUG ptTcd => _1
  # DEBUG Value => _4
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetControl_ScatterGatherAddress
  # DEBUG BEGIN_STMT
  # DEBUG D#7 => MEM[(struct Dma_Ip_TcdRegType *)_1].reg_DLAST_SGA
  # DEBUG reg => D#7
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_1].reg_DLAST_SGA = _4;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 182536112]:
  # DEBUG BEGIN_STMT
  _5 = pxLocScatterGather_52(D)->Stcd;
  # DEBUG ptTcd => _5
  # DEBUG Value => 0
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetControl_ScatterGatherAddress
  # DEBUG BEGIN_STMT
  # DEBUG D#7 => MEM[(struct Dma_Ip_TcdRegType *)_5].reg_DLAST_SGA
  # DEBUG reg => D#7
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_5].reg_DLAST_SGA = 0;

  <bb 6> [local count: 365072224]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  _6 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing (_6, NotLastElement_51(D));
  # DEBUG BEGIN_STMT
  _7 = pxLocScatterGather_52(D)->TransferConfig;
  if (_7 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 15>; [46.53%]

  <bb 7> [local count: 195204118]:
  # DEBUG BEGIN_STMT
  _8 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetControlAndStatus (_8, pxLocScatterGather_52(D));
  # DEBUG BEGIN_STMT
  _9 = pxLocScatterGather_52(D)->Stcd;
  _10 = pxLocScatterGather_52(D)->TransferConfig;
  _11 = _10->Source.Addr;
  # DEBUG ptTcd => _9
  # DEBUG Value => _11
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_Address
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => MEM[(struct Dma_Ip_TcdRegType *)_9].reg_SADDR
  # DEBUG reg => D#1
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_9].reg_SADDR = _11;
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  _12 = _10->Source.SignedOffset;
  _13 = (long unsigned int) _12;
  # DEBUG ptTcd => _9
  # DEBUG Value => _13
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_SignedOffset
  # DEBUG BEGIN_STMT
  # DEBUG D#2 => MEM[(struct Dma_Ip_TcdRegType *)_9].reg_SOFF
  # DEBUG reg => (uint32) D#2
  # DEBUG BEGIN_STMT
  _70 = (short unsigned int) _13;
  MEM[(struct Dma_Ip_TcdRegType *)_9].reg_SOFF = _70;
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  _14 = _10->Destination.Addr;
  # DEBUG ptTcd => _9
  # DEBUG Value => _14
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetDestination_Address
  # DEBUG BEGIN_STMT
  # DEBUG D#4 => MEM[(struct Dma_Ip_TcdRegType *)_9].reg_DADDR
  # DEBUG reg => D#4
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_9].reg_DADDR = _14;
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  _15 = _10->Destination.SignedOffset;
  _16 = (long unsigned int) _15;
  # DEBUG ptTcd => _9
  # DEBUG Value => _16
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetDestination_SignedOffset
  # DEBUG BEGIN_STMT
  # DEBUG D#5 => MEM[(struct Dma_Ip_TcdRegType *)_9].reg_DOFF
  # DEBUG reg => D#5
  # DEBUG BEGIN_STMT
  _69 = (short unsigned int) _16;
  MEM[(struct Dma_Ip_TcdRegType *)_9].reg_DOFF = _69;
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetTransferAttributes (_9, pxLocScatterGather_52(D));
  # DEBUG BEGIN_STMT
  _17 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetSignedMinorLoopOffset (_17, pxLocScatterGather_52(D));
  # DEBUG BEGIN_STMT
  _18 = pxLocScatterGather_52(D)->Stcd;
  _19 = pxLocScatterGather_52(D)->TransferConfig;
  _20 = _19->MinorLoop.EnLink;
  if (_20 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 97602059]:

  <bb 9> [local count: 195204118]:
  # iftmp.10_44 = PHI <1(7), 0(8)>
  hwv3AccInlineDmaCh_SetMinorLoop_EnLink (_18, iftmp.10_44);
  # DEBUG BEGIN_STMT
  _21 = pxLocScatterGather_52(D)->TransferConfig;
  _22 = _21->MinorLoop.LogicLinkCh;
  _23 = (long unsigned int) _22;
  hwLinkCh_59 = Dma_Ip_ConvertLogicChToHwCh (_23);
  # DEBUG hwLinkCh => hwLinkCh_59
  # DEBUG BEGIN_STMT
  _24 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetMinorLoop_LinkCh (_24, hwLinkCh_59);
  # DEBUG BEGIN_STMT
  _25 = pxLocScatterGather_52(D)->Stcd;
  _26 = pxLocScatterGather_52(D)->TransferConfig;
  _27 = _26->MinorLoop.Size;
  hwv3AccInlineDmaCh_SetMinorLoop_Size (_25, _27);
  # DEBUG BEGIN_STMT
  _28 = pxLocScatterGather_52(D)->Stcd;
  _29 = pxLocScatterGather_52(D)->TransferConfig;
  _30 = _29->MajorLoop.EnLink;
  if (_30 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 97602059]:

  <bb 11> [local count: 195204118]:
  # iftmp.11_45 = PHI <1(9), 0(10)>
  hwv3AccInlineDmaCh_SetMajorLoop_EnLink (_28, iftmp.11_45);
  # DEBUG BEGIN_STMT
  _31 = pxLocScatterGather_52(D)->TransferConfig;
  _32 = _31->MajorLoop.EnLink;
  if (_32 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 97602059]:
  # DEBUG BEGIN_STMT
  _33 = _31->MajorLoop.LogicLinkCh;
  _34 = (long unsigned int) _33;
  hwLinkCh_66 = Dma_Ip_ConvertLogicChToHwCh (_34);
  # DEBUG hwLinkCh => hwLinkCh_66
  # DEBUG BEGIN_STMT
  _35 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetMajorLoop_LinkCh (_35, hwLinkCh_66);
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 97602059]:
  # DEBUG BEGIN_STMT
  _36 = pxLocScatterGather_52(D)->Stcd;
  hwv3AccInlineDmaCh_SetMajorLoop_LinkCh (_36, ElementId_63(D));

  <bb 14> [local count: 195204118]:
  # DEBUG BEGIN_STMT
  _37 = pxLocScatterGather_52(D)->Stcd;
  _38 = pxLocScatterGather_52(D)->TransferConfig;
  _39 = _38->MajorLoop.Count;
  hwv3AccInlineDmaCh_SetMajorLoop_Count (_37, _39);
  # DEBUG BEGIN_STMT
  _40 = pxLocScatterGather_52(D)->Stcd;
  _41 = pxLocScatterGather_52(D)->TransferConfig;
  _42 = _41->Source.LastAddrAdj;
  _43 = (long unsigned int) _42;
  # DEBUG ptTcd => _40
  # DEBUG Value => _43
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_SignedLastAddrAdj
  # DEBUG BEGIN_STMT
  # DEBUG D#3 => MEM[(struct Dma_Ip_TcdRegType *)_40].reg_SLAST_SDA
  # DEBUG reg => D#3
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_40].reg_SLAST_SDA = _43;

  <bb 15> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG BEGIN_STMT
  return;

}


HwAccDmaCh_GetParam (const uint32 Parameter, const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  static void (*<T6b0>) (const uint32, const uint32, const uint32, uint32 * const) fpHwAcc_DmaCh_GetParam[9] = {HwAccDmaCh_GetSourceAddress, HwAccDmaCh_GetDestinationAddress, HwAccDmaCh_GetBeginIterCount, HwAccDmaCh_GetCurrentIterCount, HwAccDmaCh_GetStoreDstAddress, HwAccDmaCh_GetMasterId, HwAccDmaCh_GetIntMajor, HwAccDmaCh_GetIntHalfMajor, HwAccDmaCh_GetParamDummyFunction};
  void (*<T6ac>) (const uint32, const uint32, const uint32, uint32 * const) _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = fpHwAcc_DmaCh_GetParam[Parameter_3(D)];
  _1 (LocHwVers_4(D), LocHwInst_5(D), LocHwCh_6(D), retValue_7(D));
  return;

}


HwAccDmaCh_GetIntHalfMajor (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#41 => &_1->tTcdReg
  # DEBUG ptTcd => D#41
  # DEBUG retValue => retValue_7(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetIntHalfMajor
  # DEBUG BEGIN_STMT
  _8 = MEM[(const struct Dma_Ip_TcdRegType *)_1 + 32B].reg_CSR;
  _9 = (long unsigned int) _8;
  _10 = _9 >> 2;
  _11 = _10 & 1;
  *retValue_7(D) = _11;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG retValue => NULL
  return;

}


HwAccDmaCh_GetIntMajor (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#40 => &_1->tTcdReg
  # DEBUG ptTcd => D#40
  # DEBUG retValue => retValue_7(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetIntMajor
  # DEBUG BEGIN_STMT
  _8 = MEM[(const struct Dma_Ip_TcdRegType *)_1 + 32B].reg_CSR;
  _9 = (long unsigned int) _8;
  _10 = _9 >> 1;
  _11 = _10 & 1;
  *retValue_7(D) = _11;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG retValue => NULL
  return;

}


HwAccDmaCh_GetMasterId (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#39 => &_1->tChReg
  # DEBUG ptCh => D#39
  # DEBUG retValue => retValue_7(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetMasterId
  # DEBUG BEGIN_STMT
  _8 = MEM[(const struct Dma_Ip_ChRegType *)_1].reg_CH_SBR;
  _9 = _8 & 63;
  *retValue_7(D) = _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG retValue => NULL
  return;

}


HwAccDmaCh_GetStoreDstAddress (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  uint32 * LocPhysicalAddress.9_2;
  long unsigned int _3;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocHwVers_5(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_7(D)][LocHwCh_8(D)];
  # DEBUG D#38 => &_1->tTcdReg
  # DEBUG ptTcd => D#38
  # DEBUG retValue => &LocPhysicalAddress
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetStoreDstAddress
  # DEBUG BEGIN_STMT
  _11 = MEM[(const struct Dma_Ip_TcdRegType *)_1 + 32B].reg_SLAST_SDA;
  # DEBUG LocPhysicalAddress => _11
  # DEBUG ptTcd => NULL
  # DEBUG retValue => NULL
  # DEBUG BEGIN_STMT
  LocPhysicalAddress.9_2 = (uint32 *) _11;
  _3 = *LocPhysicalAddress.9_2;
  *retValue_9(D) = _3;
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # DEBUG LocPhysicalAddress => NULL
  return;

}


HwAccDmaCh_GetCurrentIterCount (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_TcdRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tTcdReg;
  hwv3AccInlineDmaCh_GetCurrentIterCount (_2, retValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_GetBeginIterCount (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_TcdRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tTcdReg;
  hwv3AccInlineDmaCh_GetBeginIterCount (_2, retValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_GetDestinationAddress (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#37 => &_1->tTcdReg
  # DEBUG ptTcd => D#37
  # DEBUG retValue => &LocPhysicalAddress
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetDestinationAddress
  # DEBUG BEGIN_STMT
  _9 = MEM[(const struct Dma_Ip_TcdRegType *)_1 + 32B].reg_DADDR;
  # DEBUG LocPhysicalAddress => _9
  # DEBUG ptTcd => NULL
  # DEBUG retValue => NULL
  # DEBUG BEGIN_STMT
  *retValue_7(D) = _9;
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # DEBUG LocPhysicalAddress => NULL
  return;

}


HwAccDmaCh_GetSourceAddress (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#36 => &_1->tTcdReg
  # DEBUG ptTcd => D#36
  # DEBUG retValue => &LocPhysicalAddress
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetSourceAddress
  # DEBUG BEGIN_STMT
  _9 = MEM[(const struct Dma_Ip_TcdRegType *)_1 + 32B].reg_SADDR;
  # DEBUG LocPhysicalAddress => _9
  # DEBUG ptTcd => NULL
  # DEBUG retValue => NULL
  # DEBUG BEGIN_STMT
  *retValue_7(D) = _9;
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # DEBUG LocPhysicalAddress => NULL
  return;

}


HwAccDmaCh_SetTransferParam (const uint32 Parameter, const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  static void (*<T6a1>) (const uint32, struct Dma_Ip_TcdRegType *, const uint32) fpHwAcc_DmaCh_SetTransferParam[26] = {HwAccDmaCh_SetSource_Address, HwAccDmaCh_SetSource_SignedOffset, HwAccDmaCh_SetSource_LastAddrAdj, HwAccDmaCh_SetSource_TransferSize, HwAccDmaCh_SetSource_Modulo, HwAccDmaCh_SetDestination_Address, HwAccDmaCh_SetDestination_SignedOffset, HwAccDmaCh_SetDestination_LastAddrAdj, HwAccDmaCh_SetDestination_TransferSize, HwAccDmaCh_SetDestination_Modulo, HwAccDmaCh_SetMinorLoop_enSrcOffset, HwAccDmaCh_SetMinorLoop_enDstOffset, HwAccDmaCh_SetMinorLoop_Offset, HwAccDmaCh_SetMinorLoop_EnLink, HwAccDmaCh_SetMinorLoop_LogicLinkCh, HwAccDmaCh_SetMinorLoop_Size, HwAccDmaCh_SetMajorLoop_EnLink, HwAccDmaCh_SetMajorLoop_LogicLinkCh, HwAccDmaCh_SetMajorLoop_Count, HwAccDmaCh_SetControl_StoreDestinationAddress, HwAccDmaCh_SetControl_EnStart, HwAccDmaCh_SetControl_EnMajor, HwAccDmaCh_SetControl_EnHalfMajor, HwAccDmaCh_SetControl_DisAutoHwRequest, HwAccDmaCh_SetControl_EnEndOfPacketSignal, HwAccDmaCh_SetControl_BandwidthControl};
  void (*<T69d>) (const uint32, struct Dma_Ip_TcdRegType *, const uint32) _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = fpHwAcc_DmaCh_SetTransferParam[Parameter_3(D)];
  _1 (LocHwVers_4(D), pxLocTcd_5(D), LocValue_6(D));
  return;

}


HwAccDmaCh_SetControl_BandwidthControl (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetControl_BandwidthControl (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnEndOfPacketSignal (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_DisAutoHwRequest (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnHalfMajor (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetControl_EnHalfMajor (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnMajor (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetControl_EnMajor (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnStart (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_1(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG D#34 => LocHwVers_1(D)
  HwAccDmaCh_SetControl_EnStart.part.0 (pxLocTcd_4(D), LocValue_3(D));

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_SetControl_StoreDestinationAddress (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_1(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG D#32 => LocHwVers_1(D)
  HwAccDmaCh_SetControl_StoreDestinationAddress.part.0 (pxLocTcd_3(D), LocValue_4(D));

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_SetMajorLoop_Count (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMajorLoop_Count (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMajorLoop_LogicLinkCh (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  uint32 hwLinkCh;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  hwLinkCh_5 = Dma_Ip_ConvertLogicChToHwCh (LocValue_3(D));
  # DEBUG hwLinkCh => hwLinkCh_5
  # DEBUG BEGIN_STMT
  if (LocHwVers_6(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMajorLoop_LinkCh (pxLocTcd_7(D), hwLinkCh_5);
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMajorLoop_EnLink (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMajorLoop_EnLink (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_Size (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_Size (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_LogicLinkCh (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  uint32 hwLinkCh;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  hwLinkCh_5 = Dma_Ip_ConvertLogicChToHwCh (LocValue_3(D));
  # DEBUG hwLinkCh => hwLinkCh_5
  # DEBUG BEGIN_STMT
  if (LocHwVers_6(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_LinkCh (pxLocTcd_7(D), hwLinkCh_5);
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_EnLink (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_EnLink (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_Offset (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_enDstOffset (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetMinorLoop_enSrcOffset (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetDestination_Modulo (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetDestination_Modulo (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetDestination_TransferSize (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetDestination_TransferSize (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetDestination_LastAddrAdj (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  HwAccDmaCh_SetControl_ScatterGatherAddress (LocHwVers_2(D), pxLocTcd_3(D), LocValue_4(D)); [tail call]
  return;

}


HwAccDmaCh_SetDestination_SignedOffset (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetDestination_SignedOffset
  # DEBUG BEGIN_STMT
  # DEBUG D#5 => pxLocTcd_4(D)->reg_DOFF
  # DEBUG reg => D#5
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) LocValue_5(D);
  pxLocTcd_4(D)->reg_DOFF = _6;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_SetDestination_Address (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetDestination_Address
  # DEBUG BEGIN_STMT
  # DEBUG D#4 => pxLocTcd_4(D)->reg_DADDR
  # DEBUG reg => D#4
  # DEBUG BEGIN_STMT
  pxLocTcd_4(D)->reg_DADDR = LocValue_5(D);

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_SetSource_Modulo (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetSource_Modulo (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetSource_TransferSize (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaCh_SetSource_TransferSize (pxLocTcd_4(D), LocValue_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetSource_LastAddrAdj (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  uint16 reg;
  short unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => 0
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetAuxiliary_EnDestinationStoreAddress
  # DEBUG BEGIN_STMT
  reg_6 = pxLocTcd_4(D)->reg_CSR;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _7 = reg_6 & 65407;
  pxLocTcd_4(D)->reg_CSR = _7;
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  # DEBUG reg => NULL
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_SignedLastAddrAdj
  # DEBUG BEGIN_STMT
  # DEBUG D#3 => pxLocTcd_4(D)->reg_SLAST_SDA
  # DEBUG reg => D#3
  # DEBUG BEGIN_STMT
  pxLocTcd_4(D)->reg_SLAST_SDA = LocValue_5(D);

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_SetSource_SignedOffset (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_SignedOffset
  # DEBUG BEGIN_STMT
  # DEBUG D#2 => pxLocTcd_4(D)->reg_SOFF
  # DEBUG reg => (uint32) D#2
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) LocValue_5(D);
  pxLocTcd_4(D)->reg_SOFF = _6;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_SetSource_Address (const uint32 LocHwVers, struct Dma_Ip_TcdRegType * pxLocTcd, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_2(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  # DEBUG ptTcd => pxLocTcd_4(D)
  # DEBUG Value => LocValue_5(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_SetSource_Address
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => pxLocTcd_4(D)->reg_SADDR
  # DEBUG reg => D#1
  # DEBUG BEGIN_STMT
  pxLocTcd_4(D)->reg_SADDR = LocValue_5(D);

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG Value => NULL
  return;

}


HwAccDmaCh_SetGlobalParam (const uint32 Parameter, const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  static void (*<T68d>) (const uint32, const uint32, const uint32, const uint32) fpHwAcc_DmaCh_SetGlobalParam[11] = {HwAccDmaCh_SetControl_EnMasterIdReplication, HwAccDmaCh_SetControl_EnBufferedWrites, HwAccDmaCh_SetRequest_EnMuxSource, HwAccDmaCh_SetRequest_MuxSource, HwAccDmaCh_SetRequest_EnMuxTrigger, HwAccDmaCh_SetRequest_EnRequest, HwAccDmaCh_SetInterrupt_EnError, HwAccDmaCh_SetPriority_Group, HwAccDmaCh_SetPriority_Level, HwAccDmaCh_SetPriority_EnPreemption, HwAccDmaCh_SetPriority_DisPreempt};
  void (*<T689>) (const uint32, const uint32, const uint32, const uint32) _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = fpHwAcc_DmaCh_SetGlobalParam[Parameter_3(D)];
  _1 (LocHwVers_4(D), LocHwInst_5(D), LocHwCh_6(D), LocValue_7(D));
  return;

}


HwAccDmaCh_SetPriority_DisPreempt (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetPriority_DisPreempt (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetPriority_EnPreemption (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetPriority_EnPreemption (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetPriority_Level (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetPriority_Level (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetPriority_Group (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  volatile uint32 * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = &MEM[(struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CH_GRPRI[LocHwCh_5(D)];
  hwv3AccInlineDmaCh_SetPriority_Group (_1, LocValue_6(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetInterrupt_EnError (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetInterrupt_EnError (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_EnRequest (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetRequest_EnHwRequest (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_EnMuxTrigger (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaCh => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxInst => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxCh => 0
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG D#30 => LocHwVers_3(D)
  HwAccDmaCh_SetRequest_EnMuxTrigger.part.0 (LocHwInst_5(D), LocHwCh_6(D), LocValue_7(D));

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_MuxSource (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaCh => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxInst => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxCh => 0
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG D#28 => LocHwVers_3(D)
  HwAccDmaCh_SetRequest_MuxSource.part.0 (LocHwInst_5(D), LocHwCh_6(D), LocValue_7(D));

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetRequest_EnMuxSource (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaCh => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxInst => 0
  # DEBUG BEGIN_STMT
  # DEBUG LocDmaMuxCh => 0
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG D#26 => LocHwVers_3(D)
  HwAccDmaCh_SetRequest_EnMuxSource.part.0 (LocHwInst_5(D), LocHwCh_6(D), LocValue_7(D));

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnBufferedWrites (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetControl_EnBufferedWrites (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_SetControl_EnMasterIdReplication (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, const uint32 LocValue)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  struct Dma_Ip_ChRegType * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_4(D) == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_6(D)][LocHwCh_7(D)];
  _2 = &_1->tChReg;
  hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication (_2, LocValue_8(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_GetStatus_Error (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const pLocError)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#51 => &_1->tChReg
  # DEBUG ptCh => D#51
  # DEBUG pValue => pLocError_7(D)
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetErrorStatus
  # DEBUG BEGIN_STMT
  _8 = MEM[(const struct Dma_Ip_ChRegType *)_1].reg_CH_ES;
  _9 = _8 & 2147483903;
  *pLocError_7(D) = _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG pValue => NULL
  return;

}


HwAccDmaCh_GetStatus (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, struct Dma_Ip_LogicChannelStatusType * const pChStatus)
{
  struct Dma_Ip_Hwv3ChTcdRegType * _1;
  long unsigned int _8;
  _Bool _9;
  long unsigned int _10;
  signed int _11;
  _Bool _12;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#47 => &_1->tChReg
  # DEBUG D#48 => &pChStatus_7(D)->Active
  # DEBUG ptCh => D#47
  # DEBUG pBool => D#48
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetActiveStatus
  # DEBUG BEGIN_STMT
  _10 = MEM[(const struct Dma_Ip_ChRegType *)_1].reg_CH_CSR;
  _11 = (signed int) _10;
  _12 = _11 < 0;
  MEM[(boolean *)pChStatus_7(D) + 8B] = _12;
  # DEBUG ptCh => NULL
  # DEBUG pBool => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#49 => &_1->tChReg
  # DEBUG D#50 => &pChStatus_7(D)->Done
  # DEBUG ptCh => D#49
  # DEBUG pBool => D#50
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_GetDoneStatus
  # DEBUG BEGIN_STMT
  _8 = _10 & 1073741824;
  _9 = _8 != 0;
  MEM[(boolean *)pChStatus_7(D) + 9B] = _9;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG pBool => NULL
  return;

}


HwAccDmaCh_SetCommand (const uint32 Command, const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  static void (*<T673>) (const uint32, const uint32, const uint32) fpHwAcc_DmaCh_Command[5] = {HwAccDmaCh_CmdSetHwRequest, HwAccDmaCh_CmdClearHwRequest, HwAccDmaCh_CmdSetSwRequest, HwAccDmaCh_CmdClearDone, HwAccDmaCh_CmdClearError};
  void (*<T66f>) (const uint32, const uint32, const uint32) _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = fpHwAcc_DmaCh_Command[Command_3(D)];
  _1 (LocHwVers_4(D), LocHwInst_5(D), LocHwCh_6(D));
  return;

}


HwAccDmaCh_CmdClearError (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint32 reg;
  struct Dma_Ip_Hwv3ChTcdRegType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#25 => &_1->tChReg
  # DEBUG ptCh => D#25
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdClearError
  # DEBUG BEGIN_STMT
  reg_7 = MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_ES;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  reg_8 = reg_7 | 2147483648;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_ES = reg_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_CmdClearDone (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint32 reg;
  struct Dma_Ip_Hwv3ChTcdRegType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#24 => &_1->tChReg
  # DEBUG ptCh => D#24
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdClearDone
  # DEBUG BEGIN_STMT
  reg_7 = MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  reg_8 = reg_7 | 1073741824;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR = reg_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_CmdSetSwRequest (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint16 reg;
  struct Dma_Ip_Hwv3ChTcdRegType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#23 => &_1->tTcdReg
  # DEBUG ptTcd => D#23
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdSwReqStart
  # DEBUG BEGIN_STMT
  reg_7 = MEM[(struct Dma_Ip_TcdRegType *)_1 + 32B].reg_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  reg_8 = reg_7 | 1;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_TcdRegType *)_1 + 32B].reg_CSR = reg_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptTcd => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_CmdClearHwRequest (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint32 reg;
  struct Dma_Ip_Hwv3ChTcdRegType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#22 => &_1->tChReg
  # DEBUG ptCh => D#22
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdClearRequest
  # DEBUG BEGIN_STMT
  reg_7 = MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  reg_8 = reg_7 & 4294967294;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR = reg_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaCh_CmdSetHwRequest (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint32 reg;
  struct Dma_Ip_Hwv3ChTcdRegType * _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (LocHwVers_3(D) == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = g_ptHwChTcdPtrArray[LocHwInst_5(D)][LocHwCh_6(D)];
  # DEBUG D#21 => &_1->tChReg
  # DEBUG ptCh => D#21
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaCh_CmdSetRequest
  # DEBUG BEGIN_STMT
  reg_7 = MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  reg_8 = reg_7 | 1;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  MEM[(struct Dma_Ip_ChRegType *)_1].reg_CH_CSR = reg_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptCh => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaInst_GetStatus (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst, struct Dma_Ip_LogicInstanceStatusType * const Status)
{
  unsigned char _1;
  long unsigned int _6;
  signed int _7;
  _Bool _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#46 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#46
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG D#43 => &Status_5(D)->Errors
  # DEBUG ptInst => 1075888128B
  # DEBUG pValue => D#43
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_GetErrorStatus
  # DEBUG BEGIN_STMT
  _13 ={v} MEM[(const struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_ES;
  _14 = _13 & 2667578367;
  MEM[(uint32 *)Status_5(D)] = _14;
  # DEBUG ptInst => NULL
  # DEBUG pValue => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#44 => &Status_5(D)->ActiveId
  # DEBUG ptInst => 1075888128B
  # DEBUG pValue => D#44
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_GetActiveIdStatus
  # DEBUG BEGIN_STMT
  _9 ={v} MEM[(const struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  _10 = _9 >> 24;
  _11 = (unsigned char) _10;
  _12 = _11 & 31;
  MEM[(uint8 *)Status_5(D) + 4B] = _12;
  # DEBUG ptInst => NULL
  # DEBUG pValue => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#45 => &Status_5(D)->Active
  # DEBUG ptInst => 1075888128B
  # DEBUG pBool => D#45
  # DEBUG INLINE_ENTRY hwv3AccInlineDmaInst_GetActiveStatus
  # DEBUG BEGIN_STMT
  _6 ={v} MEM[(const struct Dma_Ip_Hwv3InstRegType *)1075888128B].reg_CSR;
  _7 = (signed int) _6;
  _8 = _7 < 0;
  MEM[(boolean *)Status_5(D) + 5B] = _8;

  <bb 4> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG pBool => NULL
  return;

}


HwAccDmaInst_SetCommand (const uint32 Command, const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst)
{
  static void (*<T65c>) (const struct Dma_Ip_LogicInstanceIdType * const) fpHwAcc_DmaInst_Command[4] = {hwAccDmaInst_CmdCancelTransfer, hwAccDmaInst_CmdCancelTransferWithError, hwAccDmaInst_CmdHalt, hwAccDmaInst_CmdResume};
  void (*<T658>) (const struct Dma_Ip_LogicInstanceIdType * const) _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = fpHwAcc_DmaInst_Command[Command_3(D)];
  _1 (pxLocLogicInst_4(D));
  return;

}


hwAccDmaInst_CmdResume (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst)
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#18 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#18
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG D#19 => pxLocLogicInst_4(D)
  hwAccDmaInst_CmdResume.part.0 ();

  <bb 4> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdHalt (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst)
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#15 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#15
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG D#16 => pxLocLogicInst_4(D)
  hwAccDmaInst_CmdHalt.part.0 ();

  <bb 4> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdCancelTransferWithError (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst)
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#12 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#12
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG D#13 => pxLocLogicInst_4(D)
  hwAccDmaInst_CmdCancelTransferWithError.part.0 ();

  <bb 4> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


hwAccDmaInst_CmdCancelTransfer (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst)
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#9 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#9
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
<L0>:
  # DEBUG D#10 => pxLocLogicInst_4(D)
  hwAccDmaInst_CmdCancelTransfer.part.0 ();

  <bb 4> [local count: 1073741824]:
  # DEBUG ptInst => NULL
  # DEBUG reg => NULL
  return;

}


HwAccDmaInst_SetConfig (const struct Dma_Ip_LogicInstanceIdType * const pxLocLogicInst, const struct Dma_Ip_LogicInstanceConfigType * const pxLocInstConfig)
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = pxLocLogicInst_4(D)->HwVersId;
  # DEBUG LocHwVers => (uint32) _1
  # DEBUG BEGIN_STMT
  # DEBUG D#42 => pxLocLogicInst_4(D)->HwInstId
  # DEBUG LocHwInst => (uint32) D#42
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325344]:
<L0>:
  # DEBUG BEGIN_STMT
  hwv3AccInlineDmaInst_SetConfig (1075888128B, pxLocInstConfig_5(D));
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  return;

}


HwAccDmaCh_GetParamDummyFunction (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh, uint32 * const retValue)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


hwv3AccInlineDmaCh_SetAuxiliary_EnScatterGatherProcessing (struct Dma_Ip_TcdRegType * ptTcd, boolean Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  uint16 iftmp.12_3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 = ptTcd_5(D)->reg_CSR;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 65519;
  if (Value_7(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.12_3 = PHI <16(2), 0(3)>
  _2 = _1 | iftmp.12_3;
  ptTcd_5(D)->reg_CSR = _2;
  return;

}


hwv3AccInlineDmaCh_SetControl_BandwidthControl (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptTcd_6(D)->reg_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 16383;
  _2 = (short unsigned int) Value_8(D);
  _3 = _2 << 14;
  _4 = _1 | _3;
  ptTcd_6(D)->reg_CSR = _4;
  return;

}


hwv3AccInlineDmaCh_SetControl_EnEndOfPacketSignal (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65471;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 6;
  _4 = _3 & 64;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetControl_DisAutoHwRequest (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65527;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 3;
  _4 = _3 & 8;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetControl_EnHalfMajor (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65531;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 2;
  _4 = _3 & 4;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetControl_EnMajor (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65533;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 1;
  _4 = _3 & 2;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetMajorLoop_Count (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  signed short _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ptTcd_18(D)->reg_BITER.reg_ELINKYES;
  _2 = ptTcd_18(D)->reg_CITER.reg_ELINKYES;
  _3 = _1 | _2;
  # DEBUG reg => _3 & 32768
  # DEBUG BEGIN_STMT
  _24 = (signed short) _3;
  if (_24 < 0)
    goto <bb 3>; [41.00%]
  else
    goto <bb 4>; [59.00%]

  <bb 3> [local count: 440234144]:
  # DEBUG BEGIN_STMT
  # DEBUG reg => _1
  # DEBUG BEGIN_STMT
  _4 = _1 & 65024;
  _5 = (short unsigned int) Value_19(D);
  _6 = _5 & 511;
  _7 = _4 | _6;
  ptTcd_18(D)->reg_BITER.reg_ELINKYES = _7;
  # DEBUG BEGIN_STMT
  # DEBUG reg => _2
  # DEBUG BEGIN_STMT
  _8 = _2 & 65024;
  _9 = _6 | _8;
  ptTcd_18(D)->reg_CITER.reg_ELINKYES = _9;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 633507681]:
  # DEBUG BEGIN_STMT
  # DEBUG reg => _1
  # DEBUG BEGIN_STMT
  _10 = _1 & 32768;
  _11 = (short unsigned int) Value_19(D);
  _12 = _11 & 32767;
  _13 = _10 | _12;
  ptTcd_18(D)->reg_BITER.reg_ELINKNO = _13;
  # DEBUG BEGIN_STMT
  # DEBUG reg => _2
  # DEBUG BEGIN_STMT
  _14 = _2 & 32768;
  _15 = _12 | _14;
  ptTcd_18(D)->reg_CITER.reg_ELINKNO = _15;

  <bb 5> [local count: 1073741824]:
  return;

}


hwv3AccInlineDmaCh_SetMajorLoop_LinkCh (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 57599;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 8;
  _4 = _3 & 7936;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetMajorLoop_EnLink (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_CSR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65503;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 5;
  _4 = _3 & 32;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_CSR = _5;
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_Size (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_10 = ptTcd_9(D)->reg_NBYTES.reg_MLOFFNO;
  # DEBUG reg => reg_10
  # DEBUG BEGIN_STMT
  _1 = reg_10 & 3221225472;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = reg_10 & 4294966272;
  _3 = Value_11(D) & 1023;
  _4 = _2 | _3;
  ptTcd_9(D)->reg_NBYTES.reg_MLOFFNO = _4;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = Value_11(D) & 1073741823;
  _6 = _5;
  ptTcd_9(D)->reg_NBYTES.reg_MLOFFNO = _6;

  <bb 5> [local count: 1073741824]:
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_LinkCh (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_10 = ptTcd_9(D)->reg_BITER.reg_ELINKYES;
  # DEBUG reg => reg_10
  # DEBUG BEGIN_STMT
  _1 = reg_10 & 49663;
  _2 = (short unsigned int) Value_11(D);
  _3 = _2 << 9;
  _4 = _3 & 15872;
  _5 = _1 | _4;
  ptTcd_9(D)->reg_BITER.reg_ELINKYES = _5;
  # DEBUG BEGIN_STMT
  reg_13 = ptTcd_9(D)->reg_CITER.reg_ELINKYES;
  # DEBUG reg => reg_13
  # DEBUG BEGIN_STMT
  _6 = reg_13 & 49663;
  _7 = _4 | _6;
  ptTcd_9(D)->reg_CITER.reg_ELINKYES = _7;
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_EnLink (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_9 = ptTcd_8(D)->reg_BITER.reg_ELINKYES;
  # DEBUG reg => reg_9
  # DEBUG BEGIN_STMT
  _1 = reg_9 & 32767;
  _2 = (short unsigned int) Value_10(D);
  _3 = _2 << 15;
  _4 = _1 | _3;
  ptTcd_8(D)->reg_BITER.reg_ELINKYES = _4;
  # DEBUG BEGIN_STMT
  reg_12 = ptTcd_8(D)->reg_CITER.reg_ELINKYES;
  # DEBUG reg => reg_12
  # DEBUG BEGIN_STMT
  _5 = reg_12 & 32767;
  _6 = _3 | _5;
  ptTcd_8(D)->reg_CITER.reg_ELINKYES = _6;
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_SignedOffset (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptTcd_6(D)->reg_NBYTES.reg_MLOFFYES;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 3221226495;
  _2 = Value_8(D) << 10;
  _3 = _2 & 1073740800;
  _4 = _1 | _3;
  ptTcd_6(D)->reg_NBYTES.reg_MLOFFYES = _4;
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_enDstOffset (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptTcd_6(D)->reg_NBYTES.reg_MLOFFYES;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 3221225471;
  _2 = Value_8(D) << 30;
  _3 = _2 & 1073741824;
  _4 = _1 | _3;
  ptTcd_6(D)->reg_NBYTES.reg_MLOFFYES = _4;
  return;

}


hwv3AccInlineDmaCh_SetMinorLoop_enSrcOffset (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 = ptTcd_5(D)->reg_NBYTES.reg_MLOFFYES;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 2147483647;
  _2 = Value_7(D) << 31;
  _3 = _1 | _2;
  ptTcd_5(D)->reg_NBYTES.reg_MLOFFYES = _3;
  return;

}


hwv3AccInlineDmaCh_SetDestination_Modulo (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 = ptTcd_7(D)->reg_ATTR;
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 65287;
  _2 = (short unsigned int) Value_9(D);
  _3 = _2 << 3;
  _4 = _3 & 255;
  _5 = _1 | _4;
  ptTcd_7(D)->reg_ATTR = _5;
  return;

}


hwv3AccInlineDmaCh_SetDestination_TransferSize (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  uint16 reg;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptTcd_6(D)->reg_ATTR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 65528;
  _2 = (short unsigned int) Value_8(D);
  _3 = _2 & 7;
  _4 = _1 | _3;
  ptTcd_6(D)->reg_ATTR = _4;
  return;

}


hwv3AccInlineDmaCh_SetSource_Modulo (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ptTcd_7(D)->reg_ATTR;
  # DEBUG reg => (uint32) _1
  # DEBUG BEGIN_STMT
  _2 = _1 & 2047;
  _3 = (short unsigned int) Value_8(D);
  _4 = _3 << 11;
  _5 = _2 | _4;
  ptTcd_7(D)->reg_ATTR = _5;
  return;

}


hwv3AccInlineDmaCh_SetSource_TransferSize (struct Dma_Ip_TcdRegType * ptTcd, const uint32 Value)
{
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ptTcd_8(D)->reg_ATTR;
  # DEBUG reg => (uint32) _1
  # DEBUG BEGIN_STMT
  _2 = _1 & 63743;
  _3 = (short unsigned int) Value_9(D);
  _4 = _3 << 8;
  _5 = _4 & 1792;
  _6 = _2 | _5;
  ptTcd_8(D)->reg_ATTR = _6;
  return;

}


hwv3AccInlineDmaCh_SetPriority_DisPreempt (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptCh_6(D)->reg_CH_PRI;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 3221225471;
  _2 = Value_8(D) << 30;
  _3 = _2 & 1073741824;
  _4 = _1 | _3;
  ptCh_6(D)->reg_CH_PRI = _4;
  return;

}


hwv3AccInlineDmaCh_SetPriority_EnPreemption (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 = ptCh_5(D)->reg_CH_PRI;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 2147483647;
  _2 = Value_7(D) << 31;
  _3 = _1 | _2;
  ptCh_5(D)->reg_CH_PRI = _3;
  return;

}


hwv3AccInlineDmaCh_SetPriority_Level (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 = ptCh_5(D)->reg_CH_PRI;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 4294967288;
  _2 = Value_7(D) & 7;
  _3 = _1 | _2;
  ptCh_5(D)->reg_CH_PRI = _3;
  return;

}


hwv3AccInlineDmaCh_SetPriority_Group (volatile uint32 * const pGrpri, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 ={v} *pGrpri_5(D);
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 4294967264;
  _2 = Value_7(D) & 31;
  _3 = _1 | _2;
  *pGrpri_5(D) ={v} _3;
  return;

}


hwv3AccInlineDmaCh_SetInterrupt_EnError (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptCh_6(D)->reg_CH_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 4294967291;
  _2 = Value_8(D) << 2;
  _3 = _2 & 4;
  _4 = _1 | _3;
  ptCh_6(D)->reg_CH_CSR = _4;
  return;

}


hwv3AccInlineDmaCh_SetRequest_EnHwRequest (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_6 = ptCh_5(D)->reg_CH_CSR;
  # DEBUG reg => reg_6
  # DEBUG BEGIN_STMT
  _1 = reg_6 & 4294967294;
  _2 = Value_7(D) & 1;
  _3 = _1 | _2;
  ptCh_5(D)->reg_CH_CSR = _3;
  return;

}


hwv3AccInlineDmaCh_SetRequest_EnHwRequestMux (volatile Dma_Ip_MuxRegType * pMuxChCfg, const uint32 Value)
{
  Dma_Ip_MuxRegType reg;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 ={v} *pMuxChCfg_6(D);
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 127;
  _2 = (unsigned char) Value_8(D);
  _3 = _2 << 7;
  _4 = _1 | _3;
  *pMuxChCfg_6(D) ={v} _4;
  return;

}


hwv3AccInlineDmaCh_SetRequest_EnTriggerMux (volatile Dma_Ip_MuxRegType * pMuxChCfg, uint32 Value)
{
  Dma_Ip_MuxRegType reg;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_8 ={v} *pMuxChCfg_7(D);
  # DEBUG reg => reg_8
  # DEBUG BEGIN_STMT
  _1 = reg_8 & 191;
  _2 = (unsigned char) Value_9(D);
  _3 = _2 << 6;
  _4 = _3 & 64;
  _5 = _1 | _4;
  *pMuxChCfg_7(D) ={v} _5;
  return;

}


hwv3AccInlineDmaCh_SetRequest_SourceMux (volatile Dma_Ip_MuxRegType * pMuxChCfg, const uint32 Value)
{
  Dma_Ip_MuxRegType reg;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 ={v} *pMuxChCfg_6(D);
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 192;
  _2 = (unsigned char) Value_8(D);
  _3 = _2 & 63;
  _4 = _1 | _3;
  *pMuxChCfg_6(D) ={v} _4;
  return;

}


hwv3AccInlineDmaCh_SetControl_EnBufferedWrites (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptCh_6(D)->reg_CH_CSR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 4294967287;
  _2 = Value_8(D) << 3;
  _3 = _2 & 8;
  _4 = _1 | _3;
  ptCh_6(D)->reg_CH_CSR = _4;
  return;

}


hwv3AccInlineDmaCh_SetControl_EnMasterIdReplication (struct Dma_Ip_ChRegType * ptCh, uint32 Value)
{
  uint32 reg;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  reg_7 = ptCh_6(D)->reg_CH_SBR;
  # DEBUG reg => reg_7
  # DEBUG BEGIN_STMT
  _1 = reg_7 & 4294901759;
  _2 = Value_8(D) << 16;
  _3 = _2 & 65536;
  _4 = _1 | _3;
  ptCh_6(D)->reg_CH_SBR = _4;
  return;

}


