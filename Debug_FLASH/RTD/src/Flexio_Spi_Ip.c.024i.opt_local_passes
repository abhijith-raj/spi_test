Flexio_Spi_Ip_GetStatus (uint8 Instance)
{
  Flexio_Spi_Ip_HwStatusType Status;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  _Bool _2;
  Flexio_Spi_Ip_HwStatusType _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_4(D);
  State_6 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_6
  # DEBUG BEGIN_STMT
  Status_7 = 0;
  # DEBUG Status => Status_7
  # DEBUG BEGIN_STMT
  _2 = Instance_4(D) <= 3;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  if (State_6 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_9 = State_6->Status;
  # DEBUG Status => Status_9

  <bb 4> :
  # Status_3 = PHI <Status_7(2), Status_9(3)>
  # DEBUG Status => Status_3
  # DEBUG BEGIN_STMT
  _10 = Status_3;
  return _10;

}


Flexio_Spi_Ip_IrqHandler (uint8 ShifterIndex, uint8 ShifterMaskFlag, uint8 ShifterErrMaskFlag)
{
  uint8 ShifterErrEnabledIrqFlag;
  uint8 ShifterEnabledIsrFlag;
  uint8 ShifterErrEnabledIrq;
  uint8 ShifterEnabledIrq;
  uint8 Instance;
  uint8 Count;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  struct FLEXIO_Type * Base;
  int _1;
  struct Flexio_Spi_Ip_StateStructureType * _2;
  const struct Flexio_Spi_Ip_ConfigType * _3;
  int _4;
  struct Flexio_Spi_Ip_StateStructureType * _5;
  const struct Flexio_Spi_Ip_ConfigType * _6;
  int _7;
  unsigned char Count.1_8;
  long unsigned int _9;
  int _10;
  unsigned int _11;
  unsigned char _12;
  unsigned char _13;
  long unsigned int _14;
  int _15;
  unsigned int _16;
  unsigned char _17;
  unsigned char _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Base_27 = 1077035008B;
  # DEBUG Base => Base_27
  # DEBUG BEGIN_STMT
  State_28 = 0B;
  # DEBUG State => State_28
  # DEBUG BEGIN_STMT
  TxShifterIndex_29 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_29
  # DEBUG BEGIN_STMT
  RxShifterIndex_30 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_30
  # DEBUG BEGIN_STMT
  Count_31 = 0;
  # DEBUG Count => Count_31
  # DEBUG BEGIN_STMT
  Instance_32 = 0;
  # DEBUG Instance => Instance_32
  # DEBUG BEGIN_STMT
  ShifterEnabledIrq_33 = 0;
  # DEBUG ShifterEnabledIrq => ShifterEnabledIrq_33
  # DEBUG BEGIN_STMT
  ShifterErrEnabledIrq_34 = 0;
  # DEBUG ShifterErrEnabledIrq => ShifterErrEnabledIrq_34
  # DEBUG BEGIN_STMT
  ShifterEnabledIsrFlag_35 = 0;
  # DEBUG ShifterEnabledIsrFlag => ShifterEnabledIsrFlag_35
  # DEBUG BEGIN_STMT
  ShifterErrEnabledIrqFlag_36 = 0;
  # DEBUG ShifterErrEnabledIrqFlag => ShifterErrEnabledIrqFlag_36
  # DEBUG BEGIN_STMT
  Count_37 = 0;
  # DEBUG Count => Count_37
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) Count_24;
  _2 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  _3 = _2->PhyUnitConfig;
  TxShifterIndex_39 = _3->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_39
  # DEBUG BEGIN_STMT
  _4 = (int) Count_24;
  _5 = Flexio_Spi_Ip_apxStateStructureArray[_4];
  _6 = _5->PhyUnitConfig;
  RxShifterIndex_40 = _6->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_40
  # DEBUG BEGIN_STMT
  if (ShifterIndex_41(D) == TxShifterIndex_39)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (ShifterIndex_41(D) == RxShifterIndex_40)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Instance_43 = Count_24;
  # DEBUG Instance => Instance_43
  # DEBUG BEGIN_STMT
  _7 = (int) Instance_43;
  State_44 = Flexio_Spi_Ip_apxStateStructureArray[_7];
  # DEBUG State => State_44
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Count.1_8 = Count_24;
  Count_42 = Count.1_8 + 1;
  # DEBUG Count => Count_42

  <bb 7> :
  # TxShifterIndex_20 = PHI <TxShifterIndex_29(2), TxShifterIndex_39(6)>
  # RxShifterIndex_22 = PHI <RxShifterIndex_30(2), RxShifterIndex_40(6)>
  # Count_24 = PHI <Count_37(2), Count_42(6)>
  # DEBUG Count => Count_24
  # DEBUG RxShifterIndex => RxShifterIndex_22
  # DEBUG TxShifterIndex => TxShifterIndex_20
  # DEBUG BEGIN_STMT
  if (Count_24 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # State_19 = PHI <State_44(5), State_28(7)>
  # TxShifterIndex_21 = PHI <TxShifterIndex_39(5), TxShifterIndex_20(7)>
  # RxShifterIndex_23 = PHI <RxShifterIndex_40(5), RxShifterIndex_22(7)>
  # Instance_25 = PHI <Instance_43(5), Instance_32(7)>
  # DEBUG Instance => Instance_25
  # DEBUG RxShifterIndex => RxShifterIndex_23
  # DEBUG TxShifterIndex => TxShifterIndex_21
  # DEBUG State => State_19
  # DEBUG BEGIN_STMT
  if (State_19 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = Flexio_Mcl_Ip_GetAllShifterInterrupt (Base_27);
  ShifterEnabledIrq_48 = (uint8) _9;
  # DEBUG ShifterEnabledIrq => ShifterEnabledIrq_48
  # DEBUG BEGIN_STMT
  _10 = (int) ShifterIndex_41(D);
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  _13 = ShifterEnabledIrq_48 & _12;
  ShifterEnabledIsrFlag_50 = ShifterMaskFlag_49(D) & _13;
  # DEBUG ShifterEnabledIsrFlag => ShifterEnabledIsrFlag_50
  # DEBUG BEGIN_STMT
  _14 = Flexio_Mcl_Ip_GetAllShifterErrorInterrupt (Base_27);
  ShifterErrEnabledIrq_52 = (uint8) _14;
  # DEBUG ShifterErrEnabledIrq => ShifterErrEnabledIrq_52
  # DEBUG BEGIN_STMT
  _15 = (int) ShifterIndex_41(D);
  _16 = 1 << _15;
  _17 = (unsigned char) _16;
  _18 = ShifterErrEnabledIrq_52 & _17;
  ShifterErrEnabledIrqFlag_54 = ShifterErrMaskFlag_53(D) & _18;
  # DEBUG ShifterErrEnabledIrqFlag => ShifterErrEnabledIrqFlag_54
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_TransferProcess (Instance_25, ShifterIndex_41(D), ShifterEnabledIsrFlag_50, ShifterErrEnabledIrqFlag_54);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterStatus (Base_27, TxShifterIndex_21);
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterStatus (Base_27, RxShifterIndex_23);

  <bb 11> :
  return;

}


Flexio_Spi_Ip_Cancel (uint8 Instance)
{
  uint8 ClkTimerIndex;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  struct Flexio_Spi_Ip_StateStructureType * State;
  struct FLEXIO_Type * Base;
  int _1;
  _Bool _2;
  _Bool _3;
  <unnamed type> _4;
  const struct Flexio_Spi_Ip_ConfigType * _5;
  const struct Flexio_Spi_Ip_ConfigType * _6;
  const struct Flexio_Spi_Ip_ConfigType * _7;
  int _8;
  unsigned int _9;
  unsigned char _10;
  int _11;
  unsigned int _12;
  unsigned char _13;
  unsigned char _14;
  int _15;
  unsigned int _16;
  unsigned char _17;
  int _18;
  unsigned int _19;
  unsigned char _20;
  unsigned char _21;
  int _22;
  unsigned int _23;
  unsigned char _24;
  int _25;
  unsigned int _26;
  unsigned char _27;
  unsigned char _28;
  int _29;
  int _30;
  int _31;
  int _32;
  int _33;
  int _34;
  int _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Base_37 = 1077035008B;
  # DEBUG Base => Base_37
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_38(D);
  State_40 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_40
  # DEBUG BEGIN_STMT
  TxShifterIndex_41 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_41
  # DEBUG BEGIN_STMT
  RxShifterIndex_42 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_42
  # DEBUG BEGIN_STMT
  ClkTimerIndex_43 = 0;
  # DEBUG ClkTimerIndex => ClkTimerIndex_43
  # DEBUG BEGIN_STMT
  _2 = Instance_38(D) <= 3;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = State_40 != 0B;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_16 ();
  # DEBUG BEGIN_STMT
  _4 = State_40->Status;
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = State_40->PhyUnitConfig;
  TxShifterIndex_47 = _5->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_47
  # DEBUG BEGIN_STMT
  _6 = State_40->PhyUnitConfig;
  RxShifterIndex_48 = _6->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_48
  # DEBUG BEGIN_STMT
  _7 = State_40->PhyUnitConfig;
  ClkTimerIndex_49 = _7->ClkTimerIndex;
  # DEBUG ClkTimerIndex => ClkTimerIndex_49
  # DEBUG BEGIN_STMT
  _8 = (int) TxShifterIndex_47;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = (int) RxShifterIndex_48;
  _12 = 1 << _11;
  _13 = (unsigned char) _12;
  _14 = _10 | _13;
  Flexio_Mcl_Ip_SetShifterInterrupt (Base_37, _14, 0);
  # DEBUG BEGIN_STMT
  _15 = (int) TxShifterIndex_47;
  _16 = 1 << _15;
  _17 = (unsigned char) _16;
  _18 = (int) RxShifterIndex_48;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = _17 | _20;
  Flexio_Mcl_Ip_SetShifterDMARequest (Base_37, _21, 0);
  # DEBUG BEGIN_STMT
  _22 = (int) TxShifterIndex_47;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = (int) RxShifterIndex_48;
  _26 = 1 << _25;
  _27 = (unsigned char) _26;
  _28 = _24 | _27;
  Flexio_Mcl_Ip_SetShifterErrorInterrupt (Base_37, _28, 0);
  # DEBUG BEGIN_STMT
  _29 = (int) ClkTimerIndex_49;
  Base_37->TIMCMP[_29] ={v} 0;
  # DEBUG BEGIN_STMT
  _30 = (int) ClkTimerIndex_49;
  Base_37->TIMCFG[_30] ={v} 0;
  # DEBUG BEGIN_STMT
  _31 = (int) ClkTimerIndex_49;
  Base_37->TIMCTL[_31] ={v} 0;
  # DEBUG BEGIN_STMT
  _32 = (int) TxShifterIndex_47;
  Base_37->SHIFTBUF[_32] ={v} 0;
  # DEBUG BEGIN_STMT
  _33 = (int) RxShifterIndex_48;
  Base_37->SHIFTBUF[_33] ={v} 0;
  # DEBUG BEGIN_STMT
  _34 = (int) TxShifterIndex_47;
  Base_37->SHIFTBUFBIS[_34] ={v} 0;
  # DEBUG BEGIN_STMT
  _35 = (int) RxShifterIndex_48;
  Base_37->SHIFTBUFBIS[_35] ={v} 0;
  # DEBUG BEGIN_STMT
  State_40->Status = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_16 ();
  return;

}


Flexio_Spi_Ip_UpdateTransferMode (uint8 Instance, Flexio_Spi_Ip_ModeType Mode)
{
  Flexio_Spi_Ip_StatusType Status;
  struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  _Bool _2;
  _Bool _3;
  <unnamed type> _4;
  Flexio_Spi_Ip_StatusType _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_7(D);
  State_9 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_9
  # DEBUG BEGIN_STMT
  Status_10 = 0;
  # DEBUG Status => Status_10
  # DEBUG BEGIN_STMT
  _2 = Instance_7(D) <= 3;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = State_9 != 0B;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = State_9->Status;
  if (_4 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  State_9->TransferMode = Mode_14(D);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Status_13 = 1;
  # DEBUG Status => Status_13

  <bb 5> :
  # Status_5 = PHI <Status_10(3), Status_13(4)>
  # DEBUG Status => Status_5
  # DEBUG BEGIN_STMT
  _16 = Status_5;
  return _16;

}


Flexio_Spi_Ip_UpdateDefaultTransmitData (const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice, uint32 DefaultData)
{
  Flexio_Spi_Ip_StatusType Status;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  unsigned char _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  struct Flexio_Spi_Ip_DeviceParamsType * _6;
  Flexio_Spi_Ip_StatusType _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_9 = 0;
  # DEBUG Status => Status_9
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_10(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = ExternalDevice_10(D)->Instance;
  _3 = (int) _2;
  State_13 = Flexio_Spi_Ip_apxStateStructureArray[_3];
  # DEBUG State => State_13
  # DEBUG BEGIN_STMT
  _4 = State_13 != 0B;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = State_13->Status;
  if (_5 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _6 = ExternalDevice_10(D)->DeviceParams;
  _6->DefaultData = DefaultData_16(D);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Status_15 = 1;
  # DEBUG Status => Status_15

  <bb 5> :
  # Status_7 = PHI <Status_9(3), Status_15(4)>
  # DEBUG Status => Status_7
  # DEBUG BEGIN_STMT
  _18 = Status_7;
  return _18;

}


Flexio_Spi_Ip_UpdateLsb (const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice, boolean Lsb)
{
  Flexio_Spi_Ip_StatusType Status;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  unsigned char _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  struct Flexio_Spi_Ip_DeviceParamsType * _6;
  Flexio_Spi_Ip_StatusType _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_9 = 0;
  # DEBUG Status => Status_9
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_10(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = ExternalDevice_10(D)->Instance;
  _3 = (int) _2;
  State_13 = Flexio_Spi_Ip_apxStateStructureArray[_3];
  # DEBUG State => State_13
  # DEBUG BEGIN_STMT
  _4 = State_13 != 0B;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = State_13->Status;
  if (_5 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _6 = ExternalDevice_10(D)->DeviceParams;
  _6->Lsb = Lsb_16(D);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Status_15 = 1;
  # DEBUG Status => Status_15

  <bb 5> :
  # Status_7 = PHI <Status_9(3), Status_15(4)>
  # DEBUG Status => Status_7
  # DEBUG BEGIN_STMT
  _18 = Status_7;
  return _18;

}


Flexio_Spi_Ip_UpdateFrameSize (const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice, uint8 FrameSize)
{
  Flexio_Spi_Ip_StatusType Status;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  _Bool _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  _Bool _6;
  <unnamed type> _7;
  struct Flexio_Spi_Ip_DeviceParamsType * _8;
  Flexio_Spi_Ip_StatusType _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_11 = 0;
  # DEBUG Status => Status_11
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_12(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = FrameSize_15(D) <= 32;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = FrameSize_15(D) > 3;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = ExternalDevice_12(D)->Instance;
  _5 = (int) _4;
  State_18 = Flexio_Spi_Ip_apxStateStructureArray[_5];
  # DEBUG State => State_18
  # DEBUG BEGIN_STMT
  _6 = State_18 != 0B;
  DevAssert (_6);
  # DEBUG BEGIN_STMT
  _7 = State_18->Status;
  if (_7 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _8 = ExternalDevice_12(D)->DeviceParams;
  _8->FrameSize = FrameSize_15(D);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Status_20 = 1;
  # DEBUG Status => Status_20

  <bb 5> :
  # Status_9 = PHI <Status_11(3), Status_20(4)>
  # DEBUG Status => Status_9
  # DEBUG BEGIN_STMT
  _22 = Status_9;
  return _22;

}


Flexio_Spi_Ip_ManageBuffers (uint8 Instance)
{
  uint8 TxRxMask;
  uint8 ShifterErrMaskFlag;
  uint8 ShifterMaskFlag;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  struct FLEXIO_Type * Base;
  int _1;
  _Bool _2;
  _Bool _3;
  <unnamed type> _4;
  const struct Flexio_Spi_Ip_ConfigType * _5;
  const struct Flexio_Spi_Ip_ConfigType * _6;
  int _7;
  unsigned int _8;
  unsigned char _9;
  int _10;
  unsigned int _11;
  unsigned char _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  unsigned char _16;
  unsigned int _17;
  int _18;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  int _30;
  unsigned int _31;
  unsigned int _32;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Base_35 = 1077035008B;
  # DEBUG Base => Base_35
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_36(D);
  State_38 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_38
  # DEBUG BEGIN_STMT
  TxShifterIndex_39 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_39
  # DEBUG BEGIN_STMT
  RxShifterIndex_40 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_40
  # DEBUG BEGIN_STMT
  ShifterMaskFlag_41 = 0;
  # DEBUG ShifterMaskFlag => ShifterMaskFlag_41
  # DEBUG BEGIN_STMT
  ShifterErrMaskFlag_42 = 0;
  # DEBUG ShifterErrMaskFlag => ShifterErrMaskFlag_42
  # DEBUG BEGIN_STMT
  TxRxMask_43 = 0;
  # DEBUG TxRxMask => TxRxMask_43
  # DEBUG BEGIN_STMT
  _2 = Instance_36(D) <= 3;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = State_38 != 0B;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = State_38->TransferMode;
  if (_4 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = State_38->PhyUnitConfig;
  TxShifterIndex_46 = _5->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_46
  # DEBUG BEGIN_STMT
  _6 = State_38->PhyUnitConfig;
  RxShifterIndex_47 = _6->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_47
  # DEBUG BEGIN_STMT
  _7 = (int) TxShifterIndex_46;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = (int) RxShifterIndex_47;
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  TxRxMask_48 = _9 | _12;
  # DEBUG TxRxMask => TxRxMask_48
  # DEBUG BEGIN_STMT
  _13 = Flexio_Mcl_Ip_GetAllShifterStatus (Base_35);
  _14 = (unsigned char) _13;
  ShifterMaskFlag_50 = TxRxMask_48 & _14;
  # DEBUG ShifterMaskFlag => ShifterMaskFlag_50
  # DEBUG BEGIN_STMT
  _15 = Flexio_Mcl_Ip_GetAllShifterErrorStatus (Base_35);
  _16 = (unsigned char) _15;
  ShifterErrMaskFlag_52 = TxRxMask_48 & _16;
  # DEBUG ShifterErrMaskFlag => ShifterErrMaskFlag_52
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_35, TxShifterIndex_46);
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_35, RxShifterIndex_47);
  # DEBUG BEGIN_STMT
  _17 = (unsigned int) ShifterMaskFlag_50;
  _18 = (int) TxShifterIndex_46;
  _19 = _17 >> _18;
  _20 = _19 & 1;
  if (_20 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _21 = (unsigned int) ShifterErrMaskFlag_52;
  _22 = (int) TxShifterIndex_46;
  _23 = _21 >> _22;
  _24 = _23 & 1;
  if (_24 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_TransferProcess (Instance_36(D), TxShifterIndex_46, ShifterMaskFlag_50, ShifterErrMaskFlag_52);

  <bb 6> :
  # DEBUG BEGIN_STMT
  _25 = (unsigned int) ShifterMaskFlag_50;
  _26 = (int) RxShifterIndex_47;
  _27 = _25 >> _26;
  _28 = _27 & 1;
  if (_28 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _29 = (unsigned int) ShifterErrMaskFlag_52;
  _30 = (int) RxShifterIndex_47;
  _31 = _29 >> _30;
  _32 = _31 & 1;
  if (_32 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_TransferProcess (Instance_36(D), RxShifterIndex_47, ShifterMaskFlag_50, ShifterErrMaskFlag_52);

  <bb 9> :
  return;

}


Flexio_Spi_Ip_AsyncTransmit (const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice, uint8 * TxBuffer, uint8 * RxBuffer, uint16 Length, void (*Flexio_Spi_Ip_CallbackType) (uint8, Flexio_Spi_Ip_EventType) EndCallback)
{
  uint8 InstanceFlexio;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  Flexio_Spi_Ip_StatusType Status;
  struct FLEXIO_Type * Base;
  struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  _Bool _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  const struct Flexio_Spi_Ip_ConfigType * _6;
  const struct Flexio_Spi_Ip_ConfigType * _7;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _8;
  struct Flexio_Spi_Ip_DeviceParamsType * _9;
  unsigned char _10;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _11;
  struct Flexio_Spi_Ip_DeviceParamsType * _12;
  unsigned char _13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  <unnamed type> _17;
  int _18;
  unsigned int _19;
  unsigned char _20;
  int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  int _25;
  unsigned int _26;
  unsigned char _27;
  int _28;
  unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  Flexio_Spi_Ip_StatusType _71;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_35 = 1077035008B;
  # DEBUG Base => Base_35
  # DEBUG BEGIN_STMT
  Status_36 = 0;
  # DEBUG Status => Status_36
  # DEBUG BEGIN_STMT
  TxShifterIndex_37 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_37
  # DEBUG BEGIN_STMT
  RxShifterIndex_38 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_38
  # DEBUG BEGIN_STMT
  InstanceFlexio_39 = 0;
  # DEBUG InstanceFlexio => InstanceFlexio_39
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_40(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = Length_43(D) != 0;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  InstanceFlexio_45 = ExternalDevice_40(D)->Instance;
  # DEBUG InstanceFlexio => InstanceFlexio_45
  # DEBUG BEGIN_STMT
  _3 = (int) InstanceFlexio_45;
  State_46 = Flexio_Spi_Ip_apxStateStructureArray[_3];
  # DEBUG State => State_46
  # DEBUG BEGIN_STMT
  _4 = State_46 != 0B;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_18 ();
  # DEBUG BEGIN_STMT
  _5 = State_46->Status;
  if (_5 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_18 ();
  # DEBUG BEGIN_STMT
  Status_70 = 1;
  # DEBUG Status => Status_70
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  State_46->Status = 2;
  # DEBUG BEGIN_STMT
  State_46->ExternalDevice = ExternalDevice_40(D);
  # DEBUG BEGIN_STMT
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_18 ();
  # DEBUG BEGIN_STMT
  _6 = State_46->PhyUnitConfig;
  TxShifterIndex_52 = _6->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_52
  # DEBUG BEGIN_STMT
  _7 = State_46->PhyUnitConfig;
  RxShifterIndex_53 = _7->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_53
  # DEBUG BEGIN_STMT
  _8 = State_46->ExternalDevice;
  _9 = _8->DeviceParams;
  _10 = _9->FrameSize;
  if (_10 <= 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  State_46->ExpectedFifoWrites = Length_43(D);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _11 = State_46->ExternalDevice;
  _12 = _11->DeviceParams;
  _13 = _12->FrameSize;
  if (_13 <= 16)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _14 = Length_43(D) / 2;
  State_46->ExpectedFifoWrites = _14;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _15 = Length_43(D) / 4;
  State_46->ExpectedFifoWrites = _15;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _16 = State_46->ExpectedFifoWrites;
  State_46->ExpectedFifoReads = _16;
  # DEBUG BEGIN_STMT
  State_46->TxIndex = 0;
  # DEBUG BEGIN_STMT
  State_46->TxBuffer = TxBuffer_59(D);
  # DEBUG BEGIN_STMT
  State_46->RxIndex = 0;
  # DEBUG BEGIN_STMT
  State_46->RxBuffer = RxBuffer_62(D);
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_ConfigExternalDevice (State_46);
  # DEBUG BEGIN_STMT
  State_46->Callback = EndCallback_65(D);
  # DEBUG BEGIN_STMT
  _17 = State_46->TransferMode;
  switch (_17) <default: <L14> [INV], case 1: <L9> [INV]>

  <bb 10> :
<L9>:
  # DEBUG BEGIN_STMT
  _18 = (int) TxShifterIndex_52;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = (int) RxShifterIndex_53;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _20 | _23;
  Flexio_Mcl_Ip_SetShifterErrorInterrupt (Base_35, _24, 1);
  # DEBUG BEGIN_STMT
  _25 = (int) TxShifterIndex_52;
  _26 = 1 << _25;
  _27 = (unsigned char) _26;
  _28 = (int) RxShifterIndex_53;
  _29 = 1 << _28;
  _30 = (unsigned char) _29;
  _31 = _27 | _30;
  Flexio_Mcl_Ip_SetShifterInterrupt (Base_35, _31, 1);
  # DEBUG BEGIN_STMT

  <bb 11> :
  # Status_32 = PHI <Status_70(3), Status_36(9), Status_36(10)>
<L14>:
  # DEBUG Status => Status_32
  # DEBUG BEGIN_STMT
  _71 = Status_32;
  return _71;

}


Flexio_Spi_Ip_SyncTransmit (const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice, uint8 * TxBuffer, uint8 * RxBuffer, uint16 Length, uint32 TimeOut)
{
  boolean RxShifterError;
  boolean TxShifterError;
  uint8 InstanceFlexio;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  uint32 ElapsedTicks;
  uint32 CurrentTicks;
  uint32 TimeoutTicks;
  Flexio_Spi_Ip_StatusType Status;
  struct FLEXIO_Type * Base;
  struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  _Bool _2;
  _Bool _3;
  int _4;
  _Bool _5;
  <unnamed type> _6;
  const struct Flexio_Spi_Ip_ConfigType * _7;
  const struct Flexio_Spi_Ip_ConfigType * _8;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _9;
  struct Flexio_Spi_Ip_DeviceParamsType * _10;
  unsigned char _11;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _12;
  struct Flexio_Spi_Ip_DeviceParamsType * _13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  long unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  long unsigned int _83;
  Flexio_Spi_Ip_StatusType _90;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_33 = 1077035008B;
  # DEBUG Base => Base_33
  # DEBUG BEGIN_STMT
  Status_34 = 0;
  # DEBUG Status => Status_34
  # DEBUG BEGIN_STMT
  TimeoutTicks_38 = OsIf_MicrosToTicks (TimeOut_36(D), 0);
  # DEBUG TimeoutTicks => TimeoutTicks_38
  # DEBUG BEGIN_STMT
  CurrentTicks = 0;
  # DEBUG BEGIN_STMT
  ElapsedTicks_40 = 0;
  # DEBUG ElapsedTicks => ElapsedTicks_40
  # DEBUG BEGIN_STMT
  TxShifterIndex_41 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_41
  # DEBUG BEGIN_STMT
  RxShifterIndex_42 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_42
  # DEBUG BEGIN_STMT
  InstanceFlexio_43 = 0;
  # DEBUG InstanceFlexio => InstanceFlexio_43
  # DEBUG BEGIN_STMT
  TxShifterError_44 = 0;
  # DEBUG TxShifterError => TxShifterError_44
  # DEBUG BEGIN_STMT
  RxShifterError_45 = 0;
  # DEBUG RxShifterError => RxShifterError_45
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_46(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = Length_48(D) != 0;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = TimeOut_36(D) != 0;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  InstanceFlexio_51 = ExternalDevice_46(D)->Instance;
  # DEBUG InstanceFlexio => InstanceFlexio_51
  # DEBUG BEGIN_STMT
  _4 = (int) InstanceFlexio_51;
  State_52 = Flexio_Spi_Ip_apxStateStructureArray[_4];
  # DEBUG State => State_52
  # DEBUG BEGIN_STMT
  _5 = State_52 != 0B;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_17 ();
  # DEBUG BEGIN_STMT
  _6 = State_52->Status;
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_17 ();
  # DEBUG BEGIN_STMT
  Status_87 = 1;
  # DEBUG Status => Status_87
  goto <bb 21>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  State_52->Status = 2;
  # DEBUG BEGIN_STMT
  State_52->ExternalDevice = ExternalDevice_46(D);
  # DEBUG BEGIN_STMT
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_17 ();
  # DEBUG BEGIN_STMT
  _7 = State_52->PhyUnitConfig;
  TxShifterIndex_58 = _7->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_58
  # DEBUG BEGIN_STMT
  _8 = State_52->PhyUnitConfig;
  RxShifterIndex_59 = _8->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_59
  # DEBUG BEGIN_STMT
  _9 = State_52->ExternalDevice;
  _10 = _9->DeviceParams;
  _11 = _10->FrameSize;
  if (_11 <= 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  State_52->ExpectedFifoWrites = Length_48(D);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _12 = State_52->ExternalDevice;
  _13 = _12->DeviceParams;
  _14 = _13->FrameSize;
  if (_14 <= 16)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _15 = Length_48(D) / 2;
  State_52->ExpectedFifoWrites = _15;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _16 = Length_48(D) / 4;
  State_52->ExpectedFifoWrites = _16;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _17 = State_52->ExpectedFifoWrites;
  State_52->ExpectedFifoReads = _17;
  # DEBUG BEGIN_STMT
  State_52->TxIndex = 0;
  # DEBUG BEGIN_STMT
  State_52->TxBuffer = TxBuffer_65(D);
  # DEBUG BEGIN_STMT
  State_52->RxIndex = 0;
  # DEBUG BEGIN_STMT
  State_52->RxBuffer = RxBuffer_68(D);
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_ConfigExternalDevice (State_52);
  # DEBUG BEGIN_STMT
  _18 = OsIf_GetCounter (0);
  CurrentTicks = _18;
  # DEBUG BEGIN_STMT
  goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ElapsedTicks_73 = 0;
  # DEBUG ElapsedTicks => ElapsedTicks_73
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_SyncTransmitProcessData (InstanceFlexio_51);
  # DEBUG BEGIN_STMT
  TxShifterError_76 = Flexio_Mcl_Ip_GetShifterErrorStatus (Base_33, TxShifterIndex_58);
  # DEBUG TxShifterError => TxShifterError_76
  # DEBUG BEGIN_STMT
  RxShifterError_78 = Flexio_Mcl_Ip_GetShifterErrorStatus (Base_33, RxShifterIndex_59);
  # DEBUG RxShifterError => RxShifterError_78
  # DEBUG BEGIN_STMT
  if (TxShifterError_76 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (RxShifterError_78 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (TxShifterError_76 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_33, TxShifterIndex_58);

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (RxShifterError_78 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_33, RxShifterIndex_59);

  <bb 16> :
  # DEBUG BEGIN_STMT
  Status_81 = 2;
  # DEBUG Status => Status_81

  <bb 17> :
  # Status_23 = PHI <Status_24(11), Status_81(16)>
  # DEBUG Status => Status_23
  # DEBUG BEGIN_STMT
  _83 = OsIf_GetElapsed (&CurrentTicks, 0);
  ElapsedTicks_84 = _83 + ElapsedTicks_73;
  # DEBUG ElapsedTicks => ElapsedTicks_84
  # DEBUG BEGIN_STMT
  if (ElapsedTicks_84 >= TimeoutTicks_38)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  Status_85 = 3;
  # DEBUG Status => Status_85

  <bb 19> :
  # Status_24 = PHI <Status_34(9), Status_23(17), Status_85(18)>
  # DEBUG Status => Status_24
  # DEBUG BEGIN_STMT
  _19 = BIT_FIELD_REF <*State_52, 32, 192>;
  _20 = _19;
  _21 = BIT_FIELD_REF <*State_52, 32, 224>;
  _22 = _21;
  if (_20 != _22)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  if (Status_24 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  # Status_25 = PHI <Status_87(3), Status_24(19), Status_24(20)>
  # DEBUG Status => Status_25
  # DEBUG BEGIN_STMT
  if (Status_25 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  if (Length_48(D) == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  State_52->Status = 3;
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  State_52->Status = 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  _90 = Status_25;
  CurrentTicks ={v} {CLOBBER};
  return _90;

}


Flexio_Spi_Ip_DeInit (uint8 Instance)
{
  Flexio_Spi_Ip_StatusType Status;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  _Bool _2;
  _Bool _3;
  <unnamed type> _4;
  int _5;
  Flexio_Spi_Ip_StatusType _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_8(D);
  State_10 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_10
  # DEBUG BEGIN_STMT
  Status_11 = 0;
  # DEBUG Status => Status_11
  # DEBUG BEGIN_STMT
  _2 = Instance_8(D) <= 3;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = State_10 != 0B;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = State_10->Status;
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_15 = 1;
  # DEBUG Status => Status_15
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = (int) Instance_8(D);
  Flexio_Spi_Ip_apxStateStructureArray[_5] = 0B;

  <bb 5> :
  # Status_6 = PHI <Status_15(3), Status_11(4)>
  # DEBUG Status => Status_6
  # DEBUG BEGIN_STMT
  _16 = Status_6;
  return _16;

}


Flexio_Spi_Ip_Init (const struct Flexio_Spi_Ip_ConfigType * PhyUnitConfigPtr)
{
  uint8 FlexioInstance;
  Flexio_Spi_Ip_StatusType Status;
  struct Flexio_Spi_Ip_StateStructureType * State;
  _Bool _1;
  int _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  int _6;
  struct Flexio_Spi_Ip_StateStructureType * _7;
  int _8;
  Flexio_Spi_Ip_StatusType _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_9 = 0;
  # DEBUG Status => Status_9
  # DEBUG BEGIN_STMT
  FlexioInstance_10 = 0;
  # DEBUG FlexioInstance => FlexioInstance_10
  # DEBUG BEGIN_STMT
  _1 = PhyUnitConfigPtr_11(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  FlexioInstance_14 = PhyUnitConfigPtr_11(D)->Instance;
  # DEBUG FlexioInstance => FlexioInstance_14
  # DEBUG BEGIN_STMT
  _2 = (int) FlexioInstance_14;
  State_15 = Flexio_Spi_Ip_apxStateStructureArray[_2];
  # DEBUG State => State_15
  # DEBUG BEGIN_STMT
  _3 = State_15 == 0B;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = PhyUnitConfigPtr_11(D)->StateIndex;
  _5 = (int) _4;
  _6 = (int) FlexioInstance_14;
  _7 = &Flexio_Spi_Ip_axStateStructure[_5];
  Flexio_Spi_Ip_apxStateStructureArray[_6] = _7;
  # DEBUG BEGIN_STMT
  _8 = (int) FlexioInstance_14;
  State_18 = Flexio_Spi_Ip_apxStateStructureArray[_8];
  # DEBUG State => State_18
  # DEBUG BEGIN_STMT
  State_18->PhyUnitConfig = PhyUnitConfigPtr_11(D);
  # DEBUG BEGIN_STMT
  State_18->Status = 1;
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_UpdateTransferMode (FlexioInstance_14, 0);
  # DEBUG BEGIN_STMT
  _22 = Status_9;
  return _22;

}


Flexio_Spi_Ip_ClearShifterTimerRegisters (uint8 Instance)
{
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  struct FLEXIO_Type * Base;
  const struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  const struct Flexio_Spi_Ip_ConfigType * _2;
  const struct Flexio_Spi_Ip_ConfigType * _3;
  int _4;
  int _5;
  int _6;
  int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_8 = 1077035008B;
  # DEBUG Base => Base_8
  # DEBUG BEGIN_STMT
  TxShifterIndex_9 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_9
  # DEBUG BEGIN_STMT
  RxShifterIndex_10 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_10
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_11(D);
  State_13 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_13
  # DEBUG BEGIN_STMT
  _2 = State_13->PhyUnitConfig;
  TxShifterIndex_14 = _2->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_14
  # DEBUG BEGIN_STMT
  _3 = State_13->PhyUnitConfig;
  RxShifterIndex_15 = _3->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_15
  # DEBUG BEGIN_STMT
  _4 = (int) TxShifterIndex_14;
  Base_8->SHIFTCTL[_4] ={v} 0;
  # DEBUG BEGIN_STMT
  _5 = (int) RxShifterIndex_15;
  Base_8->SHIFTCTL[_5] ={v} 0;
  # DEBUG BEGIN_STMT
  _6 = (int) TxShifterIndex_14;
  Base_8->SHIFTCFG[_6] ={v} 0;
  # DEBUG BEGIN_STMT
  _7 = (int) RxShifterIndex_15;
  Base_8->SHIFTCFG[_7] ={v} 0;
  return;

}


Flexio_Spi_Ip_ReadShifterBuffer (uint8 Instance, uint8 RxShifterIndex)
{
  const struct FLEXIO_Type * Base;
  uint32 Data;
  struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _2;
  struct Flexio_Spi_Ip_DeviceParamsType * _3;
  _Bool _4;
  int _5;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _6;
  struct Flexio_Spi_Ip_DeviceParamsType * _7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  uint8 * _12;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _13;
  struct Flexio_Spi_Ip_DeviceParamsType * _14;
  unsigned char _15;
  uint8 * _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _21;
  struct Flexio_Spi_Ip_DeviceParamsType * _22;
  unsigned char _23;
  uint8 * _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  uint8 * _28;
  short unsigned int _29;
  uint8 * _30;
  short unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  uint8 * _34;
  short unsigned int _35;
  short unsigned int _36;
  short unsigned int _37;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Data_40 = 0;
  # DEBUG Data => Data_40
  # DEBUG BEGIN_STMT
  Base_41 = 1077035008B;
  # DEBUG Base => Base_41
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_42(D);
  State_44 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_44
  # DEBUG BEGIN_STMT
  _2 = State_44->ExternalDevice;
  _3 = _2->DeviceParams;
  _4 = _3->Lsb;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = (int) RxShifterIndex_45(D);
  Data_47 ={v} Base_41->SHIFTBUF[_5];
  # DEBUG Data => Data_47
  # DEBUG BEGIN_STMT
  _6 = State_44->ExternalDevice;
  _7 = _6->DeviceParams;
  _8 = _7->FrameSize;
  _9 = (unsigned int) _8;
  _10 = 32 - _9;
  Data_48 = Data_47 >> _10;
  # DEBUG Data => Data_48
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) RxShifterIndex_45(D);
  Data_46 ={v} Base_41->SHIFTBUFBIS[_11];
  # DEBUG Data => Data_46

  <bb 5> :
  # Data_38 = PHI <Data_48(3), Data_46(4)>
  # DEBUG Data => Data_38
  # DEBUG BEGIN_STMT
  _12 = State_44->RxBuffer;
  if (_12 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _13 = State_44->ExternalDevice;
  _14 = _13->DeviceParams;
  _15 = _14->FrameSize;
  if (_15 <= 8)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _16 = State_44->RxBuffer;
  _17 = State_44->RxIndex;
  _18 = (sizetype) _17;
  _19 = _16 + _18;
  _20 = (unsigned char) Data_38;
  *_19 = _20;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _21 = State_44->ExternalDevice;
  _22 = _21->DeviceParams;
  _23 = _22->FrameSize;
  if (_23 <= 16)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _24 = State_44->RxBuffer;
  _25 = State_44->RxIndex;
  _26 = (unsigned int) _25;
  _27 = _26 * 2;
  _28 = _24 + _27;
  _29 = (short unsigned int) Data_38;
  MEM[(uint16 *)_28] = _29;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _30 = State_44->RxBuffer;
  _31 = State_44->RxIndex;
  _32 = (unsigned int) _31;
  _33 = _32 * 4;
  _34 = _30 + _33;
  MEM[(uint32 *)_34] = Data_38;

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = State_44->RxIndex;
  _36 = _35;
  _37 = _36 + 1;
  State_44->RxIndex = _37;
  return;

}


Flexio_Spi_Ip_WriteShifterBuffer (uint8 Instance, uint8 TxShifterIndex)
{
  struct FLEXIO_Type * Base;
  uint32 Data;
  struct Flexio_Spi_Ip_StateStructureType * State;
  int _1;
  uint8 * _2;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _3;
  struct Flexio_Spi_Ip_DeviceParamsType * _4;
  unsigned char _5;
  uint8 * _6;
  short unsigned int _7;
  sizetype _8;
  uint8 * _9;
  unsigned char _10;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _11;
  struct Flexio_Spi_Ip_DeviceParamsType * _12;
  unsigned char _13;
  uint8 * _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  uint8 * _18;
  short unsigned int _19;
  uint8 * _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  uint8 * _24;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _25;
  struct Flexio_Spi_Ip_DeviceParamsType * _26;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _27;
  struct Flexio_Spi_Ip_DeviceParamsType * _28;
  _Bool _29;
  int _30;
  const struct Flexio_Spi_Ip_ExternalDeviceType * _31;
  struct Flexio_Spi_Ip_DeviceParamsType * _32;
  unsigned char _33;
  unsigned int _34;
  unsigned int _35;
  int _36;
  short unsigned int _37;
  short unsigned int _38;
  short unsigned int _39;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_42 = 1077035008B;
  # DEBUG Base => Base_42
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_43(D);
  State_45 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_45
  # DEBUG BEGIN_STMT
  _2 = State_45->TxBuffer;
  if (_2 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = State_45->ExternalDevice;
  _4 = _3->DeviceParams;
  _5 = _4->FrameSize;
  if (_5 <= 8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = State_45->TxBuffer;
  _7 = State_45->TxIndex;
  _8 = (sizetype) _7;
  _9 = _6 + _8;
  _10 = *_9;
  Data_49 = (uint32) _10;
  # DEBUG Data => Data_49
  goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _11 = State_45->ExternalDevice;
  _12 = _11->DeviceParams;
  _13 = _12->FrameSize;
  if (_13 <= 16)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _14 = State_45->TxBuffer;
  _15 = State_45->TxIndex;
  _16 = (unsigned int) _15;
  _17 = _16 * 2;
  _18 = _14 + _17;
  _19 = MEM[(uint16 *)_18];
  Data_48 = (uint32) _19;
  # DEBUG Data => Data_48
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _20 = State_45->TxBuffer;
  _21 = State_45->TxIndex;
  _22 = (unsigned int) _21;
  _23 = _22 * 4;
  _24 = _20 + _23;
  Data_47 = MEM[(uint32 *)_24];
  # DEBUG Data => Data_47
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _25 = State_45->ExternalDevice;
  _26 = _25->DeviceParams;
  Data_46 = _26->DefaultData;
  # DEBUG Data => Data_46

  <bb 9> :
  # Data_40 = PHI <Data_48(6), Data_46(8), Data_49(4), Data_47(7)>
  # DEBUG Data => Data_40
  # DEBUG BEGIN_STMT
  _27 = State_45->ExternalDevice;
  _28 = _27->DeviceParams;
  _29 = _28->Lsb;
  if (_29 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _30 = (int) TxShifterIndex_51(D);
  Base_42->SHIFTBUF[_30] ={v} Data_40;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _31 = State_45->ExternalDevice;
  _32 = _31->DeviceParams;
  _33 = _32->FrameSize;
  _34 = (unsigned int) _33;
  _35 = 32 - _34;
  Data_50 = Data_40 << _35;
  # DEBUG Data => Data_50
  # DEBUG BEGIN_STMT
  _36 = (int) TxShifterIndex_51(D);
  Base_42->SHIFTBUFBIS[_36] ={v} Data_50;

  <bb 12> :
  # DEBUG BEGIN_STMT
  _37 = State_45->TxIndex;
  _38 = _37;
  _39 = _38 + 1;
  State_45->TxIndex = _39;
  return;

}


Flexio_Spi_Ip_SyncTransmitProcessData (const uint8 InstanceFlexio)
{
  const struct Flexio_Spi_Ip_StateStructureType * State;
  const struct FLEXIO_Type * Base;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  boolean IsShifterFlagRaised;
  int _1;
  const struct Flexio_Spi_Ip_ConfigType * _2;
  const struct Flexio_Spi_Ip_ConfigType * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_10 = 1077035008B;
  # DEBUG Base => Base_10
  # DEBUG BEGIN_STMT
  _1 = (int) InstanceFlexio_11(D);
  State_13 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_13
  # DEBUG BEGIN_STMT
  _2 = State_13->PhyUnitConfig;
  TxShifterIndex_14 = _2->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_14
  # DEBUG BEGIN_STMT
  _3 = State_13->PhyUnitConfig;
  RxShifterIndex_15 = _3->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_15
  # DEBUG BEGIN_STMT
  _4 = State_13->TxIndex;
  _5 = State_13->ExpectedFifoWrites;
  if (_4 != _5)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  IsShifterFlagRaised_17 = Flexio_Mcl_Ip_GetShifterStatus (Base_10, TxShifterIndex_14);
  # DEBUG IsShifterFlagRaised => IsShifterFlagRaised_17
  # DEBUG BEGIN_STMT
  if (IsShifterFlagRaised_17 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_WriteShifterBuffer (InstanceFlexio_11(D), TxShifterIndex_14);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = State_13->RxIndex;
  _7 = State_13->ExpectedFifoReads;
  if (_6 != _7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  IsShifterFlagRaised_20 = Flexio_Mcl_Ip_GetShifterStatus (Base_10, RxShifterIndex_15);
  # DEBUG IsShifterFlagRaised => IsShifterFlagRaised_20
  # DEBUG BEGIN_STMT
  if (IsShifterFlagRaised_20 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_ReadShifterBuffer (InstanceFlexio_11(D), RxShifterIndex_15);

  <bb 8> :
  return;

}


Flexio_Spi_Ip_ConfigExternalDevice (const struct Flexio_Spi_Ip_StateStructureType * State)
{
  struct FLEXIO_Type * Base;
  const struct Flexio_Spi_Ip_ExternalDeviceType * ExternalDevice;
  uint32 FrameSize;
  uint32 ClkTimerTrgsel;
  uint8 InstanceFlexio;
  uint8 CsTimerIndex;
  uint8 ClkTimerIndex;
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  struct Flexio_Spi_Ip_DeviceParamsType * _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  const struct Flexio_Spi_Ip_ConfigType * _5;
  const struct Flexio_Spi_Ip_ConfigType * _6;
  const struct Flexio_Spi_Ip_ConfigType * _7;
  const struct Flexio_Spi_Ip_ConfigType * _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  unsigned int _12;
  unsigned char _13;
  int _14;
  unsigned int _15;
  unsigned char _16;
  unsigned char _17;
  int _18;
  unsigned int _19;
  unsigned char _20;
  int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  int _25;
  unsigned int _26;
  unsigned char _27;
  int _28;
  unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  int _32;
  long unsigned int _33;
  int _34;
  long unsigned int _35;
  int _36;
  long unsigned int _37;
  int _38;
  long unsigned int _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  int _46;
  long unsigned int _47;
  int _48;
  long unsigned int _49;
  long unsigned int _50;
  int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  int _55;
  long unsigned int _56;
  int _57;
  long unsigned int _58;
  int _59;
  long unsigned int _60;
  int _61;
  long unsigned int _62;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Base_63 = 1077035008B;
  # DEBUG Base => Base_63
  # DEBUG BEGIN_STMT
  ExternalDevice_66 = State_65(D)->ExternalDevice;
  # DEBUG ExternalDevice => ExternalDevice_66
  # DEBUG BEGIN_STMT
  InstanceFlexio_67 = ExternalDevice_66->Instance;
  # DEBUG InstanceFlexio => InstanceFlexio_67
  # DEBUG BEGIN_STMT
  _1 = ExternalDevice_66->DeviceParams;
  _2 = _1->FrameSize;
  _3 = (long unsigned int) _2;
  _4 = _3 * 2;
  FrameSize_68 = _4 + 4294967295;
  # DEBUG FrameSize => FrameSize_68
  # DEBUG BEGIN_STMT
  _5 = State_65(D)->PhyUnitConfig;
  TxShifterIndex_69 = _5->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_69
  # DEBUG BEGIN_STMT
  _6 = State_65(D)->PhyUnitConfig;
  RxShifterIndex_70 = _6->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_70
  # DEBUG BEGIN_STMT
  _7 = State_65(D)->PhyUnitConfig;
  ClkTimerIndex_71 = _7->ClkTimerIndex;
  # DEBUG ClkTimerIndex => ClkTimerIndex_71
  # DEBUG BEGIN_STMT
  _8 = State_65(D)->PhyUnitConfig;
  CsTimerIndex_72 = _8->CsTimerIndex;
  # DEBUG CsTimerIndex => CsTimerIndex_72
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) TxShifterIndex_69;
  _10 = _9 * 4;
  ClkTimerTrgsel_73 = _10 + 1;
  # DEBUG ClkTimerTrgsel => ClkTimerTrgsel_73
  # DEBUG BEGIN_STMT
  _11 = (int) TxShifterIndex_69;
  _12 = 1 << _11;
  _13 = (unsigned char) _12;
  _14 = (int) RxShifterIndex_70;
  _15 = 1 << _14;
  _16 = (unsigned char) _15;
  _17 = _13 | _16;
  Flexio_Mcl_Ip_SetShifterInterrupt (Base_63, _17, 0);
  # DEBUG BEGIN_STMT
  _18 = (int) TxShifterIndex_69;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = (int) RxShifterIndex_70;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _20 | _23;
  Flexio_Mcl_Ip_SetShifterDMARequest (Base_63, _24, 0);
  # DEBUG BEGIN_STMT
  _25 = (int) TxShifterIndex_69;
  _26 = 1 << _25;
  _27 = (unsigned char) _26;
  _28 = (int) RxShifterIndex_70;
  _29 = 1 << _28;
  _30 = (unsigned char) _29;
  _31 = _27 | _30;
  Flexio_Mcl_Ip_SetShifterErrorInterrupt (Base_63, _31, 0);
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_ClearShifterTimerRegisters (InstanceFlexio_67);
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_63, TxShifterIndex_69);
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterErrorStatus (Base_63, RxShifterIndex_70);
  # DEBUG BEGIN_STMT
  Flexio_Mcl_Ip_ClearShifterStatus (Base_63, RxShifterIndex_70);
  # DEBUG BEGIN_STMT
  _32 = (int) TxShifterIndex_69;
  _33 = ExternalDevice_66->TxShiftCtl;
  Base_63->SHIFTCTL[_32] ={v} _33;
  # DEBUG BEGIN_STMT
  _34 = (int) TxShifterIndex_69;
  _35 = ExternalDevice_66->TxShiftCfg;
  Base_63->SHIFTCFG[_34] ={v} _35;
  # DEBUG BEGIN_STMT
  _36 = (int) RxShifterIndex_70;
  _37 = ExternalDevice_66->RxShiftCtl;
  Base_63->SHIFTCTL[_36] ={v} _37;
  # DEBUG BEGIN_STMT
  _38 = (int) RxShifterIndex_70;
  _39 = ExternalDevice_66->RxShiftCfg;
  Base_63->SHIFTCFG[_38] ={v} _39;
  # DEBUG BEGIN_STMT
  FrameSize_85 = FrameSize_68 << 8;
  # DEBUG FrameSize => FrameSize_85
  # DEBUG BEGIN_STMT
  _40 = (int) ClkTimerIndex_71;
  _41 = ExternalDevice_66->ClkTimeCfg;
  Base_63->TIMCFG[_40] ={v} _41;
  # DEBUG BEGIN_STMT
  _42 = ExternalDevice_66->ClkTimeCmpBaudRate;
  _43 = _42 & 255;
  _44 = FrameSize_85 & 65280;
  _45 = _43 | _44;
  _46 = (int) ClkTimerIndex_71;
  _47 = _45 & 65535;
  Base_63->TIMCMP[_46] ={v} _47;
  # DEBUG BEGIN_STMT
  _48 = (int) ClkTimerIndex_71;
  _49 ={v} Base_63->TIMCFG[_48];
  _50 = ExternalDevice_66->ClkTimeCfgTimDec;
  _51 = (int) ClkTimerIndex_71;
  _52 = _49 | _50;
  Base_63->TIMCFG[_51] ={v} _52;
  # DEBUG BEGIN_STMT
  _53 = ExternalDevice_66->ClkTimeCtl;
  _54 = ClkTimerTrgsel_73 << 24;
  _55 = (int) ClkTimerIndex_71;
  _56 = _53 | _54;
  Base_63->TIMCTL[_55] ={v} _56;
  # DEBUG BEGIN_STMT
  _57 = (int) CsTimerIndex_72;
  _58 = ExternalDevice_66->CsTimeCmp;
  Base_63->TIMCMP[_57] ={v} _58;
  # DEBUG BEGIN_STMT
  _59 = (int) CsTimerIndex_72;
  _60 = ExternalDevice_66->CsTimeCfg;
  Base_63->TIMCFG[_59] ={v} _60;
  # DEBUG BEGIN_STMT
  _61 = (int) CsTimerIndex_72;
  _62 = ExternalDevice_66->CsTimeCtl;
  Base_63->TIMCTL[_61] ={v} _62;
  return;

}


Flexio_Spi_Ip_TransferProcess (uint8 Instance, uint8 ShifterIndex, uint8 ShifterMaskFlag, uint8 ShifterErrMaskFlag)
{
  uint8 RxShifterIndex;
  uint8 TxShifterIndex;
  boolean ErrorFlag;
  struct Flexio_Spi_Ip_StateStructureType * State;
  struct FLEXIO_Type * Base;
  int _1;
  <unnamed type> _2;
  const struct Flexio_Spi_Ip_ConfigType * _3;
  const struct Flexio_Spi_Ip_ConfigType * _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;
  int _11;
  unsigned int _12;
  unsigned char _13;
  int _14;
  unsigned int _15;
  unsigned char _16;
  unsigned char _17;
  int _18;
  unsigned int _19;
  unsigned char _20;
  int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  void (*<T4e5>) (uint8, Flexio_Spi_Ip_EventType) _25;
  void (*<T4e5>) (uint8, Flexio_Spi_Ip_EventType) _26;
  void (*<T4e5>) (uint8, Flexio_Spi_Ip_EventType) _27;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Base_33 = 1077035008B;
  # DEBUG Base => Base_33
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_34(D);
  State_36 = Flexio_Spi_Ip_apxStateStructureArray[_1];
  # DEBUG State => State_36
  # DEBUG BEGIN_STMT
  ErrorFlag_37 = 0;
  # DEBUG ErrorFlag => ErrorFlag_37
  # DEBUG BEGIN_STMT
  TxShifterIndex_38 = 0;
  # DEBUG TxShifterIndex => TxShifterIndex_38
  # DEBUG BEGIN_STMT
  RxShifterIndex_39 = 0;
  # DEBUG RxShifterIndex => RxShifterIndex_39
  # DEBUG BEGIN_STMT
  _2 = State_36->Status;
  if (_2 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = State_36->PhyUnitConfig;
  TxShifterIndex_40 = _3->TxShifterIndex;
  # DEBUG TxShifterIndex => TxShifterIndex_40
  # DEBUG BEGIN_STMT
  _4 = State_36->PhyUnitConfig;
  RxShifterIndex_41 = _4->RxShifterIndex;
  # DEBUG RxShifterIndex => RxShifterIndex_41
  # DEBUG BEGIN_STMT
  if (ShifterErrMaskFlag_42(D) != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ErrorFlag_47 = 1;
  # DEBUG ErrorFlag => ErrorFlag_47
  goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ShifterMaskFlag_43(D) != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _5 = State_36->TxIndex;
  _6 = State_36->ExpectedFifoWrites;
  if (_5 != _6)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (ShifterIndex_44(D) == TxShifterIndex_40)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_WriteShifterBuffer (Instance_34(D), TxShifterIndex_40);

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = State_36->RxIndex;
  _8 = State_36->ExpectedFifoReads;
  if (_7 != _8)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (ShifterIndex_44(D) == RxShifterIndex_41)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Flexio_Spi_Ip_ReadShifterBuffer (Instance_34(D), RxShifterIndex_41);

  <bb 12> :
  # ErrorFlag_28 = PHI <ErrorFlag_47(4), ErrorFlag_37(5), ErrorFlag_37(9), ErrorFlag_37(10), ErrorFlag_37(11)>
  # DEBUG ErrorFlag => ErrorFlag_28
  # DEBUG BEGIN_STMT
  _9 = State_36->RxIndex;
  _10 = State_36->ExpectedFifoReads;
  if (_9 == _10)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ErrorFlag_28 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _11 = (int) TxShifterIndex_40;
  _12 = 1 << _11;
  _13 = (unsigned char) _12;
  _14 = (int) RxShifterIndex_41;
  _15 = 1 << _14;
  _16 = (unsigned char) _15;
  _17 = _13 | _16;
  Flexio_Mcl_Ip_SetShifterInterrupt (Base_33, _17, 0);
  # DEBUG BEGIN_STMT
  _18 = (int) TxShifterIndex_40;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = (int) RxShifterIndex_41;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _20 | _23;
  Flexio_Mcl_Ip_SetShifterErrorInterrupt (Base_33, _24, 0);
  # DEBUG BEGIN_STMT
  if (ErrorFlag_28 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  State_36->Status = 3;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  State_36->Status = 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  _25 = State_36->Callback;
  if (_25 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  if (ErrorFlag_28 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _26 = State_36->Callback;
  _26 (Instance_34(D), 1);
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _27 = State_36->Callback;
  _27 (Instance_34(D), 0);

  <bb 21> :
  return;

}


DevAssert (volatile boolean x)
{
  _Bool x.0_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  x.0_1 ={v} x;
  if (x.0_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("BKPT #0");
  # DEBUG BEGIN_STMT
  goto <bb 3>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


